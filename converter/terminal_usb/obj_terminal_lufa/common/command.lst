   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.switch_default_layer,"ax",@progbits
  12               	switch_default_layer:
  13               	.LFB18:
  14               		.file 1 "/users/hunter/downloads/tmk_core/common/command.c"
   1:/users/hunter/downloads/tmk_core/common/command.c **** /*
   2:/users/hunter/downloads/tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:/users/hunter/downloads/tmk_core/common/command.c **** 
   4:/users/hunter/downloads/tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:/users/hunter/downloads/tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:/users/hunter/downloads/tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:/users/hunter/downloads/tmk_core/common/command.c **** (at your option) any later version.
   8:/users/hunter/downloads/tmk_core/common/command.c **** 
   9:/users/hunter/downloads/tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:/users/hunter/downloads/tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/users/hunter/downloads/tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:/users/hunter/downloads/tmk_core/common/command.c **** GNU General Public License for more details.
  13:/users/hunter/downloads/tmk_core/common/command.c **** 
  14:/users/hunter/downloads/tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:/users/hunter/downloads/tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:/users/hunter/downloads/tmk_core/common/command.c **** */
  17:/users/hunter/downloads/tmk_core/common/command.c **** #include <stdint.h>
  18:/users/hunter/downloads/tmk_core/common/command.c **** #include <stdbool.h>
  19:/users/hunter/downloads/tmk_core/common/command.c **** #include "wait.h"
  20:/users/hunter/downloads/tmk_core/common/command.c **** #include "keycode.h"
  21:/users/hunter/downloads/tmk_core/common/command.c **** #include "host.h"
  22:/users/hunter/downloads/tmk_core/common/command.c **** #include "keymap.h"
  23:/users/hunter/downloads/tmk_core/common/command.c **** #include "print.h"
  24:/users/hunter/downloads/tmk_core/common/command.c **** #include "debug.h"
  25:/users/hunter/downloads/tmk_core/common/command.c **** #include "util.h"
  26:/users/hunter/downloads/tmk_core/common/command.c **** #include "timer.h"
  27:/users/hunter/downloads/tmk_core/common/command.c **** #include "keyboard.h"
  28:/users/hunter/downloads/tmk_core/common/command.c **** #include "bootloader.h"
  29:/users/hunter/downloads/tmk_core/common/command.c **** #include "action_layer.h"
  30:/users/hunter/downloads/tmk_core/common/command.c **** #include "action_util.h"
  31:/users/hunter/downloads/tmk_core/common/command.c **** #include "eeconfig.h"
  32:/users/hunter/downloads/tmk_core/common/command.c **** #include "sleep_led.h"
  33:/users/hunter/downloads/tmk_core/common/command.c **** #include "led.h"
  34:/users/hunter/downloads/tmk_core/common/command.c **** #include "command.h"
  35:/users/hunter/downloads/tmk_core/common/command.c **** #include "backlight.h"
  36:/users/hunter/downloads/tmk_core/common/command.c **** 
  37:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:/users/hunter/downloads/tmk_core/common/command.c **** #include "mousekey.h"
  39:/users/hunter/downloads/tmk_core/common/command.c **** #endif
  40:/users/hunter/downloads/tmk_core/common/command.c **** 
  41:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:/users/hunter/downloads/tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:/users/hunter/downloads/tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:/users/hunter/downloads/tmk_core/common/command.c **** #       include "usb_extra.h"
  45:/users/hunter/downloads/tmk_core/common/command.c **** #   endif
  46:/users/hunter/downloads/tmk_core/common/command.c **** #endif
  47:/users/hunter/downloads/tmk_core/common/command.c **** 
  48:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:/users/hunter/downloads/tmk_core/common/command.c **** #   include "usbdrv.h"
  50:/users/hunter/downloads/tmk_core/common/command.c **** #endif
  51:/users/hunter/downloads/tmk_core/common/command.c **** 
  52:/users/hunter/downloads/tmk_core/common/command.c **** 
  53:/users/hunter/downloads/tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:/users/hunter/downloads/tmk_core/common/command.c **** static void command_common_help(void);
  55:/users/hunter/downloads/tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:/users/hunter/downloads/tmk_core/common/command.c **** static void command_console_help(void);
  57:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:/users/hunter/downloads/tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:/users/hunter/downloads/tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:/users/hunter/downloads/tmk_core/common/command.c **** #endif
  61:/users/hunter/downloads/tmk_core/common/command.c **** 
  62:/users/hunter/downloads/tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  63:/users/hunter/downloads/tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  64:/users/hunter/downloads/tmk_core/common/command.c **** 
  65:/users/hunter/downloads/tmk_core/common/command.c **** 
  66:/users/hunter/downloads/tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  67:/users/hunter/downloads/tmk_core/common/command.c **** 
  68:/users/hunter/downloads/tmk_core/common/command.c **** 
  69:/users/hunter/downloads/tmk_core/common/command.c **** bool command_proc(uint8_t code)
  70:/users/hunter/downloads/tmk_core/common/command.c **** {
  71:/users/hunter/downloads/tmk_core/common/command.c ****     switch (command_state) {
  72:/users/hunter/downloads/tmk_core/common/command.c ****         case ONESHOT:
  73:/users/hunter/downloads/tmk_core/common/command.c ****             if (!IS_COMMAND())
  74:/users/hunter/downloads/tmk_core/common/command.c ****                 return false;
  75:/users/hunter/downloads/tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  76:/users/hunter/downloads/tmk_core/common/command.c ****             break;
  77:/users/hunter/downloads/tmk_core/common/command.c ****         case CONSOLE:
  78:/users/hunter/downloads/tmk_core/common/command.c ****             if (IS_COMMAND())
  79:/users/hunter/downloads/tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  80:/users/hunter/downloads/tmk_core/common/command.c ****             else
  81:/users/hunter/downloads/tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  82:/users/hunter/downloads/tmk_core/common/command.c ****             break;
  83:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  84:/users/hunter/downloads/tmk_core/common/command.c ****         case MOUSEKEY:
  85:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_console(code);
  86:/users/hunter/downloads/tmk_core/common/command.c ****             break;
  87:/users/hunter/downloads/tmk_core/common/command.c **** #endif
  88:/users/hunter/downloads/tmk_core/common/command.c ****         default:
  89:/users/hunter/downloads/tmk_core/common/command.c ****             command_state = ONESHOT;
  90:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
  91:/users/hunter/downloads/tmk_core/common/command.c ****     }
  92:/users/hunter/downloads/tmk_core/common/command.c ****     return true;
  93:/users/hunter/downloads/tmk_core/common/command.c **** }
  94:/users/hunter/downloads/tmk_core/common/command.c **** 
  95:/users/hunter/downloads/tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  96:/users/hunter/downloads/tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  97:/users/hunter/downloads/tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  98:/users/hunter/downloads/tmk_core/common/command.c **** bool command_extra(uint8_t code)
  99:/users/hunter/downloads/tmk_core/common/command.c **** {
 100:/users/hunter/downloads/tmk_core/common/command.c ****     (void)code;
 101:/users/hunter/downloads/tmk_core/common/command.c ****     return false;
 102:/users/hunter/downloads/tmk_core/common/command.c **** }
 103:/users/hunter/downloads/tmk_core/common/command.c **** 
 104:/users/hunter/downloads/tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 105:/users/hunter/downloads/tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 106:/users/hunter/downloads/tmk_core/common/command.c **** {
 107:/users/hunter/downloads/tmk_core/common/command.c ****     (void)code;
 108:/users/hunter/downloads/tmk_core/common/command.c ****     return false;
 109:/users/hunter/downloads/tmk_core/common/command.c **** }
 110:/users/hunter/downloads/tmk_core/common/command.c **** 
 111:/users/hunter/downloads/tmk_core/common/command.c **** 
 112:/users/hunter/downloads/tmk_core/common/command.c **** /***********************************************************
 113:/users/hunter/downloads/tmk_core/common/command.c ****  * Command common
 114:/users/hunter/downloads/tmk_core/common/command.c ****  ***********************************************************/
 115:/users/hunter/downloads/tmk_core/common/command.c **** static void command_common_help(void)
 116:/users/hunter/downloads/tmk_core/common/command.c **** {
 117:/users/hunter/downloads/tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 118:/users/hunter/downloads/tmk_core/common/command.c ****           "d:	debug\n"
 119:/users/hunter/downloads/tmk_core/common/command.c ****           "x:	debug matrix\n"
 120:/users/hunter/downloads/tmk_core/common/command.c ****           "k:	debug keyboard\n"
 121:/users/hunter/downloads/tmk_core/common/command.c ****           "m:	debug mouse\n"
 122:/users/hunter/downloads/tmk_core/common/command.c ****           "v:	version\n"
 123:/users/hunter/downloads/tmk_core/common/command.c ****           "s:	status\n"
 124:/users/hunter/downloads/tmk_core/common/command.c ****           "c:	console mode\n"
 125:/users/hunter/downloads/tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 126:/users/hunter/downloads/tmk_core/common/command.c ****           "Paus:	bootloader\n"
 127:/users/hunter/downloads/tmk_core/common/command.c **** 
 128:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 129:/users/hunter/downloads/tmk_core/common/command.c ****           "Caps:	Lock\n"
 130:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 131:/users/hunter/downloads/tmk_core/common/command.c **** 
 132:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 133:/users/hunter/downloads/tmk_core/common/command.c ****           "e:	eeprom\n"
 134:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 135:/users/hunter/downloads/tmk_core/common/command.c **** 
 136:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 137:/users/hunter/downloads/tmk_core/common/command.c ****           "n:	NKRO\n"
 138:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 139:/users/hunter/downloads/tmk_core/common/command.c **** 
 140:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 141:/users/hunter/downloads/tmk_core/common/command.c ****           "z:	sleep LED test\n"
 142:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 143:/users/hunter/downloads/tmk_core/common/command.c ****     );
 144:/users/hunter/downloads/tmk_core/common/command.c **** }
 145:/users/hunter/downloads/tmk_core/common/command.c **** 
 146:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 147:/users/hunter/downloads/tmk_core/common/command.c **** static void print_eeconfig(void)
 148:/users/hunter/downloads/tmk_core/common/command.c **** {
 149:/users/hunter/downloads/tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 150:/users/hunter/downloads/tmk_core/common/command.c **** 
 151:/users/hunter/downloads/tmk_core/common/command.c ****     debug_config_t dc;
 152:/users/hunter/downloads/tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 153:/users/hunter/downloads/tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 154:/users/hunter/downloads/tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 155:/users/hunter/downloads/tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 156:/users/hunter/downloads/tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 157:/users/hunter/downloads/tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 158:/users/hunter/downloads/tmk_core/common/command.c **** 
 159:/users/hunter/downloads/tmk_core/common/command.c ****     keymap_config_t kc;
 160:/users/hunter/downloads/tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 161:/users/hunter/downloads/tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 162:/users/hunter/downloads/tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 163:/users/hunter/downloads/tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 164:/users/hunter/downloads/tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 165:/users/hunter/downloads/tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 166:/users/hunter/downloads/tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 167:/users/hunter/downloads/tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 168:/users/hunter/downloads/tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 169:/users/hunter/downloads/tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 170:/users/hunter/downloads/tmk_core/common/command.c **** 
 171:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 172:/users/hunter/downloads/tmk_core/common/command.c ****     backlight_config_t bc;
 173:/users/hunter/downloads/tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 174:/users/hunter/downloads/tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 175:/users/hunter/downloads/tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 176:/users/hunter/downloads/tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 177:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 178:/users/hunter/downloads/tmk_core/common/command.c **** }
 179:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 180:/users/hunter/downloads/tmk_core/common/command.c **** 
 181:/users/hunter/downloads/tmk_core/common/command.c **** static bool command_common(uint8_t code)
 182:/users/hunter/downloads/tmk_core/common/command.c **** {
 183:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 184:/users/hunter/downloads/tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 185:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 186:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 187:/users/hunter/downloads/tmk_core/common/command.c ****     static bool sleep_led_test = false;
 188:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 189:/users/hunter/downloads/tmk_core/common/command.c ****     switch (code) {
 190:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 191:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_Z:
 192:/users/hunter/downloads/tmk_core/common/command.c ****             // test breathing sleep LED
 193:/users/hunter/downloads/tmk_core/common/command.c ****             print("Sleep LED test\n");
 194:/users/hunter/downloads/tmk_core/common/command.c ****             if (sleep_led_test) {
 195:/users/hunter/downloads/tmk_core/common/command.c ****                 sleep_led_disable();
 196:/users/hunter/downloads/tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 197:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 198:/users/hunter/downloads/tmk_core/common/command.c ****                 sleep_led_enable();
 199:/users/hunter/downloads/tmk_core/common/command.c ****             }
 200:/users/hunter/downloads/tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 201:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 202:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 203:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 204:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_E:
 205:/users/hunter/downloads/tmk_core/common/command.c ****             print("eeconfig:\n");
 206:/users/hunter/downloads/tmk_core/common/command.c ****             print_eeconfig();
 207:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 208:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 209:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 210:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_CAPSLOCK:
 211:/users/hunter/downloads/tmk_core/common/command.c ****             if (host_get_driver()) {
 212:/users/hunter/downloads/tmk_core/common/command.c ****                 host_driver = host_get_driver();
 213:/users/hunter/downloads/tmk_core/common/command.c ****                 clear_keyboard();
 214:/users/hunter/downloads/tmk_core/common/command.c ****                 host_set_driver(0);
 215:/users/hunter/downloads/tmk_core/common/command.c ****                 print("Locked.\n");
 216:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 217:/users/hunter/downloads/tmk_core/common/command.c ****                 host_set_driver(host_driver);
 218:/users/hunter/downloads/tmk_core/common/command.c ****                 print("Unlocked.\n");
 219:/users/hunter/downloads/tmk_core/common/command.c ****             }
 220:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 221:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 222:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_H:
 223:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 224:/users/hunter/downloads/tmk_core/common/command.c ****             command_common_help();
 225:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 226:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_C:
 227:/users/hunter/downloads/tmk_core/common/command.c ****             debug_matrix   = false;
 228:/users/hunter/downloads/tmk_core/common/command.c ****             debug_keyboard = false;
 229:/users/hunter/downloads/tmk_core/common/command.c ****             debug_mouse    = false;
 230:/users/hunter/downloads/tmk_core/common/command.c ****             debug_enable   = false;
 231:/users/hunter/downloads/tmk_core/common/command.c ****             command_console_help();
 232:/users/hunter/downloads/tmk_core/common/command.c ****             print("C> ");
 233:/users/hunter/downloads/tmk_core/common/command.c ****             command_state = CONSOLE;
 234:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 235:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_PAUSE:
 236:/users/hunter/downloads/tmk_core/common/command.c ****             clear_keyboard();
 237:/users/hunter/downloads/tmk_core/common/command.c ****             print("\n\nbootloader... ");
 238:/users/hunter/downloads/tmk_core/common/command.c ****             wait_ms(1000);
 239:/users/hunter/downloads/tmk_core/common/command.c ****             bootloader_jump(); // not return
 240:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 241:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_D:
 242:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_enable) {
 243:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\ndebug: off\n");
 244:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_matrix   = false;
 245:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_keyboard = false;
 246:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_mouse    = false;
 247:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable   = false;
 248:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 249:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\ndebug: on\n");
 250:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable   = true;
 251:/users/hunter/downloads/tmk_core/common/command.c ****             }
 252:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 253:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 254:/users/hunter/downloads/tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 255:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_matrix) {
 256:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 257:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 258:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 259:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 260:/users/hunter/downloads/tmk_core/common/command.c ****             }
 261:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 262:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 263:/users/hunter/downloads/tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 264:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_keyboard) {
 265:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 266:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 267:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 268:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 269:/users/hunter/downloads/tmk_core/common/command.c ****             }
 270:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 271:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 272:/users/hunter/downloads/tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 273:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_mouse) {
 274:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmouse: on\n");
 275:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 276:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 277:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmouse: off\n");
 278:/users/hunter/downloads/tmk_core/common/command.c ****             }
 279:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 280:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_V: // print version & information
 281:/users/hunter/downloads/tmk_core/common/command.c ****             print("\n\t- Version -\n");
 282:/users/hunter/downloads/tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 283:/users/hunter/downloads/tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 284:/users/hunter/downloads/tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 285:/users/hunter/downloads/tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 286:/users/hunter/downloads/tmk_core/common/command.c ****             print("BUILD: " STR(VERSION) " (" __TIME__ " " __DATE__ ")\n");
 287:/users/hunter/downloads/tmk_core/common/command.c ****             /* build options */
 288:/users/hunter/downloads/tmk_core/common/command.c ****             print("OPTIONS:"
 289:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 290:/users/hunter/downloads/tmk_core/common/command.c ****             " PJRC"
 291:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 292:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 293:/users/hunter/downloads/tmk_core/common/command.c ****             " LUFA"
 294:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 295:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 296:/users/hunter/downloads/tmk_core/common/command.c ****             " VUSB"
 297:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 298:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 299:/users/hunter/downloads/tmk_core/common/command.c ****             " CHIBIOS"
 300:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 301:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 302:/users/hunter/downloads/tmk_core/common/command.c ****             " BOOTMAGIC"
 303:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 304:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 305:/users/hunter/downloads/tmk_core/common/command.c ****             " MOUSEKEY"
 306:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 307:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 308:/users/hunter/downloads/tmk_core/common/command.c ****             " EXTRAKEY"
 309:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 310:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 311:/users/hunter/downloads/tmk_core/common/command.c ****             " CONSOLE"
 312:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 313:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 314:/users/hunter/downloads/tmk_core/common/command.c ****             " COMMAND"
 315:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 316:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 317:/users/hunter/downloads/tmk_core/common/command.c ****             " NKRO"
 318:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 319:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 320:/users/hunter/downloads/tmk_core/common/command.c ****             " KEYMAP_SECTION"
 321:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 322:/users/hunter/downloads/tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 323:/users/hunter/downloads/tmk_core/common/command.c **** 
 324:/users/hunter/downloads/tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 325:/users/hunter/downloads/tmk_core/common/command.c **** #if defined(__AVR__)
 326:/users/hunter/downloads/tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 327:/users/hunter/downloads/tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 328:/users/hunter/downloads/tmk_core/common/command.c **** #elif defined(__arm__)
 329:/users/hunter/downloads/tmk_core/common/command.c ****             // TODO
 330:/users/hunter/downloads/tmk_core/common/command.c ****             );
 331:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 332:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 333:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_S:
 334:/users/hunter/downloads/tmk_core/common/command.c ****             print("\n\t- Status -\n");
 335:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 336:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 337:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 338:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 339:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 340:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 341:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 342:/users/hunter/downloads/tmk_core/common/command.c **** 
 343:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 344:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(UDCON);
 345:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 346:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(UDINT);
 347:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 348:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 349:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 350:/users/hunter/downloads/tmk_core/common/command.c **** 
 351:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 352:/users/hunter/downloads/tmk_core/common/command.c **** #   if USB_COUNT_SOF
 353:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 354:/users/hunter/downloads/tmk_core/common/command.c **** #   endif
 355:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 356:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 357:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 358:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_N:
 359:/users/hunter/downloads/tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 360:/users/hunter/downloads/tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 361:/users/hunter/downloads/tmk_core/common/command.c ****             if (keyboard_nkro) {
 362:/users/hunter/downloads/tmk_core/common/command.c ****                 print("NKRO: on\n");
 363:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 364:/users/hunter/downloads/tmk_core/common/command.c ****                 print("NKRO: off\n");
 365:/users/hunter/downloads/tmk_core/common/command.c ****             }
 366:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 367:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 368:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_ESC:
 369:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_GRV:
 370:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_0:
 371:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_F10:
 372:/users/hunter/downloads/tmk_core/common/command.c ****             switch_default_layer(0);
 373:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 374:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_1 ... KC_9:
 375:/users/hunter/downloads/tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 376:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 377:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 378:/users/hunter/downloads/tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 379:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 380:/users/hunter/downloads/tmk_core/common/command.c ****         default:
 381:/users/hunter/downloads/tmk_core/common/command.c ****             print("?");
 382:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 383:/users/hunter/downloads/tmk_core/common/command.c ****     }
 384:/users/hunter/downloads/tmk_core/common/command.c ****     return true;
 385:/users/hunter/downloads/tmk_core/common/command.c **** }
 386:/users/hunter/downloads/tmk_core/common/command.c **** 
 387:/users/hunter/downloads/tmk_core/common/command.c **** 
 388:/users/hunter/downloads/tmk_core/common/command.c **** /***********************************************************
 389:/users/hunter/downloads/tmk_core/common/command.c ****  * Command console
 390:/users/hunter/downloads/tmk_core/common/command.c ****  ***********************************************************/
 391:/users/hunter/downloads/tmk_core/common/command.c **** static void command_console_help(void)
 392:/users/hunter/downloads/tmk_core/common/command.c **** {
 393:/users/hunter/downloads/tmk_core/common/command.c ****     print("\n\t- Console -\n"
 394:/users/hunter/downloads/tmk_core/common/command.c ****           "ESC/q:	quit\n"
 395:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 396:/users/hunter/downloads/tmk_core/common/command.c ****           "m:	mousekey\n"
 397:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 398:/users/hunter/downloads/tmk_core/common/command.c ****     );
 399:/users/hunter/downloads/tmk_core/common/command.c **** }
 400:/users/hunter/downloads/tmk_core/common/command.c **** 
 401:/users/hunter/downloads/tmk_core/common/command.c **** static bool command_console(uint8_t code)
 402:/users/hunter/downloads/tmk_core/common/command.c **** {
 403:/users/hunter/downloads/tmk_core/common/command.c ****     switch (code) {
 404:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_H:
 405:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 406:/users/hunter/downloads/tmk_core/common/command.c ****             command_console_help();
 407:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 408:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_Q:
 409:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_ESC:
 410:/users/hunter/downloads/tmk_core/common/command.c ****             command_state = ONESHOT;
 411:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 412:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 413:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_M:
 414:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_console_help();
 415:/users/hunter/downloads/tmk_core/common/command.c ****             print("M> ");
 416:/users/hunter/downloads/tmk_core/common/command.c ****             command_state = MOUSEKEY;
 417:/users/hunter/downloads/tmk_core/common/command.c ****             return true;
 418:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 419:/users/hunter/downloads/tmk_core/common/command.c ****         default:
 420:/users/hunter/downloads/tmk_core/common/command.c ****             print("?");
 421:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 422:/users/hunter/downloads/tmk_core/common/command.c ****     }
 423:/users/hunter/downloads/tmk_core/common/command.c ****     print("C> ");
 424:/users/hunter/downloads/tmk_core/common/command.c ****     return true;
 425:/users/hunter/downloads/tmk_core/common/command.c **** }
 426:/users/hunter/downloads/tmk_core/common/command.c **** 
 427:/users/hunter/downloads/tmk_core/common/command.c **** 
 428:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 429:/users/hunter/downloads/tmk_core/common/command.c **** /***********************************************************
 430:/users/hunter/downloads/tmk_core/common/command.c ****  * Mousekey console
 431:/users/hunter/downloads/tmk_core/common/command.c ****  ***********************************************************/
 432:/users/hunter/downloads/tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 433:/users/hunter/downloads/tmk_core/common/command.c **** 
 434:/users/hunter/downloads/tmk_core/common/command.c **** static void mousekey_param_print(void)
 435:/users/hunter/downloads/tmk_core/common/command.c **** {
 436:/users/hunter/downloads/tmk_core/common/command.c ****     print("\n\t- Values -\n");
 437:/users/hunter/downloads/tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 438:/users/hunter/downloads/tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 439:/users/hunter/downloads/tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 440:/users/hunter/downloads/tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 441:/users/hunter/downloads/tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 442:/users/hunter/downloads/tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 443:/users/hunter/downloads/tmk_core/common/command.c **** }
 444:/users/hunter/downloads/tmk_core/common/command.c **** 
 445:/users/hunter/downloads/tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 446:/users/hunter/downloads/tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 447:/users/hunter/downloads/tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 448:/users/hunter/downloads/tmk_core/common/command.c **** {
 449:/users/hunter/downloads/tmk_core/common/command.c ****     switch (param) {
 450:/users/hunter/downloads/tmk_core/common/command.c ****         case 1:
 451:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 452:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_delay += inc;
 453:/users/hunter/downloads/tmk_core/common/command.c ****             else
 454:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 455:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 456:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 457:/users/hunter/downloads/tmk_core/common/command.c ****         case 2:
 458:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 459:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_interval += inc;
 460:/users/hunter/downloads/tmk_core/common/command.c ****             else
 461:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 462:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 463:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 464:/users/hunter/downloads/tmk_core/common/command.c ****         case 3:
 465:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 466:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_max_speed += inc;
 467:/users/hunter/downloads/tmk_core/common/command.c ****             else
 468:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 469:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 470:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 471:/users/hunter/downloads/tmk_core/common/command.c ****         case 4:
 472:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 473:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_time_to_max += inc;
 474:/users/hunter/downloads/tmk_core/common/command.c ****             else
 475:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 476:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 477:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 478:/users/hunter/downloads/tmk_core/common/command.c ****         case 5:
 479:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 480:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 481:/users/hunter/downloads/tmk_core/common/command.c ****             else
 482:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 483:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 484:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 485:/users/hunter/downloads/tmk_core/common/command.c ****         case 6:
 486:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 487:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 488:/users/hunter/downloads/tmk_core/common/command.c ****             else
 489:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 490:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 491:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 492:/users/hunter/downloads/tmk_core/common/command.c ****     }
 493:/users/hunter/downloads/tmk_core/common/command.c **** }
 494:/users/hunter/downloads/tmk_core/common/command.c **** 
 495:/users/hunter/downloads/tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 496:/users/hunter/downloads/tmk_core/common/command.c **** {
 497:/users/hunter/downloads/tmk_core/common/command.c ****     switch (param) {
 498:/users/hunter/downloads/tmk_core/common/command.c ****         case 1:
 499:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_delay > dec)
 500:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_delay -= dec;
 501:/users/hunter/downloads/tmk_core/common/command.c ****             else
 502:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_delay = 0;
 503:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 504:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 505:/users/hunter/downloads/tmk_core/common/command.c ****         case 2:
 506:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_interval > dec)
 507:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_interval -= dec;
 508:/users/hunter/downloads/tmk_core/common/command.c ****             else
 509:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_interval = 0;
 510:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 511:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 512:/users/hunter/downloads/tmk_core/common/command.c ****         case 3:
 513:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_max_speed > dec)
 514:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_max_speed -= dec;
 515:/users/hunter/downloads/tmk_core/common/command.c ****             else
 516:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_max_speed = 0;
 517:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 518:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 519:/users/hunter/downloads/tmk_core/common/command.c ****         case 4:
 520:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 521:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 522:/users/hunter/downloads/tmk_core/common/command.c ****             else
 523:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_time_to_max = 0;
 524:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 525:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 526:/users/hunter/downloads/tmk_core/common/command.c ****         case 5:
 527:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 528:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 529:/users/hunter/downloads/tmk_core/common/command.c ****             else
 530:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 531:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 532:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 533:/users/hunter/downloads/tmk_core/common/command.c ****         case 6:
 534:/users/hunter/downloads/tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 535:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 536:/users/hunter/downloads/tmk_core/common/command.c ****             else
 537:/users/hunter/downloads/tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 538:/users/hunter/downloads/tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 539:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 540:/users/hunter/downloads/tmk_core/common/command.c ****     }
 541:/users/hunter/downloads/tmk_core/common/command.c **** }
 542:/users/hunter/downloads/tmk_core/common/command.c **** 
 543:/users/hunter/downloads/tmk_core/common/command.c **** static void mousekey_console_help(void)
 544:/users/hunter/downloads/tmk_core/common/command.c **** {
 545:/users/hunter/downloads/tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
 546:/users/hunter/downloads/tmk_core/common/command.c ****           "ESC/q:	quit\n"
 547:/users/hunter/downloads/tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 548:/users/hunter/downloads/tmk_core/common/command.c ****           "2:	interval(ms)\n"
 549:/users/hunter/downloads/tmk_core/common/command.c ****           "3:	max_speed\n"
 550:/users/hunter/downloads/tmk_core/common/command.c ****           "4:	time_to_max\n"
 551:/users/hunter/downloads/tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 552:/users/hunter/downloads/tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 553:/users/hunter/downloads/tmk_core/common/command.c ****           "\n"
 554:/users/hunter/downloads/tmk_core/common/command.c ****           "p:	print values\n"
 555:/users/hunter/downloads/tmk_core/common/command.c ****           "d:	set defaults\n"
 556:/users/hunter/downloads/tmk_core/common/command.c ****           "up:	+1\n"
 557:/users/hunter/downloads/tmk_core/common/command.c ****           "down:	-1\n"
 558:/users/hunter/downloads/tmk_core/common/command.c ****           "pgup:	+10\n"
 559:/users/hunter/downloads/tmk_core/common/command.c ****           "pgdown:	-10\n"
 560:/users/hunter/downloads/tmk_core/common/command.c ****           "\n"
 561:/users/hunter/downloads/tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 562:/users/hunter/downloads/tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
 563:/users/hunter/downloads/tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 564:/users/hunter/downloads/tmk_core/common/command.c **** }
 565:/users/hunter/downloads/tmk_core/common/command.c **** 
 566:/users/hunter/downloads/tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 567:/users/hunter/downloads/tmk_core/common/command.c **** {
 568:/users/hunter/downloads/tmk_core/common/command.c ****     switch (code) {
 569:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_H:
 570:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 571:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_console_help();
 572:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 573:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_Q:
 574:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_ESC:
 575:/users/hunter/downloads/tmk_core/common/command.c ****             if (mousekey_param) {
 576:/users/hunter/downloads/tmk_core/common/command.c ****                 mousekey_param = 0;
 577:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 578:/users/hunter/downloads/tmk_core/common/command.c ****                 print("C> ");
 579:/users/hunter/downloads/tmk_core/common/command.c ****                 command_state = CONSOLE;
 580:/users/hunter/downloads/tmk_core/common/command.c ****                 return false;
 581:/users/hunter/downloads/tmk_core/common/command.c ****             }
 582:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 583:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_P:
 584:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param_print();
 585:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 586:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_1:
 587:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_2:
 588:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_3:
 589:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_4:
 590:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_5:
 591:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_6:
 592:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 593:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 594:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_UP:
 595:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 596:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 597:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_DOWN:
 598:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 599:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 600:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_PGUP:
 601:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 602:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 603:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_PGDN:
 604:/users/hunter/downloads/tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 605:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 606:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_D:
 607:/users/hunter/downloads/tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 608:/users/hunter/downloads/tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 609:/users/hunter/downloads/tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 610:/users/hunter/downloads/tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 611:/users/hunter/downloads/tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 612:/users/hunter/downloads/tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 613:/users/hunter/downloads/tmk_core/common/command.c ****             print("set default\n");
 614:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 615:/users/hunter/downloads/tmk_core/common/command.c ****         default:
 616:/users/hunter/downloads/tmk_core/common/command.c ****             print("?");
 617:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 618:/users/hunter/downloads/tmk_core/common/command.c ****     }
 619:/users/hunter/downloads/tmk_core/common/command.c ****     if (mousekey_param) {
 620:/users/hunter/downloads/tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 621:/users/hunter/downloads/tmk_core/common/command.c ****     } else {
 622:/users/hunter/downloads/tmk_core/common/command.c ****         print("M>" );
 623:/users/hunter/downloads/tmk_core/common/command.c ****     }
 624:/users/hunter/downloads/tmk_core/common/command.c ****     return true;
 625:/users/hunter/downloads/tmk_core/common/command.c **** }
 626:/users/hunter/downloads/tmk_core/common/command.c **** #endif
 627:/users/hunter/downloads/tmk_core/common/command.c **** 
 628:/users/hunter/downloads/tmk_core/common/command.c **** 
 629:/users/hunter/downloads/tmk_core/common/command.c **** /***********************************************************
 630:/users/hunter/downloads/tmk_core/common/command.c ****  * Utilities
 631:/users/hunter/downloads/tmk_core/common/command.c ****  ***********************************************************/
 632:/users/hunter/downloads/tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 633:/users/hunter/downloads/tmk_core/common/command.c **** {
 634:/users/hunter/downloads/tmk_core/common/command.c ****     switch (code) {
 635:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_1: return 1;
 636:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_2: return 2;
 637:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_3: return 3;
 638:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_4: return 4;
 639:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_5: return 5;
 640:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_6: return 6;
 641:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_7: return 7;
 642:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_8: return 8;
 643:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_9: return 9;
 644:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_0: return 0;
 645:/users/hunter/downloads/tmk_core/common/command.c ****     }
 646:/users/hunter/downloads/tmk_core/common/command.c ****     return 0;
 647:/users/hunter/downloads/tmk_core/common/command.c **** }
 648:/users/hunter/downloads/tmk_core/common/command.c **** 
 649:/users/hunter/downloads/tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 650:/users/hunter/downloads/tmk_core/common/command.c **** {
  15               		.loc 1 650 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 1 */
  25               	.L__stack_usage = 1
  26 0002 C82F      		mov r28,r24
 651:/users/hunter/downloads/tmk_core/common/command.c ****     xprintf("L%d\n", layer);
  27               		.loc 1 651 0
  28 0004 1F92      		push __zero_reg__
  29               	.LCFI1:
  30               		.cfi_def_cfa_offset 4
  31 0006 8F93      		push r24
  32               	.LCFI2:
  33               		.cfi_def_cfa_offset 5
  34 0008 80E0      		ldi r24,lo8(__c.2630)
  35 000a 90E0      		ldi r25,hi8(__c.2630)
  36               	.LVL1:
  37 000c 9F93      		push r25
  38               	.LCFI3:
  39               		.cfi_def_cfa_offset 6
  40 000e 8F93      		push r24
  41               	.LCFI4:
  42               		.cfi_def_cfa_offset 7
  43 0010 0E94 0000 		call __xprintf
  44               	.LVL2:
 652:/users/hunter/downloads/tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
  45               		.loc 1 652 0
  46 0014 61E0      		ldi r22,lo8(1)
  47 0016 70E0      		ldi r23,0
  48 0018 80E0      		ldi r24,0
  49 001a 90E0      		ldi r25,0
  50 001c 00C0      		rjmp 2f
  51               		1:
  52 001e 660F      		lsl r22
  53 0020 771F      		rol r23
  54 0022 881F      		rol r24
  55 0024 991F      		rol r25
  56               		2:
  57 0026 CA95      		dec r28
  58 0028 02F4      		brpl 1b
  59 002a 0E94 0000 		call default_layer_set
  60               	.LVL3:
 653:/users/hunter/downloads/tmk_core/common/command.c ****     clear_keyboard();
  61               		.loc 1 653 0
  62 002e 0F90      		pop __tmp_reg__
  63 0030 0F90      		pop __tmp_reg__
  64 0032 0F90      		pop __tmp_reg__
  65 0034 0F90      		pop __tmp_reg__
  66               	.LCFI5:
  67               		.cfi_def_cfa_offset 3
  68               	/* epilogue start */
 654:/users/hunter/downloads/tmk_core/common/command.c **** }
  69               		.loc 1 654 0
  70 0036 CF91      		pop r28
  71               	.LVL4:
 653:/users/hunter/downloads/tmk_core/common/command.c ****     clear_keyboard();
  72               		.loc 1 653 0
  73 0038 0C94 0000 		jmp clear_keyboard
  74               	.LVL5:
  75               		.cfi_endproc
  76               	.LFE18:
  78               		.section	.text.command_common,"ax",@progbits
  80               	command_common:
  81               	.LFB14:
 182:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
  82               		.loc 1 182 0
  83               		.cfi_startproc
  84               	/* prologue: function */
  85               	/* frame size = 0 */
  86               	/* stack size = 0 */
  87               	.L__stack_usage = 0
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
  88               		.loc 1 189 0
  89 0000 8732      		cpi r24,lo8(39)
  90 0002 00F4      		brsh .L4
  91 0004 8E31      		cpi r24,lo8(30)
  92 0006 00F0      		brlo .+2
  93 0008 00C0      		rjmp .L5
  94 000a 8E30      		cpi r24,lo8(14)
  95 000c 01F4      		brne .+2
  96 000e 00C0      		rjmp .L6
  97 0010 00F4      		brsh .L7
  98 0012 8730      		cpi r24,lo8(7)
  99 0014 01F4      		brne .+2
 100 0016 00C0      		rjmp .L8
 101 0018 8B30      		cpi r24,lo8(11)
 102 001a 01F4      		brne .+2
 103 001c 00C0      		rjmp .L9
 104 001e 8630      		cpi r24,lo8(6)
 105 0020 01F4      		brne .+2
 106 0022 00C0      		rjmp .L10
 107               	.L3:
 381:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 108               		.loc 1 381 0
 109 0024 80E0      		ldi r24,lo8(__c.2594)
 110 0026 90E0      		ldi r25,hi8(__c.2594)
 111 0028 0E94 0000 		call xputs
 382:/users/hunter/downloads/tmk_core/common/command.c ****     }
 112               		.loc 1 382 0
 113 002c 80E0      		ldi r24,0
 114               	/* epilogue start */
 385:/users/hunter/downloads/tmk_core/common/command.c **** 
 115               		.loc 1 385 0
 116 002e 0895      		ret
 117               	.L7:
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 118               		.loc 1 189 0
 119 0030 8631      		cpi r24,lo8(22)
 120 0032 01F4      		brne .+2
 121 0034 00C0      		rjmp .L11
 122 0036 00F4      		brsh .L12
 123 0038 8031      		cpi r24,lo8(16)
 124 003a 01F4      		brne .L3
 272:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_mouse) {
 125               		.loc 1 272 0
 126 003c 9091 0000 		lds r25,debug_config
 127 0040 892F      		mov r24,r25
 128 0042 877F      		andi r24,~(1<<3)
 129 0044 93FF      		sbrs r25,3
 130 0046 8860      		ori r24,1<<3
 131 0048 8093 0000 		sts debug_config,r24
 273:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmouse: on\n");
 132               		.loc 1 273 0
 133 004c 83FF      		sbrs r24,3
 134 004e 00C0      		rjmp .L25
 274:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 135               		.loc 1 274 0
 136 0050 80E0      		ldi r24,lo8(__c.2559)
 137 0052 90E0      		ldi r25,hi8(__c.2559)
 138 0054 00C0      		rjmp .L48
 139               	.L12:
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 140               		.loc 1 189 0
 141 0056 8931      		cpi r24,lo8(25)
 142 0058 01F4      		brne .+2
 143 005a 00C0      		rjmp .L14
 144 005c 8B31      		cpi r24,lo8(27)
 145 005e 01F4      		brne .L3
 254:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_matrix) {
 146               		.loc 1 254 0
 147 0060 9091 0000 		lds r25,debug_config
 148 0064 892F      		mov r24,r25
 149 0066 8D7F      		andi r24,~(1<<1)
 150 0068 91FF      		sbrs r25,1
 151 006a 8260      		ori r24,1<<1
 152 006c 8093 0000 		sts debug_config,r24
 255:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 153               		.loc 1 255 0
 154 0070 81FF      		sbrs r24,1
 155 0072 00C0      		rjmp .L23
 256:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 156               		.loc 1 256 0
 157 0074 80E0      		ldi r24,lo8(__c.2549)
 158 0076 90E0      		ldi r25,hi8(__c.2549)
 159 0078 00C0      		rjmp .L48
 160               	.L4:
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 161               		.loc 1 189 0
 162 007a 8833      		cpi r24,lo8(56)
 163 007c 01F0      		breq .L9
 164 007e 00F4      		brsh .L16
 165 0080 8932      		cpi r24,lo8(41)
 166 0082 01F0      		breq .L17
 167 0084 8533      		cpi r24,lo8(53)
 168 0086 01F0      		breq .L17
 169 0088 8732      		cpi r24,lo8(39)
 170 008a 01F4      		brne .L3
 171               	.L17:
 372:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 172               		.loc 1 372 0
 173 008c 80E0      		ldi r24,0
 174               	.L49:
 378:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 175               		.loc 1 378 0
 176 008e 0E94 0000 		call switch_default_layer
 177 0092 00C0      		rjmp .L45
 178               	.L16:
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 179               		.loc 1 189 0
 180 0094 8334      		cpi r24,lo8(67)
 181 0096 01F0      		breq .L17
 182 0098 00F4      		brsh .L18
 183 009a 8A33      		cpi r24,lo8(58)
 184 009c 00F0      		brlo .L3
 378:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 185               		.loc 1 378 0
 186 009e 8953      		subi r24,lo8(-(-57))
 187 00a0 00C0      		rjmp .L49
 188               	.L18:
 189:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 189               		.loc 1 189 0
 190 00a2 8834      		cpi r24,lo8(72)
 191 00a4 01F0      		breq .+2
 192 00a6 00C0      		rjmp .L3
 236:/users/hunter/downloads/tmk_core/common/command.c ****             print("\n\nbootloader... ");
 193               		.loc 1 236 0
 194 00a8 0E94 0000 		call clear_keyboard
 237:/users/hunter/downloads/tmk_core/common/command.c ****             wait_ms(1000);
 195               		.loc 1 237 0
 196 00ac 80E0      		ldi r24,lo8(__c.2541)
 197 00ae 90E0      		ldi r25,hi8(__c.2541)
 198 00b0 0E94 0000 		call xputs
 199               	.LBB56:
 200               	.LBB57:
 201               		.file 2 "/opt/local/avr/include/util/delay.h"
   1:/opt/local/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/opt/local/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/opt/local/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/opt/local/avr/include/util/delay.h ****    All rights reserved.
   5:/opt/local/avr/include/util/delay.h **** 
   6:/opt/local/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/opt/local/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/opt/local/avr/include/util/delay.h **** 
   9:/opt/local/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/opt/local/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/opt/local/avr/include/util/delay.h **** 
  12:/opt/local/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/opt/local/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/opt/local/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/opt/local/avr/include/util/delay.h ****      distribution.
  16:/opt/local/avr/include/util/delay.h **** 
  17:/opt/local/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/opt/local/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/opt/local/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/opt/local/avr/include/util/delay.h **** 
  21:/opt/local/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/opt/local/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/opt/local/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/opt/local/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/opt/local/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/opt/local/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/opt/local/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/opt/local/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/opt/local/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/opt/local/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/opt/local/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/opt/local/avr/include/util/delay.h **** 
  33:/opt/local/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/opt/local/avr/include/util/delay.h **** 
  35:/opt/local/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/opt/local/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/opt/local/avr/include/util/delay.h **** 
  38:/opt/local/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/opt/local/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/opt/local/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/opt/local/avr/include/util/delay.h **** #  endif
  42:/opt/local/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/opt/local/avr/include/util/delay.h **** 
  44:/opt/local/avr/include/util/delay.h **** #include <inttypes.h>
  45:/opt/local/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/opt/local/avr/include/util/delay.h **** #include <math.h>
  47:/opt/local/avr/include/util/delay.h **** 
  48:/opt/local/avr/include/util/delay.h **** /** \file */
  49:/opt/local/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/opt/local/avr/include/util/delay.h ****     \code
  51:/opt/local/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/opt/local/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/opt/local/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/opt/local/avr/include/util/delay.h ****     \endcode
  55:/opt/local/avr/include/util/delay.h **** 
  56:/opt/local/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/opt/local/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/opt/local/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/opt/local/avr/include/util/delay.h ****     used.
  60:/opt/local/avr/include/util/delay.h **** 
  61:/opt/local/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/opt/local/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/opt/local/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/opt/local/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/opt/local/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/opt/local/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/opt/local/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/opt/local/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/opt/local/avr/include/util/delay.h **** 
  70:/opt/local/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/opt/local/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/opt/local/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/opt/local/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/opt/local/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/opt/local/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/opt/local/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/opt/local/avr/include/util/delay.h ****     routines linked into the application.
  78:/opt/local/avr/include/util/delay.h **** 
  79:/opt/local/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/opt/local/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/opt/local/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/opt/local/avr/include/util/delay.h **** 
  83:/opt/local/avr/include/util/delay.h **** */
  84:/opt/local/avr/include/util/delay.h **** 
  85:/opt/local/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/opt/local/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/opt/local/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/opt/local/avr/include/util/delay.h **** #endif
  89:/opt/local/avr/include/util/delay.h **** 
  90:/opt/local/avr/include/util/delay.h **** #ifndef F_CPU
  91:/opt/local/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/opt/local/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/opt/local/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/opt/local/avr/include/util/delay.h ****     \def F_CPU
  95:/opt/local/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/opt/local/avr/include/util/delay.h **** 
  97:/opt/local/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/opt/local/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/opt/local/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/opt/local/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/opt/local/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/opt/local/avr/include/util/delay.h **** 
 103:/opt/local/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/opt/local/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/opt/local/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/opt/local/avr/include/util/delay.h ****     integer value.
 107:/opt/local/avr/include/util/delay.h ****  */
 108:/opt/local/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/opt/local/avr/include/util/delay.h **** #endif
 110:/opt/local/avr/include/util/delay.h **** 
 111:/opt/local/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/opt/local/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/opt/local/avr/include/util/delay.h **** #endif
 114:/opt/local/avr/include/util/delay.h **** 
 115:/opt/local/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/opt/local/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/opt/local/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/opt/local/avr/include/util/delay.h **** #  include <math.h>
 119:/opt/local/avr/include/util/delay.h **** #endif
 120:/opt/local/avr/include/util/delay.h **** 
 121:/opt/local/avr/include/util/delay.h **** /**
 122:/opt/local/avr/include/util/delay.h ****    \ingroup util_delay
 123:/opt/local/avr/include/util/delay.h **** 
 124:/opt/local/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/opt/local/avr/include/util/delay.h **** 
 126:/opt/local/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/opt/local/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/opt/local/avr/include/util/delay.h **** 
 129:/opt/local/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/opt/local/avr/include/util/delay.h **** 
 131:/opt/local/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/opt/local/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/opt/local/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/opt/local/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/opt/local/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/opt/local/avr/include/util/delay.h **** 
 137:/opt/local/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/opt/local/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/opt/local/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/opt/local/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/opt/local/avr/include/util/delay.h **** 
 142:/opt/local/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/opt/local/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/opt/local/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/opt/local/avr/include/util/delay.h ****    microseconds of delay.
 146:/opt/local/avr/include/util/delay.h **** 
 147:/opt/local/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/opt/local/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/opt/local/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/opt/local/avr/include/util/delay.h ****    respectively.
 151:/opt/local/avr/include/util/delay.h **** 
 152:/opt/local/avr/include/util/delay.h ****    \note
 153:/opt/local/avr/include/util/delay.h **** 
 154:/opt/local/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/opt/local/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/opt/local/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/opt/local/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/opt/local/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/opt/local/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/opt/local/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/opt/local/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/opt/local/avr/include/util/delay.h ****    not available to the compiler then.
 163:/opt/local/avr/include/util/delay.h **** 
 164:/opt/local/avr/include/util/delay.h ****  */
 165:/opt/local/avr/include/util/delay.h **** void
 166:/opt/local/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/opt/local/avr/include/util/delay.h **** {
 168:/opt/local/avr/include/util/delay.h **** 	double __tmp ;
 169:/opt/local/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/opt/local/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/opt/local/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/opt/local/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/opt/local/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/opt/local/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/opt/local/avr/include/util/delay.h **** 
 176:/opt/local/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/opt/local/avr/include/util/delay.h **** 
 179:/opt/local/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/opt/local/avr/include/util/delay.h **** 
 182:/opt/local/avr/include/util/delay.h **** 	#else
 183:/opt/local/avr/include/util/delay.h **** 		//round up by default
 184:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/opt/local/avr/include/util/delay.h **** 	#endif
 186:/opt/local/avr/include/util/delay.h **** 
 187:/opt/local/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 202               		.loc 2 187 0
 203 00b4 2FEF      		ldi r18,lo8(3199999)
 204 00b6 83ED      		ldi r24,hi8(3199999)
 205 00b8 90E3      		ldi r25,hlo8(3199999)
 206 00ba 2150      	1:	subi r18,1
 207 00bc 8040      		sbci r24,0
 208 00be 9040      		sbci r25,0
 209 00c0 01F4      		brne 1b
 210 00c2 00C0      		rjmp .
 211 00c4 0000      		nop
 212               	.LBE57:
 213               	.LBE56:
 239:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 214               		.loc 1 239 0
 215 00c6 0E94 0000 		call bootloader_jump
 216               	.L45:
 384:/users/hunter/downloads/tmk_core/common/command.c **** }
 217               		.loc 1 384 0
 218 00ca 81E0      		ldi r24,lo8(1)
 240:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_D:
 219               		.loc 1 240 0
 220 00cc 0895      		ret
 221               	.L9:
 222               	.LBB58:
 223               	.LBB59:
 117:/users/hunter/downloads/tmk_core/common/command.c ****           "d:	debug\n"
 224               		.loc 1 117 0
 225 00ce 80E0      		ldi r24,lo8(__c.2529)
 226 00d0 90E0      		ldi r25,hi8(__c.2529)
 227               	.L46:
 228               	.LBE59:
 229               	.LBE58:
 324:/users/hunter/downloads/tmk_core/common/command.c **** #if defined(__AVR__)
 230               		.loc 1 324 0
 231 00d2 0E94 0000 		call xputs
 232 00d6 00C0      		rjmp .L45
 233               	.L10:
 227:/users/hunter/downloads/tmk_core/common/command.c ****             debug_keyboard = false;
 234               		.loc 1 227 0
 235 00d8 8091 0000 		lds r24,debug_config
 230:/users/hunter/downloads/tmk_core/common/command.c ****             command_console_help();
 236               		.loc 1 230 0
 237 00dc 817F      		andi r24,lo8(-15)
 238 00de 8E7F      		andi r24,lo8(~(1<<0))
 239 00e0 8093 0000 		sts debug_config,r24
 240               	.LBB60:
 241               	.LBB61:
 393:/users/hunter/downloads/tmk_core/common/command.c ****           "ESC/q:	quit\n"
 242               		.loc 1 393 0
 243 00e4 80E0      		ldi r24,lo8(__c.2599)
 244 00e6 90E0      		ldi r25,hi8(__c.2599)
 245 00e8 0E94 0000 		call xputs
 246               	.LBE61:
 247               	.LBE60:
 232:/users/hunter/downloads/tmk_core/common/command.c ****             command_state = CONSOLE;
 248               		.loc 1 232 0
 249 00ec 80E0      		ldi r24,lo8(__c.2538)
 250 00ee 90E0      		ldi r25,hi8(__c.2538)
 251 00f0 0E94 0000 		call xputs
 233:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 252               		.loc 1 233 0
 253 00f4 81E0      		ldi r24,lo8(1)
 254 00f6 8093 0000 		sts command_state,r24
 234:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_PAUSE:
 255               		.loc 1 234 0
 256 00fa 0895      		ret
 257               	.L8:
 242:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\ndebug: off\n");
 258               		.loc 1 242 0
 259 00fc 8091 0000 		lds r24,debug_config
 260 0100 80FF      		sbrs r24,0
 261 0102 00C0      		rjmp .L22
 243:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_matrix   = false;
 262               		.loc 1 243 0
 263 0104 80E0      		ldi r24,lo8(__c.2544)
 264 0106 90E0      		ldi r25,hi8(__c.2544)
 265 0108 0E94 0000 		call xputs
 244:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_keyboard = false;
 266               		.loc 1 244 0
 267 010c 8091 0000 		lds r24,debug_config
 247:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 268               		.loc 1 247 0
 269 0110 817F      		andi r24,lo8(-15)
 270 0112 8E7F      		andi r24,lo8(~(1<<0))
 271               	.L47:
 275:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 272               		.loc 1 275 0
 273 0114 8093 0000 		sts debug_config,r24
 274 0118 00C0      		rjmp .L45
 275               	.L22:
 249:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable   = true;
 276               		.loc 1 249 0
 277 011a 80E0      		ldi r24,lo8(__c.2546)
 278 011c 90E0      		ldi r25,hi8(__c.2546)
 279               	.L48:
 274:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 280               		.loc 1 274 0
 281 011e 0E94 0000 		call xputs
 275:/users/hunter/downloads/tmk_core/common/command.c ****             } else {
 282               		.loc 1 275 0
 283 0122 8091 0000 		lds r24,debug_config
 284 0126 8160      		ori r24,lo8(1<<0)
 285 0128 00C0      		rjmp .L47
 286               	.L23:
 259:/users/hunter/downloads/tmk_core/common/command.c ****             }
 287               		.loc 1 259 0
 288 012a 80E0      		ldi r24,lo8(__c.2551)
 289 012c 90E0      		ldi r25,hi8(__c.2551)
 290 012e 00C0      		rjmp .L46
 291               	.L6:
 263:/users/hunter/downloads/tmk_core/common/command.c ****             if (debug_keyboard) {
 292               		.loc 1 263 0
 293 0130 9091 0000 		lds r25,debug_config
 294 0134 892F      		mov r24,r25
 295 0136 8B7F      		andi r24,~(1<<2)
 296 0138 92FF      		sbrs r25,2
 297 013a 8460      		ori r24,1<<2
 298 013c 8093 0000 		sts debug_config,r24
 264:/users/hunter/downloads/tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 299               		.loc 1 264 0
 300 0140 82FF      		sbrs r24,2
 301 0142 00C0      		rjmp .L24
 265:/users/hunter/downloads/tmk_core/common/command.c ****                 debug_enable = true;
 302               		.loc 1 265 0
 303 0144 80E0      		ldi r24,lo8(__c.2554)
 304 0146 90E0      		ldi r25,hi8(__c.2554)
 305 0148 00C0      		rjmp .L48
 306               	.L24:
 268:/users/hunter/downloads/tmk_core/common/command.c ****             }
 307               		.loc 1 268 0
 308 014a 80E0      		ldi r24,lo8(__c.2556)
 309 014c 90E0      		ldi r25,hi8(__c.2556)
 310 014e 00C0      		rjmp .L46
 311               	.L25:
 277:/users/hunter/downloads/tmk_core/common/command.c ****             }
 312               		.loc 1 277 0
 313 0150 80E0      		ldi r24,lo8(__c.2561)
 314 0152 90E0      		ldi r25,hi8(__c.2561)
 315 0154 00C0      		rjmp .L46
 316               	.L14:
 281:/users/hunter/downloads/tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 317               		.loc 1 281 0
 318 0156 80E0      		ldi r24,lo8(__c.2564)
 319 0158 90E0      		ldi r25,hi8(__c.2564)
 320 015a 0E94 0000 		call xputs
 282:/users/hunter/downloads/tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 321               		.loc 1 282 0
 322 015e 80E0      		ldi r24,lo8(__c.2566)
 323 0160 90E0      		ldi r25,hi8(__c.2566)
 324 0162 0E94 0000 		call xputs
 283:/users/hunter/downloads/tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 325               		.loc 1 283 0
 326 0166 80E0      		ldi r24,lo8(__c.2568)
 327 0168 90E0      		ldi r25,hi8(__c.2568)
 328 016a 0E94 0000 		call xputs
 286:/users/hunter/downloads/tmk_core/common/command.c ****             /* build options */
 329               		.loc 1 286 0
 330 016e 80E0      		ldi r24,lo8(__c.2570)
 331 0170 90E0      		ldi r25,hi8(__c.2570)
 332 0172 0E94 0000 		call xputs
 288:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 333               		.loc 1 288 0
 334 0176 80E0      		ldi r24,lo8(__c.2572)
 335 0178 90E0      		ldi r25,hi8(__c.2572)
 336 017a 0E94 0000 		call xputs
 324:/users/hunter/downloads/tmk_core/common/command.c **** #if defined(__AVR__)
 337               		.loc 1 324 0
 338 017e 80E0      		ldi r24,lo8(__c.2574)
 339 0180 90E0      		ldi r25,hi8(__c.2574)
 340 0182 00C0      		rjmp .L46
 341               	.L11:
 334:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 342               		.loc 1 334 0
 343 0184 80E0      		ldi r24,lo8(__c.2577)
 344 0186 90E0      		ldi r25,hi8(__c.2577)
 345 0188 0E94 0000 		call xputs
 335:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 346               		.loc 1 335 0
 347 018c 0E94 0000 		call host_keyboard_leds
 348 0190 1F92      		push __zero_reg__
 349               	.LCFI6:
 350               		.cfi_def_cfa_offset 3
 351 0192 8F93      		push r24
 352               	.LCFI7:
 353               		.cfi_def_cfa_offset 4
 354 0194 80E0      		ldi r24,lo8(__c.2579)
 355 0196 90E0      		ldi r25,hi8(__c.2579)
 356 0198 9F93      		push r25
 357               	.LCFI8:
 358               		.cfi_def_cfa_offset 5
 359 019a 8F93      		push r24
 360               	.LCFI9:
 361               		.cfi_def_cfa_offset 6
 362 019c 0E94 0000 		call __xprintf
 336:/users/hunter/downloads/tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 363               		.loc 1 336 0
 364 01a0 8091 0000 		lds r24,keyboard_protocol
 365 01a4 1F92      		push __zero_reg__
 366               	.LCFI10:
 367               		.cfi_def_cfa_offset 7
 368 01a6 8F93      		push r24
 369               	.LCFI11:
 370               		.cfi_def_cfa_offset 8
 371 01a8 80E0      		ldi r24,lo8(__c.2581)
 372 01aa 90E0      		ldi r25,hi8(__c.2581)
 373 01ac 9F93      		push r25
 374               	.LCFI12:
 375               		.cfi_def_cfa_offset 9
 376 01ae 8F93      		push r24
 377               	.LCFI13:
 378               		.cfi_def_cfa_offset 10
 379 01b0 0E94 0000 		call __xprintf
 337:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 380               		.loc 1 337 0
 381 01b4 8091 0000 		lds r24,keyboard_idle
 382 01b8 1F92      		push __zero_reg__
 383               	.LCFI14:
 384               		.cfi_def_cfa_offset 11
 385 01ba 8F93      		push r24
 386               	.LCFI15:
 387               		.cfi_def_cfa_offset 12
 388 01bc 80E0      		ldi r24,lo8(__c.2583)
 389 01be 90E0      		ldi r25,hi8(__c.2583)
 390 01c0 9F93      		push r25
 391               	.LCFI16:
 392               		.cfi_def_cfa_offset 13
 393 01c2 8F93      		push r24
 394               	.LCFI17:
 395               		.cfi_def_cfa_offset 14
 396 01c4 0E94 0000 		call __xprintf
 341:/users/hunter/downloads/tmk_core/common/command.c **** 
 397               		.loc 1 341 0
 398 01c8 0E94 0000 		call timer_read32
 399 01cc 9F93      		push r25
 400               	.LCFI18:
 401               		.cfi_def_cfa_offset 15
 402 01ce 8F93      		push r24
 403               	.LCFI19:
 404               		.cfi_def_cfa_offset 16
 405 01d0 7F93      		push r23
 406               	.LCFI20:
 407               		.cfi_def_cfa_offset 17
 408 01d2 6F93      		push r22
 409               	.LCFI21:
 410               		.cfi_def_cfa_offset 18
 411 01d4 80E0      		ldi r24,lo8(__c.2585)
 412 01d6 90E0      		ldi r25,hi8(__c.2585)
 413 01d8 9F93      		push r25
 414               	.LCFI22:
 415               		.cfi_def_cfa_offset 19
 416 01da 8F93      		push r24
 417               	.LCFI23:
 418               		.cfi_def_cfa_offset 20
 419 01dc 0E94 0000 		call __xprintf
 356:/users/hunter/downloads/tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 420               		.loc 1 356 0
 421 01e0 8DB7      		in r24,__SP_L__
 422 01e2 9EB7      		in r25,__SP_H__
 423 01e4 4296      		adiw r24,18
 424 01e6 0FB6      		in __tmp_reg__,__SREG__
 425 01e8 F894      		cli
 426 01ea 9EBF      		out __SP_H__,r25
 427 01ec 0FBE      		out __SREG__,__tmp_reg__
 428 01ee 8DBF      		out __SP_L__,r24
 429               	.LCFI24:
 430               		.cfi_def_cfa_offset 2
 431 01f0 00C0      		rjmp .L45
 432               	.L5:
 375:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 433               		.loc 1 375 0
 434 01f2 8D51      		subi r24,lo8(-(-29))
 435 01f4 00C0      		rjmp .L49
 436               		.cfi_endproc
 437               	.LFE14:
 439               		.section	.text.command_extra,"ax",@progbits
 440               		.weak	command_extra
 442               	command_extra:
 443               	.LFB11:
  99:/users/hunter/downloads/tmk_core/common/command.c ****     (void)code;
 444               		.loc 1 99 0
 445               		.cfi_startproc
 446               	.LVL6:
 447               	/* prologue: function */
 448               	/* frame size = 0 */
 449               	/* stack size = 0 */
 450               	.L__stack_usage = 0
 102:/users/hunter/downloads/tmk_core/common/command.c **** 
 451               		.loc 1 102 0
 452 0000 80E0      		ldi r24,0
 453               	.LVL7:
 454               	/* epilogue start */
 455 0002 0895      		ret
 456               		.cfi_endproc
 457               	.LFE11:
 459               		.set	command_extra.localalias.0,command_extra
 460               		.section	.text.command_console_extra,"ax",@progbits
 461               		.weak	command_console_extra
 463               	command_console_extra:
 464               	.LFB20:
 465               		.cfi_startproc
 466               	/* prologue: function */
 467               	/* frame size = 0 */
 468               	/* stack size = 0 */
 469               	.L__stack_usage = 0
 470 0000 0C94 0000 		jmp command_extra.localalias.0
 471               		.cfi_endproc
 472               	.LFE20:
 474               		.section	.text.command_proc,"ax",@progbits
 475               	.global	command_proc
 477               	command_proc:
 478               	.LFB10:
  70:/users/hunter/downloads/tmk_core/common/command.c ****     switch (command_state) {
 479               		.loc 1 70 0
 480               		.cfi_startproc
 481               	.LVL8:
  70:/users/hunter/downloads/tmk_core/common/command.c ****     switch (command_state) {
 482               		.loc 1 70 0
 483 0000 CF93      		push r28
 484               	.LCFI25:
 485               		.cfi_def_cfa_offset 3
 486               		.cfi_offset 28, -2
 487               	/* prologue: function */
 488               	/* frame size = 0 */
 489               	/* stack size = 1 */
 490               	.L__stack_usage = 1
 491 0002 C82F      		mov r28,r24
  71:/users/hunter/downloads/tmk_core/common/command.c ****         case ONESHOT:
 492               		.loc 1 71 0
 493 0004 8091 0000 		lds r24,command_state
 494               	.LVL9:
 495 0008 8823      		tst r24
 496 000a 01F0      		breq .L54
 497 000c 8130      		cpi r24,lo8(1)
 498 000e 01F0      		breq .L55
  89:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 499               		.loc 1 89 0
 500 0010 1092 0000 		sts command_state,__zero_reg__
 501               	.L67:
  74:/users/hunter/downloads/tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 502               		.loc 1 74 0
 503 0014 80E0      		ldi r24,0
 504 0016 00C0      		rjmp .L52
 505               	.L54:
  73:/users/hunter/downloads/tmk_core/common/command.c ****                 return false;
 506               		.loc 1 73 0
 507 0018 E091 0000 		lds r30,keyboard_report
 508 001c F091 0000 		lds r31,keyboard_report+1
 509 0020 8081      		ld r24,Z
 510 0022 8232      		cpi r24,lo8(34)
 511 0024 01F0      		breq .L59
  73:/users/hunter/downloads/tmk_core/common/command.c ****                 return false;
 512               		.loc 1 73 0 is_stmt 0 discriminator 1
 513 0026 8035      		cpi r24,lo8(80)
 514 0028 01F4      		brne .L67
 515               	.L59:
  79:/users/hunter/downloads/tmk_core/common/command.c ****             else
 516               		.loc 1 79 0 is_stmt 1
 517 002a 8C2F      		mov r24,r28
 518 002c 0E94 0000 		call command_extra
 519               	.LVL10:
 520 0030 8111      		cpse r24,__zero_reg__
 521 0032 00C0      		rjmp .L69
  79:/users/hunter/downloads/tmk_core/common/command.c ****             else
 522               		.loc 1 79 0 is_stmt 0 discriminator 2
 523 0034 8C2F      		mov r24,r28
 524 0036 0E94 0000 		call command_common
 525               	.LVL11:
 526               	.L62:
  81:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 527               		.loc 1 81 0 is_stmt 1 discriminator 6
 528 003a 8170      		andi r24,lo8(1)
 529               	.L52:
 530               	/* epilogue start */
  93:/users/hunter/downloads/tmk_core/common/command.c **** 
 531               		.loc 1 93 0
 532 003c CF91      		pop r28
 533               	.LVL12:
 534 003e 0895      		ret
 535               	.LVL13:
 536               	.L55:
  78:/users/hunter/downloads/tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 537               		.loc 1 78 0
 538 0040 E091 0000 		lds r30,keyboard_report
 539 0044 F091 0000 		lds r31,keyboard_report+1
 540 0048 8081      		ld r24,Z
 541 004a 8232      		cpi r24,lo8(34)
 542 004c 01F0      		breq .L59
  78:/users/hunter/downloads/tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 543               		.loc 1 78 0 is_stmt 0 discriminator 1
 544 004e 8035      		cpi r24,lo8(80)
 545 0050 01F0      		breq .L59
  81:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 546               		.loc 1 81 0 is_stmt 1
 547 0052 8C2F      		mov r24,r28
 548 0054 0E94 0000 		call command_console_extra
 549               	.LVL14:
 550 0058 8111      		cpse r24,__zero_reg__
 551 005a 00C0      		rjmp .L70
 552               	.LVL15:
 553               	.LBB69:
 554               	.LBB70:
 403:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_H:
 555               		.loc 1 403 0
 556 005c C431      		cpi r28,lo8(20)
 557 005e 01F0      		breq .L64
 558 0060 00F4      		brsh .L65
 559 0062 CB30      		cpi r28,lo8(11)
 560 0064 01F0      		breq .L66
 561               	.L63:
 420:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 562               		.loc 1 420 0
 563 0066 80E0      		ldi r24,lo8(__c.2610)
 564 0068 90E0      		ldi r25,hi8(__c.2610)
 565 006a 0E94 0000 		call xputs
 566               	.LVL16:
 567 006e 00C0      		rjmp .L90
 568               	.LVL17:
 569               	.L69:
 570               	.LBE70:
 571               	.LBE69:
  79:/users/hunter/downloads/tmk_core/common/command.c ****             else
 572               		.loc 1 79 0
 573 0070 81E0      		ldi r24,lo8(1)
 574 0072 90E0      		ldi r25,0
 575 0074 00C0      		rjmp .L62
 576               	.LVL18:
 577               	.L65:
 578               	.LBB75:
 579               	.LBB73:
 403:/users/hunter/downloads/tmk_core/common/command.c ****         case KC_H:
 580               		.loc 1 403 0
 581 0076 C932      		cpi r28,lo8(41)
 582 0078 01F0      		breq .L64
 583 007a C833      		cpi r28,lo8(56)
 584 007c 01F4      		brne .L63
 585               	.L66:
 586               	.LBB71:
 587               	.LBB72:
 393:/users/hunter/downloads/tmk_core/common/command.c ****           "ESC/q:	quit\n"
 588               		.loc 1 393 0
 589 007e 80E0      		ldi r24,lo8(__c.2599)
 590 0080 90E0      		ldi r25,hi8(__c.2599)
 591 0082 0E94 0000 		call xputs
 592               	.LVL19:
 593               	.LBE72:
 594               	.LBE71:
 423:/users/hunter/downloads/tmk_core/common/command.c ****     return true;
 595               		.loc 1 423 0
 596 0086 80E0      		ldi r24,lo8(__c.2612)
 597 0088 90E0      		ldi r25,hi8(__c.2612)
 598 008a 0E94 0000 		call xputs
 599               	.LVL20:
 600               	.L70:
 601               	.LBE73:
 602               	.LBE75:
  81:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 603               		.loc 1 81 0
 604 008e 81E0      		ldi r24,lo8(1)
 605 0090 00C0      		rjmp .L62
 606               	.LVL21:
 607               	.L64:
 608               	.LBB76:
 609               	.LBB74:
 410:/users/hunter/downloads/tmk_core/common/command.c ****             return false;
 610               		.loc 1 410 0
 611 0092 1092 0000 		sts command_state,__zero_reg__
 612               	.LVL22:
 613               	.L90:
 614               	.LBE74:
 615               	.LBE76:
  81:/users/hunter/downloads/tmk_core/common/command.c ****             break;
 616               		.loc 1 81 0
 617 0096 80E0      		ldi r24,0
 618 0098 00C0      		rjmp .L62
 619               		.cfi_endproc
 620               	.LFE10:
 622               		.section	.progmem.data.__c.2610,"a",@progbits
 625               	__c.2610:
 626 0000 3F00      		.string	"?"
 627               		.section	.progmem.data.__c.2612,"a",@progbits
 630               	__c.2612:
 631 0000 433E 2000 		.string	"C> "
 632               		.section	.progmem.data.__c.2630,"a",@progbits
 635               	__c.2630:
 636 0000 4C25 640A 		.string	"L%d\n"
 636      00
 637               		.section	.progmem.data.__c.2599,"a",@progbits
 640               	__c.2599:
 641 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\n"
 641      436F 6E73 
 641      6F6C 6520 
 641      2D0A 4553 
 641      432F 713A 
 642               		.section	.progmem.data.__c.2529,"a",@progbits
 645               	__c.2529:
 646 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 646      4D61 6769 
 646      6320 2D0A 
 646      643A 0964 
 646      6562 7567 
 647               		.section	.progmem.data.__c.2594,"a",@progbits
 650               	__c.2594:
 651 0000 3F00      		.string	"?"
 652               		.section	.progmem.data.__c.2585,"a",@progbits
 655               	__c.2585:
 656 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 656      725F 7265 
 656      6164 3332 
 656      2829 3A20 
 656      2530 346C 
 657               		.section	.progmem.data.__c.2583,"a",@progbits
 660               	__c.2583:
 661 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 661      6F61 7264 
 661      5F69 646C 
 661      653A 2025 
 661      580A 00
 662               		.section	.progmem.data.__c.2581,"a",@progbits
 665               	__c.2581:
 666 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 666      6F61 7264 
 666      5F70 726F 
 666      746F 636F 
 666      6C3A 2025 
 667               		.section	.progmem.data.__c.2579,"a",@progbits
 670               	__c.2579:
 671 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 671      5F6B 6579 
 671      626F 6172 
 671      645F 6C65 
 671      6473 2829 
 672               		.section	.progmem.data.__c.2577,"a",@progbits
 675               	__c.2577:
 676 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 676      5374 6174 
 676      7573 202D 
 676      0A00 
 677               		.section	.progmem.data.__c.2574,"a",@progbits
 680               	__c.2574:
 681 0000 4743 433A 		.string	"GCC: 7.2.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 681      2037 2E32 
 681      2E30 2041 
 681      5652 2D4C 
 681      4942 433A 
 682               		.section	.progmem.data.__c.2572,"a",@progbits
 685               	__c.2572:
 686 0000 4F50 5449 		.string	"OPTIONS: LUFA CONSOLE COMMAND 4096\n"
 686      4F4E 533A 
 686      204C 5546 
 686      4120 434F 
 686      4E53 4F4C 
 687               		.section	.progmem.data.__c.2570,"a",@progbits
 690               	__c.2570:
 691 0000 4255 494C 		.string	"BUILD: d4dcc0cb-dirty (01:25:06 Mar 29 2018)\n"
 691      443A 2064 
 691      3464 6363 
 691      3063 622D 
 691      6469 7274 
 692               		.section	.progmem.data.__c.2568,"a",@progbits
 695               	__c.2568:
 696 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x6535(PS/2(Set3)-USB Keyboard converter(IBM 122keys)) VER: 0x01
 696      2030 7846 
 696      4545 4428 
 696      742E 6D2E 
 696      6B2E 2920 
 697               		.section	.progmem.data.__c.2566,"a",@progbits
 700               	__c.2566:
 701 0000 4445 5343 		.string	"DESC: USB converter for IBM Terminal Keyboard 122keys\n"
 701      3A20 5553 
 701      4220 636F 
 701      6E76 6572 
 701      7465 7220 
 702               		.section	.progmem.data.__c.2564,"a",@progbits
 705               	__c.2564:
 706 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 706      5665 7273 
 706      696F 6E20 
 706      2D0A 00
 707               		.section	.progmem.data.__c.2561,"a",@progbits
 710               	__c.2561:
 711 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 711      7365 3A20 
 711      6F66 660A 
 711      00
 712               		.section	.progmem.data.__c.2559,"a",@progbits
 715               	__c.2559:
 716 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 716      7365 3A20 
 716      6F6E 0A00 
 717               		.section	.progmem.data.__c.2556,"a",@progbits
 720               	__c.2556:
 721 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 721      626F 6172 
 721      643A 206F 
 721      6666 0A00 
 722               		.section	.progmem.data.__c.2554,"a",@progbits
 725               	__c.2554:
 726 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 726      626F 6172 
 726      643A 206F 
 726      6E0A 00
 727               		.section	.progmem.data.__c.2551,"a",@progbits
 730               	__c.2551:
 731 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 731      7269 783A 
 731      206F 6666 
 731      0A00 
 732               		.section	.progmem.data.__c.2549,"a",@progbits
 735               	__c.2549:
 736 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 736      7269 783A 
 736      206F 6E0A 
 736      00
 737               		.section	.progmem.data.__c.2546,"a",@progbits
 740               	__c.2546:
 741 0000 0A64 6562 		.string	"\ndebug: on\n"
 741      7567 3A20 
 741      6F6E 0A00 
 742               		.section	.progmem.data.__c.2544,"a",@progbits
 745               	__c.2544:
 746 0000 0A64 6562 		.string	"\ndebug: off\n"
 746      7567 3A20 
 746      6F66 660A 
 746      00
 747               		.section	.progmem.data.__c.2541,"a",@progbits
 750               	__c.2541:
 751 0000 0A0A 626F 		.string	"\n\nbootloader... "
 751      6F74 6C6F 
 751      6164 6572 
 751      2E2E 2E20 
 751      00
 752               		.section	.progmem.data.__c.2538,"a",@progbits
 755               	__c.2538:
 756 0000 433E 2000 		.string	"C> "
 757               	.global	command_state
 758               		.section	.bss.command_state,"aw",@nobits
 761               	command_state:
 762 0000 00        		.zero	1
 763               		.text
 764               	.Letext0:
 765               		.file 3 "/opt/local/avr/include/stdint.h"
 766               		.file 4 "/users/hunter/downloads/tmk_core/common/report.h"
 767               		.file 5 "/users/hunter/downloads/tmk_core/common/host.h"
 768               		.file 6 "/users/hunter/downloads/tmk_core/common/avr/xprintf.h"
 769               		.file 7 "/users/hunter/downloads/tmk_core/common/debug.h"
 770               		.file 8 "/users/hunter/downloads/tmk_core/common/timer.h"
 771               		.file 9 "/users/hunter/downloads/tmk_core/common/action_layer.h"
 772               		.file 10 "/users/hunter/downloads/tmk_core/common/action_util.h"
 773               		.file 11 "/users/hunter/downloads/tmk_core/common/command.h"
 774               		.file 12 "/users/hunter/downloads/tmk_core/common/action.h"
 775               		.file 13 "/users/hunter/downloads/tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:4      *ABS*:000000000000003f __SREG__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:12     .text.switch_default_layer:0000000000000000 switch_default_layer
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:635    .progmem.data.__c.2630:0000000000000000 __c.2630
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:80     .text.command_common:0000000000000000 command_common
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:650    .progmem.data.__c.2594:0000000000000000 __c.2594
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:715    .progmem.data.__c.2559:0000000000000000 __c.2559
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:735    .progmem.data.__c.2549:0000000000000000 __c.2549
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:750    .progmem.data.__c.2541:0000000000000000 __c.2541
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:645    .progmem.data.__c.2529:0000000000000000 __c.2529
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:640    .progmem.data.__c.2599:0000000000000000 __c.2599
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:755    .progmem.data.__c.2538:0000000000000000 __c.2538
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:761    .bss.command_state:0000000000000000 command_state
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:745    .progmem.data.__c.2544:0000000000000000 __c.2544
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:740    .progmem.data.__c.2546:0000000000000000 __c.2546
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:730    .progmem.data.__c.2551:0000000000000000 __c.2551
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:725    .progmem.data.__c.2554:0000000000000000 __c.2554
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:720    .progmem.data.__c.2556:0000000000000000 __c.2556
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:710    .progmem.data.__c.2561:0000000000000000 __c.2561
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:705    .progmem.data.__c.2564:0000000000000000 __c.2564
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:700    .progmem.data.__c.2566:0000000000000000 __c.2566
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:695    .progmem.data.__c.2568:0000000000000000 __c.2568
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:690    .progmem.data.__c.2570:0000000000000000 __c.2570
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:685    .progmem.data.__c.2572:0000000000000000 __c.2572
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:680    .progmem.data.__c.2574:0000000000000000 __c.2574
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:675    .progmem.data.__c.2577:0000000000000000 __c.2577
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:670    .progmem.data.__c.2579:0000000000000000 __c.2579
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:665    .progmem.data.__c.2581:0000000000000000 __c.2581
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:660    .progmem.data.__c.2583:0000000000000000 __c.2583
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:655    .progmem.data.__c.2585:0000000000000000 __c.2585
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:442    .text.command_extra:0000000000000000 command_extra
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:442    .text.command_extra:0000000000000000 command_extra.localalias.0
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:463    .text.command_console_extra:0000000000000000 command_console_extra
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:477    .text.command_proc:0000000000000000 command_proc
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:625    .progmem.data.__c.2610:0000000000000000 __c.2610
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccJ6y4Cn.s:630    .progmem.data.__c.2612:0000000000000000 __c.2612

UNDEFINED SYMBOLS
__xprintf
default_layer_set
clear_keyboard
xputs
debug_config
bootloader_jump
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
keyboard_report
__do_clear_bss
