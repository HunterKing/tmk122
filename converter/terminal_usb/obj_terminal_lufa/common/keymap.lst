   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LFB11:
  15               		.file 1 "/users/hunter/downloads/tmk_core/common/keymap.c"
   1:/users/hunter/downloads/tmk_core/common/keymap.c **** /*
   2:/users/hunter/downloads/tmk_core/common/keymap.c **** Copyright 2013,2016 Jun Wako <wakojun@gmail.com>
   3:/users/hunter/downloads/tmk_core/common/keymap.c **** 
   4:/users/hunter/downloads/tmk_core/common/keymap.c **** This program is free software: you can redistribute it and/or modify
   5:/users/hunter/downloads/tmk_core/common/keymap.c **** it under the terms of the GNU General Public License as published by
   6:/users/hunter/downloads/tmk_core/common/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   7:/users/hunter/downloads/tmk_core/common/keymap.c **** (at your option) any later version.
   8:/users/hunter/downloads/tmk_core/common/keymap.c **** 
   9:/users/hunter/downloads/tmk_core/common/keymap.c **** This program is distributed in the hope that it will be useful,
  10:/users/hunter/downloads/tmk_core/common/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/users/hunter/downloads/tmk_core/common/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:/users/hunter/downloads/tmk_core/common/keymap.c **** GNU General Public License for more details.
  13:/users/hunter/downloads/tmk_core/common/keymap.c **** 
  14:/users/hunter/downloads/tmk_core/common/keymap.c **** You should have received a copy of the GNU General Public License
  15:/users/hunter/downloads/tmk_core/common/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:/users/hunter/downloads/tmk_core/common/keymap.c **** */
  17:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "keymap.h"
  18:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "report.h"
  19:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "keycode.h"
  20:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "action_layer.h"
  21:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "action.h"
  22:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "action_macro.h"
  23:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "wait.h"
  24:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "debug.h"
  25:/users/hunter/downloads/tmk_core/common/keymap.c **** #include "bootloader.h"
  26:/users/hunter/downloads/tmk_core/common/keymap.c **** #if defined(__AVR__)
  27:/users/hunter/downloads/tmk_core/common/keymap.c **** #include <avr/pgmspace.h>
  28:/users/hunter/downloads/tmk_core/common/keymap.c **** #endif
  29:/users/hunter/downloads/tmk_core/common/keymap.c **** 
  30:/users/hunter/downloads/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  31:/users/hunter/downloads/tmk_core/common/keymap.c **** extern keymap_config_t keymap_config;
  32:/users/hunter/downloads/tmk_core/common/keymap.c **** #endif
  33:/users/hunter/downloads/tmk_core/common/keymap.c **** 
  34:/users/hunter/downloads/tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode);
  35:/users/hunter/downloads/tmk_core/common/keymap.c **** 
  36:/users/hunter/downloads/tmk_core/common/keymap.c **** 
  37:/users/hunter/downloads/tmk_core/common/keymap.c **** /* converts key to action */
  38:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
  39:/users/hunter/downloads/tmk_core/common/keymap.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  40:/users/hunter/downloads/tmk_core/common/keymap.c **** {
  41:/users/hunter/downloads/tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
  42:/users/hunter/downloads/tmk_core/common/keymap.c ****     switch (keycode) {
  43:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  44:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keymap_fn_to_action(keycode);
  45:/users/hunter/downloads/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  46:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_CAPSLOCK:
  47:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_LOCKING_CAPS:
  48:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock || keymap_config.capslock_to_control) {
  49:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
  50:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  51:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
  52:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_LCTL:
  53:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock) {
  54:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
  55:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  56:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LCTL);
  57:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_LALT:
  58:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  59:/users/hunter/downloads/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  60:/users/hunter/downloads/tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  61:/users/hunter/downloads/tmk_core/common/keymap.c ****                 }
  62:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LGUI);
  63:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  64:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LALT);
  65:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_LGUI:
  66:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  67:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
  68:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  69:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  70:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  71:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  72:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LGUI);
  73:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_RALT:
  74:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  75:/users/hunter/downloads/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  76:/users/hunter/downloads/tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  77:/users/hunter/downloads/tmk_core/common/keymap.c ****                 }
  78:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RGUI);
  79:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  80:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_RALT);
  81:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_RGUI:
  82:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  83:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
  84:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  85:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  86:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  87:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  88:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_RGUI);
  89:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_GRAVE:
  90:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  91:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
  92:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  93:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_GRAVE);
  94:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_ESC:
  95:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  96:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
  97:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
  98:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_ESC);
  99:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_BSLASH:
 100:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 101:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 102:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
 103:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSLASH);
 104:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_BSPACE:
 105:/users/hunter/downloads/tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 106:/users/hunter/downloads/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 107:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
 108:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSPACE);
 109:/users/hunter/downloads/tmk_core/common/keymap.c **** #endif
 110:/users/hunter/downloads/tmk_core/common/keymap.c ****         default:
 111:/users/hunter/downloads/tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
 112:/users/hunter/downloads/tmk_core/common/keymap.c ****     }
 113:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 114:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 115:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 116:/users/hunter/downloads/tmk_core/common/keymap.c **** /* Macro */
 117:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 118:/users/hunter/downloads/tmk_core/common/keymap.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 119:/users/hunter/downloads/tmk_core/common/keymap.c **** {
  16               		.loc 1 119 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 120:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)record;
 121:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)id;
 122:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)opt;
 123:/users/hunter/downloads/tmk_core/common/keymap.c ****     return MACRO_NONE;
 124:/users/hunter/downloads/tmk_core/common/keymap.c **** }
  23               		.loc 1 124 0
  24 0000 90E0      		ldi r25,0
  25 0002 80E0      		ldi r24,0
  26               	.LVL1:
  27               	/* epilogue start */
  28 0004 0895      		ret
  29               		.cfi_endproc
  30               	.LFE11:
  32               		.section	.text.action_function,"ax",@progbits
  33               		.weak	action_function
  35               	action_function:
  36               	.LFB12:
 125:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 126:/users/hunter/downloads/tmk_core/common/keymap.c **** /* Function */
 127:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 128:/users/hunter/downloads/tmk_core/common/keymap.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 129:/users/hunter/downloads/tmk_core/common/keymap.c **** {
  37               		.loc 1 129 0
  38               		.cfi_startproc
  39               	.LVL2:
  40               	/* prologue: function */
  41               	/* frame size = 0 */
  42               	/* stack size = 0 */
  43               	.L__stack_usage = 0
  44               	/* epilogue start */
 130:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)record;
 131:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)id;
 132:/users/hunter/downloads/tmk_core/common/keymap.c ****     (void)opt;
 133:/users/hunter/downloads/tmk_core/common/keymap.c **** }
  45               		.loc 1 133 0
  46 0000 0895      		ret
  47               		.cfi_endproc
  48               	.LFE12:
  50               		.section	.text.keymap_get_keycode,"ax",@progbits
  51               		.weak	keymap_get_keycode
  53               	keymap_get_keycode:
  54               	.LFB14:
 134:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 135:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 136:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 137:/users/hunter/downloads/tmk_core/common/keymap.c **** /* translates keycode to action */
 138:/users/hunter/downloads/tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode)
 139:/users/hunter/downloads/tmk_core/common/keymap.c **** {
 140:/users/hunter/downloads/tmk_core/common/keymap.c ****     switch (keycode) {
 141:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 142:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_LCTRL ... KC_RGUI:
 143:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_KEY(keycode);
 144:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 145:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 146:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 147:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 148:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 149:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 150:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 151:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 152:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_MOUSEKEY(keycode);
 153:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 154:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_TRNS:
 155:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_TRANSPARENT;
 156:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 157:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 158:/users/hunter/downloads/tmk_core/common/keymap.c ****             clear_keyboard();
 159:/users/hunter/downloads/tmk_core/common/keymap.c ****             wait_ms(50);
 160:/users/hunter/downloads/tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 161:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 162:/users/hunter/downloads/tmk_core/common/keymap.c ****         default:
 163:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 164:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 165:/users/hunter/downloads/tmk_core/common/keymap.c ****     }
 166:/users/hunter/downloads/tmk_core/common/keymap.c ****     return (action_t)ACTION_NO;
 167:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 168:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 169:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 170:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 171:/users/hunter/downloads/tmk_core/common/keymap.c **** #ifdef USE_LEGACY_KEYMAP
 172:/users/hunter/downloads/tmk_core/common/keymap.c **** /*
 173:/users/hunter/downloads/tmk_core/common/keymap.c ****  * Legacy keymap support
 174:/users/hunter/downloads/tmk_core/common/keymap.c ****  *      Consider using new keymap API instead.
 175:/users/hunter/downloads/tmk_core/common/keymap.c ****  */
 176:/users/hunter/downloads/tmk_core/common/keymap.c **** extern const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 177:/users/hunter/downloads/tmk_core/common/keymap.c **** extern const uint8_t fn_layer[];
 178:/users/hunter/downloads/tmk_core/common/keymap.c **** extern const uint8_t fn_keycode[];
 179:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 180:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 181:/users/hunter/downloads/tmk_core/common/keymap.c **** uint8_t keymap_get_keycode(uint8_t layer, uint8_t row, uint8_t col)
 182:/users/hunter/downloads/tmk_core/common/keymap.c **** {
  55               		.loc 1 182 0
  56               		.cfi_startproc
  57               	.LVL3:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               	.LBB4:
 183:/users/hunter/downloads/tmk_core/common/keymap.c ****     return pgm_read_byte(&keymaps[(layer)][(row)][(col)]);
  63               		.loc 1 183 0
  64 0000 E62F      		mov r30,r22
  65 0002 F0E0      		ldi r31,0
  66 0004 91E1      		ldi r25,lo8(17)
  67 0006 899F      		mul r24,r25
  68 0008 E00D      		add r30,r0
  69 000a F11D      		adc r31,r1
  70 000c 1124      		clr __zero_reg__
  71 000e 83E0      		ldi r24,3
  72               		1:
  73 0010 EE0F      		lsl r30
  74 0012 FF1F      		rol r31
  75 0014 8A95      		dec r24
  76 0016 01F4      		brne 1b
  77               	.LVL4:
  78 0018 E40F      		add r30,r20
  79 001a F11D      		adc r31,__zero_reg__
  80 001c E050      		subi r30,lo8(-(keymaps))
  81 001e F040      		sbci r31,hi8(-(keymaps))
  82               	/* #APP */
  83               	 ;  183 "/users/hunter/downloads/tmk_core/common/keymap.c" 1
  84 0020 8491      		lpm r24, Z
  85               		
  86               	 ;  0 "" 2
  87               	.LVL5:
  88               	/* epilogue start */
  89               	/* #NOAPP */
  90               	.LBE4:
 184:/users/hunter/downloads/tmk_core/common/keymap.c **** }
  91               		.loc 1 184 0
  92 0022 0895      		ret
  93               		.cfi_endproc
  94               	.LFE14:
  96               		.section	.text.keymap_fn_layer,"ax",@progbits
  97               		.weak	keymap_fn_layer
  99               	keymap_fn_layer:
 100               	.LFB15:
 185:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 186:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 187:/users/hunter/downloads/tmk_core/common/keymap.c **** uint8_t keymap_fn_layer(uint8_t index)
 188:/users/hunter/downloads/tmk_core/common/keymap.c **** {
 101               		.loc 1 188 0
 102               		.cfi_startproc
 103               	.LVL6:
 104               	/* prologue: function */
 105               	/* frame size = 0 */
 106               	/* stack size = 0 */
 107               	.L__stack_usage = 0
 108               	.LBB5:
 189:/users/hunter/downloads/tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_layer[index]);
 109               		.loc 1 189 0
 110 0000 E82F      		mov r30,r24
 111 0002 F0E0      		ldi r31,0
 112 0004 E050      		subi r30,lo8(-(fn_layer))
 113 0006 F040      		sbci r31,hi8(-(fn_layer))
 114               	/* #APP */
 115               	 ;  189 "/users/hunter/downloads/tmk_core/common/keymap.c" 1
 116 0008 8491      		lpm r24, Z
 117               		
 118               	 ;  0 "" 2
 119               	.LVL7:
 120               	/* epilogue start */
 121               	/* #NOAPP */
 122               	.LBE5:
 190:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 123               		.loc 1 190 0
 124 000a 0895      		ret
 125               		.cfi_endproc
 126               	.LFE15:
 128               		.section	.text.keymap_fn_keycode,"ax",@progbits
 129               		.weak	keymap_fn_keycode
 131               	keymap_fn_keycode:
 132               	.LFB16:
 191:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 192:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 193:/users/hunter/downloads/tmk_core/common/keymap.c **** uint8_t keymap_fn_keycode(uint8_t index)
 194:/users/hunter/downloads/tmk_core/common/keymap.c **** {
 133               		.loc 1 194 0
 134               		.cfi_startproc
 135               	.LVL8:
 136               	/* prologue: function */
 137               	/* frame size = 0 */
 138               	/* stack size = 0 */
 139               	.L__stack_usage = 0
 140               	.LBB6:
 195:/users/hunter/downloads/tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_keycode[index]);
 141               		.loc 1 195 0
 142 0000 E82F      		mov r30,r24
 143 0002 F0E0      		ldi r31,0
 144 0004 E050      		subi r30,lo8(-(fn_keycode))
 145 0006 F040      		sbci r31,hi8(-(fn_keycode))
 146               	/* #APP */
 147               	 ;  195 "/users/hunter/downloads/tmk_core/common/keymap.c" 1
 148 0008 8491      		lpm r24, Z
 149               		
 150               	 ;  0 "" 2
 151               	.LVL9:
 152               	/* epilogue start */
 153               	/* #NOAPP */
 154               	.LBE6:
 196:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 155               		.loc 1 196 0
 156 000a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE16:
 160               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 161               		.weak	keymap_key_to_keycode
 163               	keymap_key_to_keycode:
 164               	.LFB17:
 197:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 198:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 199:/users/hunter/downloads/tmk_core/common/keymap.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 200:/users/hunter/downloads/tmk_core/common/keymap.c **** {
 165               		.loc 1 200 0
 166               		.cfi_startproc
 167               	.LVL10:
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 172 0000 462F      		mov r20,r22
 201:/users/hunter/downloads/tmk_core/common/keymap.c ****     return keymap_get_keycode(layer, key.row, key.col);
 173               		.loc 1 201 0
 174 0002 672F      		mov r22,r23
 175               	.LVL11:
 176 0004 0C94 0000 		jmp keymap_get_keycode
 177               	.LVL12:
 178               		.cfi_endproc
 179               	.LFE17:
 181               		.section	.text.keymap_fn_to_action,"ax",@progbits
 182               		.weak	keymap_fn_to_action
 184               	keymap_fn_to_action:
 185               	.LFB18:
 202:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 203:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 204:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 205:/users/hunter/downloads/tmk_core/common/keymap.c **** /* Legacy keymap support */
 206:/users/hunter/downloads/tmk_core/common/keymap.c **** __attribute__ ((weak))
 207:/users/hunter/downloads/tmk_core/common/keymap.c **** action_t keymap_fn_to_action(uint8_t keycode)
 208:/users/hunter/downloads/tmk_core/common/keymap.c **** {
 186               		.loc 1 208 0
 187               		.cfi_startproc
 188               	.LVL13:
 189 0000 CF93      		push r28
 190               	.LCFI0:
 191               		.cfi_def_cfa_offset 3
 192               		.cfi_offset 28, -2
 193 0002 DF93      		push r29
 194               	.LCFI1:
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 29, -3
 197               	/* prologue: function */
 198               	/* frame size = 0 */
 199               	/* stack size = 2 */
 200               	.L__stack_usage = 2
 209:/users/hunter/downloads/tmk_core/common/keymap.c ****     switch (keycode) {
 201               		.loc 1 209 0
 202 0004 D0E4      		ldi r29,lo8(64)
 203 0006 D80F      		add r29,r24
 210:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 211:/users/hunter/downloads/tmk_core/common/keymap.c ****             {
 212:/users/hunter/downloads/tmk_core/common/keymap.c ****                 uint8_t layer = keymap_fn_layer(FN_INDEX(keycode));
 213:/users/hunter/downloads/tmk_core/common/keymap.c ****                 uint8_t key = keymap_fn_keycode(FN_INDEX(keycode));
 214:/users/hunter/downloads/tmk_core/common/keymap.c ****                 if (key) {
 215:/users/hunter/downloads/tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_TAP_KEY(layer, key);
 216:/users/hunter/downloads/tmk_core/common/keymap.c ****                 } else {
 217:/users/hunter/downloads/tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_MOMENTARY(layer);
 218:/users/hunter/downloads/tmk_core/common/keymap.c ****                 }
 219:/users/hunter/downloads/tmk_core/common/keymap.c ****             }
 220:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 221:/users/hunter/downloads/tmk_core/common/keymap.c ****         default:
 222:/users/hunter/downloads/tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 204               		.loc 1 222 0
 205 0008 90E0      		ldi r25,0
 206 000a 80E0      		ldi r24,0
 207               	.LVL14:
 209:/users/hunter/downloads/tmk_core/common/keymap.c ****     switch (keycode) {
 208               		.loc 1 209 0
 209 000c D032      		cpi r29,lo8(32)
 210 000e 00F4      		brsh .L11
 211               	.LBB7:
 212:/users/hunter/downloads/tmk_core/common/keymap.c ****                 uint8_t key = keymap_fn_keycode(FN_INDEX(keycode));
 212               		.loc 1 212 0
 213 0010 8D2F      		mov r24,r29
 214 0012 0E94 0000 		call keymap_fn_layer
 215               	.LVL15:
 216 0016 C82F      		mov r28,r24
 217               	.LVL16:
 213:/users/hunter/downloads/tmk_core/common/keymap.c ****                 if (key) {
 218               		.loc 1 213 0
 219 0018 8D2F      		mov r24,r29
 220               	.LVL17:
 221 001a 0E94 0000 		call keymap_fn_keycode
 222               	.LVL18:
 223 001e 2C2F      		mov r18,r28
 224 0020 30E0      		ldi r19,0
 214:/users/hunter/downloads/tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_TAP_KEY(layer, key);
 225               		.loc 1 214 0
 226 0022 8823      		tst r24
 227 0024 01F0      		breq .L10
 215:/users/hunter/downloads/tmk_core/common/keymap.c ****                 } else {
 228               		.loc 1 215 0
 229 0026 322F      		mov r19,r18
 230 0028 2227      		clr r18
 231 002a 90E0      		ldi r25,0
 232 002c 906A      		ori r25,160
 233               	.LVL19:
 234 002e 822B      		or r24,r18
 235 0030 932B      		or r25,r19
 236               	.LVL20:
 237               	.L11:
 238               	/* epilogue start */
 239               	.LBE7:
 223:/users/hunter/downloads/tmk_core/common/keymap.c ****     }
 224:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 240               		.loc 1 224 0
 241 0032 DF91      		pop r29
 242 0034 CF91      		pop r28
 243 0036 0895      		ret
 244               	.LVL21:
 245               	.L10:
 246               	.LBB8:
 217:/users/hunter/downloads/tmk_core/common/keymap.c ****                 }
 247               		.loc 1 217 0
 248 0038 922F      		mov r25,r18
 249 003a 8827      		clr r24
 250               	.LVL22:
 251 003c 816F      		ori r24,241
 252 003e 906A      		ori r25,160
 253 0040 00C0      		rjmp .L11
 254               	.LBE8:
 255               		.cfi_endproc
 256               	.LFE18:
 258               		.section	.text.action_for_key,"ax",@progbits
 259               		.weak	action_for_key
 261               	action_for_key:
 262               	.LFB10:
  40:/users/hunter/downloads/tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
 263               		.loc 1 40 0
 264               		.cfi_startproc
 265               	.LVL23:
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
  41:/users/hunter/downloads/tmk_core/common/keymap.c ****     switch (keycode) {
 270               		.loc 1 41 0
 271 0000 0E94 0000 		call keymap_key_to_keycode
 272               	.LVL24:
  42:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 273               		.loc 1 42 0
 274 0004 90E4      		ldi r25,lo8(64)
 275 0006 980F      		add r25,r24
 276 0008 9032      		cpi r25,lo8(32)
 277 000a 00F4      		brsh .L13
  44:/users/hunter/downloads/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 278               		.loc 1 44 0
 279 000c 0C94 0000 		jmp keymap_fn_to_action
 280               	.LVL25:
 281               	.L13:
 282               	.LBB13:
 283               	.LBB14:
 140:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 284               		.loc 1 140 0
 285 0010 8D3B      		cpi r24,lo8(-67)
 286 0012 00F4      		brsh .L16
 287 0014 883A      		cpi r24,lo8(-88)
 288 0016 00F4      		brsh .L17
 289 0018 853A      		cpi r24,lo8(-91)
 290 001a 00F4      		brsh .L18
 291 001c 8430      		cpi r24,lo8(4)
 292 001e 00F4      		brsh .L19
 293 0020 8130      		cpi r24,lo8(1)
 294 0022 01F4      		brne .+2
 295 0024 00C0      		rjmp .L26
 296               	.LVL26:
 297               	.L51:
 166:/users/hunter/downloads/tmk_core/common/keymap.c **** }
 298               		.loc 1 166 0
 299 0026 90E0      		ldi r25,0
 300 0028 80E0      		ldi r24,0
 301 002a 0895      		ret
 302               	.LVL27:
 303               	.L16:
 140:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 304               		.loc 1 140 0
 305 002c 883E      		cpi r24,lo8(-24)
 306 002e 00F4      		brsh .L21
 307 0030 803E      		cpi r24,lo8(-32)
 308 0032 00F4      		brsh .L19
 309 0034 8F3B      		cpi r24,lo8(-65)
 310 0036 01F4      		brne .L51
 158:/users/hunter/downloads/tmk_core/common/keymap.c ****             wait_ms(50);
 311               		.loc 1 158 0
 312 0038 0E94 0000 		call clear_keyboard
 313               	.LVL28:
 314               	.LBB15:
 315               	.LBB16:
 316               		.file 2 "/opt/local/avr/include/util/delay.h"
   1:/opt/local/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/opt/local/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/opt/local/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/opt/local/avr/include/util/delay.h ****    All rights reserved.
   5:/opt/local/avr/include/util/delay.h **** 
   6:/opt/local/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/opt/local/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/opt/local/avr/include/util/delay.h **** 
   9:/opt/local/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/opt/local/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/opt/local/avr/include/util/delay.h **** 
  12:/opt/local/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/opt/local/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/opt/local/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/opt/local/avr/include/util/delay.h ****      distribution.
  16:/opt/local/avr/include/util/delay.h **** 
  17:/opt/local/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/opt/local/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/opt/local/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/opt/local/avr/include/util/delay.h **** 
  21:/opt/local/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/opt/local/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/opt/local/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/opt/local/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/opt/local/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/opt/local/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/opt/local/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/opt/local/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/opt/local/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/opt/local/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/opt/local/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/opt/local/avr/include/util/delay.h **** 
  33:/opt/local/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/opt/local/avr/include/util/delay.h **** 
  35:/opt/local/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/opt/local/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/opt/local/avr/include/util/delay.h **** 
  38:/opt/local/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/opt/local/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/opt/local/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/opt/local/avr/include/util/delay.h **** #  endif
  42:/opt/local/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/opt/local/avr/include/util/delay.h **** 
  44:/opt/local/avr/include/util/delay.h **** #include <inttypes.h>
  45:/opt/local/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/opt/local/avr/include/util/delay.h **** #include <math.h>
  47:/opt/local/avr/include/util/delay.h **** 
  48:/opt/local/avr/include/util/delay.h **** /** \file */
  49:/opt/local/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/opt/local/avr/include/util/delay.h ****     \code
  51:/opt/local/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/opt/local/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/opt/local/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/opt/local/avr/include/util/delay.h ****     \endcode
  55:/opt/local/avr/include/util/delay.h **** 
  56:/opt/local/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/opt/local/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/opt/local/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/opt/local/avr/include/util/delay.h ****     used.
  60:/opt/local/avr/include/util/delay.h **** 
  61:/opt/local/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/opt/local/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/opt/local/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/opt/local/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/opt/local/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/opt/local/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/opt/local/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/opt/local/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/opt/local/avr/include/util/delay.h **** 
  70:/opt/local/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/opt/local/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/opt/local/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/opt/local/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/opt/local/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/opt/local/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/opt/local/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/opt/local/avr/include/util/delay.h ****     routines linked into the application.
  78:/opt/local/avr/include/util/delay.h **** 
  79:/opt/local/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/opt/local/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/opt/local/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/opt/local/avr/include/util/delay.h **** 
  83:/opt/local/avr/include/util/delay.h **** */
  84:/opt/local/avr/include/util/delay.h **** 
  85:/opt/local/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/opt/local/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/opt/local/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/opt/local/avr/include/util/delay.h **** #endif
  89:/opt/local/avr/include/util/delay.h **** 
  90:/opt/local/avr/include/util/delay.h **** #ifndef F_CPU
  91:/opt/local/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/opt/local/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/opt/local/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/opt/local/avr/include/util/delay.h ****     \def F_CPU
  95:/opt/local/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/opt/local/avr/include/util/delay.h **** 
  97:/opt/local/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/opt/local/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/opt/local/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/opt/local/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/opt/local/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/opt/local/avr/include/util/delay.h **** 
 103:/opt/local/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/opt/local/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/opt/local/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/opt/local/avr/include/util/delay.h ****     integer value.
 107:/opt/local/avr/include/util/delay.h ****  */
 108:/opt/local/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/opt/local/avr/include/util/delay.h **** #endif
 110:/opt/local/avr/include/util/delay.h **** 
 111:/opt/local/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/opt/local/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/opt/local/avr/include/util/delay.h **** #endif
 114:/opt/local/avr/include/util/delay.h **** 
 115:/opt/local/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/opt/local/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/opt/local/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/opt/local/avr/include/util/delay.h **** #  include <math.h>
 119:/opt/local/avr/include/util/delay.h **** #endif
 120:/opt/local/avr/include/util/delay.h **** 
 121:/opt/local/avr/include/util/delay.h **** /**
 122:/opt/local/avr/include/util/delay.h ****    \ingroup util_delay
 123:/opt/local/avr/include/util/delay.h **** 
 124:/opt/local/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/opt/local/avr/include/util/delay.h **** 
 126:/opt/local/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/opt/local/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/opt/local/avr/include/util/delay.h **** 
 129:/opt/local/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/opt/local/avr/include/util/delay.h **** 
 131:/opt/local/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/opt/local/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/opt/local/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/opt/local/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/opt/local/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/opt/local/avr/include/util/delay.h **** 
 137:/opt/local/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/opt/local/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/opt/local/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/opt/local/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/opt/local/avr/include/util/delay.h **** 
 142:/opt/local/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/opt/local/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/opt/local/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/opt/local/avr/include/util/delay.h ****    microseconds of delay.
 146:/opt/local/avr/include/util/delay.h **** 
 147:/opt/local/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/opt/local/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/opt/local/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/opt/local/avr/include/util/delay.h ****    respectively.
 151:/opt/local/avr/include/util/delay.h **** 
 152:/opt/local/avr/include/util/delay.h ****    \note
 153:/opt/local/avr/include/util/delay.h **** 
 154:/opt/local/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/opt/local/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/opt/local/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/opt/local/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/opt/local/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/opt/local/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/opt/local/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/opt/local/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/opt/local/avr/include/util/delay.h ****    not available to the compiler then.
 163:/opt/local/avr/include/util/delay.h **** 
 164:/opt/local/avr/include/util/delay.h ****  */
 165:/opt/local/avr/include/util/delay.h **** void
 166:/opt/local/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/opt/local/avr/include/util/delay.h **** {
 168:/opt/local/avr/include/util/delay.h **** 	double __tmp ;
 169:/opt/local/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/opt/local/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/opt/local/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/opt/local/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/opt/local/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/opt/local/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/opt/local/avr/include/util/delay.h **** 
 176:/opt/local/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/opt/local/avr/include/util/delay.h **** 
 179:/opt/local/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/opt/local/avr/include/util/delay.h **** 
 182:/opt/local/avr/include/util/delay.h **** 	#else
 183:/opt/local/avr/include/util/delay.h **** 		//round up by default
 184:/opt/local/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/opt/local/avr/include/util/delay.h **** 	#endif
 186:/opt/local/avr/include/util/delay.h **** 
 187:/opt/local/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 317               		.loc 2 187 0
 318 003c 2FEF      		ldi r18,lo8(159999)
 319 003e 80E7      		ldi r24,hi8(159999)
 320 0040 92E0      		ldi r25,hlo8(159999)
 321 0042 2150      	1:	subi r18,1
 322 0044 8040      		sbci r24,0
 323 0046 9040      		sbci r25,0
 324 0048 01F4      		brne 1b
 325 004a 00C0      		rjmp .
 326 004c 0000      		nop
 327               	.LVL29:
 328               	.LBE16:
 329               	.LBE15:
 160:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 330               		.loc 1 160 0
 331 004e 0E94 0000 		call bootloader_jump
 332               	.LVL30:
 333 0052 00C0      		rjmp .L51
 334               	.LVL31:
 335               	.L21:
 140:/users/hunter/downloads/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 336               		.loc 1 140 0
 337 0054 803F      		cpi r24,lo8(-16)
 338 0056 00F0      		brlo .L51
 339 0058 90E0      		ldi r25,0
 152:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 340               		.loc 1 152 0
 341 005a 9065      		ori r25,80
 342               	.LVL32:
 343 005c 0895      		ret
 344               	.LVL33:
 345               	.L19:
 143:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 346               		.loc 1 143 0
 347 005e 90E0      		ldi r25,0
 348 0060 0895      		ret
 349               	.L18:
 146:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 350               		.loc 1 146 0
 351 0062 853A      		cpi r24,lo8(-91)
 352 0064 01F0      		breq .L27
 353 0066 863A      		cpi r24,lo8(-90)
 354 0068 01F0      		breq .L28
 355 006a 83E8      		ldi r24,lo8(-125)
 356 006c 90E4      		ldi r25,lo8(64)
 357               	.LVL34:
 358 006e 0895      		ret
 359               	.LVL35:
 360               	.L27:
 361 0070 81E8      		ldi r24,lo8(-127)
 362 0072 90E4      		ldi r25,lo8(64)
 363               	.LVL36:
 364 0074 0895      		ret
 365               	.LVL37:
 366               	.L28:
 367 0076 82E8      		ldi r24,lo8(-126)
 368 0078 90E4      		ldi r25,lo8(64)
 369               	.LVL38:
 370 007a 0895      		ret
 371               	.LVL39:
 372               	.L17:
 149:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 373               		.loc 1 149 0
 374 007c 883A      		cpi r24,lo8(-88)
 375 007e 01F4      		brne .+2
 376 0080 00C0      		rjmp .L29
 377 0082 893A      		cpi r24,lo8(-87)
 378 0084 01F4      		brne .+2
 379 0086 00C0      		rjmp .L30
 380 0088 8A3A      		cpi r24,lo8(-86)
 381 008a 01F4      		brne .+2
 382 008c 00C0      		rjmp .L31
 383 008e 8B3A      		cpi r24,lo8(-85)
 384 0090 01F4      		brne .+2
 385 0092 00C0      		rjmp .L32
 386 0094 8C3A      		cpi r24,lo8(-84)
 387 0096 01F4      		brne .+2
 388 0098 00C0      		rjmp .L33
 389 009a 8D3A      		cpi r24,lo8(-83)
 390 009c 01F4      		brne .+2
 391 009e 00C0      		rjmp .L34
 392 00a0 8E3A      		cpi r24,lo8(-82)
 393 00a2 01F4      		brne .+2
 394 00a4 00C0      		rjmp .L35
 395 00a6 8F3A      		cpi r24,lo8(-81)
 396 00a8 01F4      		brne .+2
 397 00aa 00C0      		rjmp .L36
 398 00ac 813B      		cpi r24,lo8(-79)
 399 00ae 01F4      		brne .+2
 400 00b0 00C0      		rjmp .L37
 401 00b2 803B      		cpi r24,lo8(-80)
 402 00b4 01F4      		brne .+2
 403 00b6 00C0      		rjmp .L38
 404 00b8 823B      		cpi r24,lo8(-78)
 405 00ba 01F4      		brne .+2
 406 00bc 00C0      		rjmp .L39
 407 00be 833B      		cpi r24,lo8(-77)
 408 00c0 01F4      		brne .+2
 409 00c2 00C0      		rjmp .L40
 410 00c4 843B      		cpi r24,lo8(-76)
 411 00c6 01F4      		brne .+2
 412 00c8 00C0      		rjmp .L41
 413 00ca 853B      		cpi r24,lo8(-75)
 414 00cc 01F4      		brne .+2
 415 00ce 00C0      		rjmp .L42
 416 00d0 863B      		cpi r24,lo8(-74)
 417 00d2 01F4      		brne .+2
 418 00d4 00C0      		rjmp .L43
 419 00d6 873B      		cpi r24,lo8(-73)
 420 00d8 01F4      		brne .+2
 421 00da 00C0      		rjmp .L44
 422 00dc 883B      		cpi r24,lo8(-72)
 423 00de 01F4      		brne .+2
 424 00e0 00C0      		rjmp .L45
 425 00e2 893B      		cpi r24,lo8(-71)
 426 00e4 01F4      		brne .+2
 427 00e6 00C0      		rjmp .L46
 428 00e8 8A3B      		cpi r24,lo8(-70)
 429 00ea 01F4      		brne .+2
 430 00ec 00C0      		rjmp .L47
 431 00ee 8B3B      		cpi r24,lo8(-69)
 432 00f0 01F4      		brne .+2
 433 00f2 00C0      		rjmp .L48
 434 00f4 8C3B      		cpi r24,lo8(-68)
 435 00f6 01F4      		brne .+2
 436 00f8 00C0      		rjmp .L49
 437 00fa 80E0      		ldi r24,0
 438 00fc 94E4      		ldi r25,lo8(68)
 439               	.LVL40:
 440 00fe 0895      		ret
 441               	.LVL41:
 442               	.L29:
 443 0100 82EE      		ldi r24,lo8(-30)
 444 0102 94E4      		ldi r25,lo8(68)
 445               	.LVL42:
 446 0104 0895      		ret
 447               	.LVL43:
 448               	.L30:
 449 0106 89EE      		ldi r24,lo8(-23)
 450 0108 94E4      		ldi r25,lo8(68)
 451               	.LVL44:
 452 010a 0895      		ret
 453               	.LVL45:
 454               	.L31:
 455 010c 8AEE      		ldi r24,lo8(-22)
 456 010e 94E4      		ldi r25,lo8(68)
 457               	.LVL46:
 458 0110 0895      		ret
 459               	.LVL47:
 460               	.L32:
 461 0112 85EB      		ldi r24,lo8(-75)
 462 0114 94E4      		ldi r25,lo8(68)
 463               	.LVL48:
 464 0116 0895      		ret
 465               	.LVL49:
 466               	.L33:
 467 0118 86EB      		ldi r24,lo8(-74)
 468 011a 94E4      		ldi r25,lo8(68)
 469               	.LVL50:
 470 011c 0895      		ret
 471               	.LVL51:
 472               	.L34:
 473 011e 83EB      		ldi r24,lo8(-77)
 474 0120 94E4      		ldi r25,lo8(68)
 475               	.LVL52:
 476 0122 0895      		ret
 477               	.LVL53:
 478               	.L35:
 479 0124 84EB      		ldi r24,lo8(-76)
 480 0126 94E4      		ldi r25,lo8(68)
 481               	.LVL54:
 482 0128 0895      		ret
 483               	.LVL55:
 484               	.L36:
 485 012a 87EB      		ldi r24,lo8(-73)
 486 012c 94E4      		ldi r25,lo8(68)
 487               	.LVL56:
 488 012e 0895      		ret
 489               	.LVL57:
 490               	.L37:
 491 0130 8CEC      		ldi r24,lo8(-52)
 492 0132 94E4      		ldi r25,lo8(68)
 493               	.LVL58:
 494 0134 0895      		ret
 495               	.LVL59:
 496               	.L38:
 497 0136 8DEC      		ldi r24,lo8(-51)
 498 0138 94E4      		ldi r25,lo8(68)
 499               	.LVL60:
 500 013a 0895      		ret
 501               	.LVL61:
 502               	.L39:
 503 013c 83E8      		ldi r24,lo8(-125)
 504 013e 95E4      		ldi r25,lo8(69)
 505               	.LVL62:
 506 0140 0895      		ret
 507               	.LVL63:
 508               	.L40:
 509 0142 8AE8      		ldi r24,lo8(-118)
 510 0144 95E4      		ldi r25,lo8(69)
 511               	.LVL64:
 512 0146 0895      		ret
 513               	.LVL65:
 514               	.L41:
 515 0148 82E9      		ldi r24,lo8(-110)
 516 014a 95E4      		ldi r25,lo8(69)
 517               	.LVL66:
 518 014c 0895      		ret
 519               	.LVL67:
 520               	.L42:
 521 014e 84E9      		ldi r24,lo8(-108)
 522 0150 95E4      		ldi r25,lo8(69)
 523               	.LVL68:
 524 0152 0895      		ret
 525               	.LVL69:
 526               	.L43:
 527 0154 81E2      		ldi r24,lo8(33)
 528 0156 96E4      		ldi r25,lo8(70)
 529               	.LVL70:
 530 0158 0895      		ret
 531               	.LVL71:
 532               	.L44:
 533 015a 83E2      		ldi r24,lo8(35)
 534 015c 96E4      		ldi r25,lo8(70)
 535               	.LVL72:
 536 015e 0895      		ret
 537               	.LVL73:
 538               	.L45:
 539 0160 84E2      		ldi r24,lo8(36)
 540 0162 96E4      		ldi r25,lo8(70)
 541               	.LVL74:
 542 0164 0895      		ret
 543               	.LVL75:
 544               	.L46:
 545 0166 85E2      		ldi r24,lo8(37)
 546 0168 96E4      		ldi r25,lo8(70)
 547               	.LVL76:
 548 016a 0895      		ret
 549               	.LVL77:
 550               	.L47:
 551 016c 86E2      		ldi r24,lo8(38)
 552 016e 96E4      		ldi r25,lo8(70)
 553               	.LVL78:
 554 0170 0895      		ret
 555               	.LVL79:
 556               	.L48:
 557 0172 87E2      		ldi r24,lo8(39)
 558 0174 96E4      		ldi r25,lo8(70)
 559               	.LVL80:
 560 0176 0895      		ret
 561               	.LVL81:
 562               	.L49:
 563 0178 8AE2      		ldi r24,lo8(42)
 564 017a 96E4      		ldi r25,lo8(70)
 565               	.LVL82:
 566 017c 0895      		ret
 567               	.LVL83:
 568               	.L26:
 155:/users/hunter/downloads/tmk_core/common/keymap.c ****             break;
 569               		.loc 1 155 0
 570 017e 81E0      		ldi r24,lo8(1)
 571 0180 90E0      		ldi r25,0
 572               	.LVL84:
 573               	/* epilogue start */
 574               	.LBE14:
 575               	.LBE13:
 113:/users/hunter/downloads/tmk_core/common/keymap.c **** 
 576               		.loc 1 113 0
 577 0182 0895      		ret
 578               		.cfi_endproc
 579               	.LFE10:
 581               		.text
 582               	.Letext0:
 583               		.file 3 "/opt/local/avr/include/stdint.h"
 584               		.file 4 "/users/hunter/downloads/tmk_core/common/keyboard.h"
 585               		.file 5 "/users/hunter/downloads/tmk_core/common/keycode.h"
 586               		.file 6 "/users/hunter/downloads/tmk_core/common/action_code.h"
 587               		.file 7 "/users/hunter/downloads/tmk_core/common/action_macro.h"
 588               		.file 8 "/users/hunter/downloads/tmk_core/common/action.h"
 589               		.file 9 "/users/hunter/downloads/tmk_core/common/action_layer.h"
 590               		.file 10 "/users/hunter/downloads/tmk_core/common/avr/xprintf.h"
 591               		.file 11 "/users/hunter/downloads/tmk_core/common/debug.h"
 592               		.file 12 "/users/hunter/downloads/tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:4      *ABS*:000000000000003f __SREG__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:13     .text.action_get_macro:0000000000000000 action_get_macro
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:35     .text.action_function:0000000000000000 action_function
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:53     .text.keymap_get_keycode:0000000000000000 keymap_get_keycode
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:99     .text.keymap_fn_layer:0000000000000000 keymap_fn_layer
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:131    .text.keymap_fn_keycode:0000000000000000 keymap_fn_keycode
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:163    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:184    .text.keymap_fn_to_action:0000000000000000 keymap_fn_to_action
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccVoAgUK.s:261    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
fn_layer
fn_keycode
clear_keyboard
bootloader_jump
