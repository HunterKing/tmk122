   1               		.file	"action.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_exec,"ax",@progbits
  11               	.global	action_exec
  13               	action_exec:
  14               	.LFB10:
  15               		.file 1 "/users/hunter/downloads/tmk_core/common/action.c"
   1:/users/hunter/downloads/tmk_core/common/action.c **** /*
   2:/users/hunter/downloads/tmk_core/common/action.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:/users/hunter/downloads/tmk_core/common/action.c **** 
   4:/users/hunter/downloads/tmk_core/common/action.c **** This program is free software: you can redistribute it and/or modify
   5:/users/hunter/downloads/tmk_core/common/action.c **** it under the terms of the GNU General Public License as published by
   6:/users/hunter/downloads/tmk_core/common/action.c **** the Free Software Foundation, either version 2 of the License, or
   7:/users/hunter/downloads/tmk_core/common/action.c **** (at your option) any later version.
   8:/users/hunter/downloads/tmk_core/common/action.c **** 
   9:/users/hunter/downloads/tmk_core/common/action.c **** This program is distributed in the hope that it will be useful,
  10:/users/hunter/downloads/tmk_core/common/action.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/users/hunter/downloads/tmk_core/common/action.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:/users/hunter/downloads/tmk_core/common/action.c **** GNU General Public License for more details.
  13:/users/hunter/downloads/tmk_core/common/action.c **** 
  14:/users/hunter/downloads/tmk_core/common/action.c **** You should have received a copy of the GNU General Public License
  15:/users/hunter/downloads/tmk_core/common/action.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:/users/hunter/downloads/tmk_core/common/action.c **** */
  17:/users/hunter/downloads/tmk_core/common/action.c **** #include "host.h"
  18:/users/hunter/downloads/tmk_core/common/action.c **** #include "keycode.h"
  19:/users/hunter/downloads/tmk_core/common/action.c **** #include "keyboard.h"
  20:/users/hunter/downloads/tmk_core/common/action.c **** #include "mousekey.h"
  21:/users/hunter/downloads/tmk_core/common/action.c **** #include "command.h"
  22:/users/hunter/downloads/tmk_core/common/action.c **** #include "led.h"
  23:/users/hunter/downloads/tmk_core/common/action.c **** #include "backlight.h"
  24:/users/hunter/downloads/tmk_core/common/action.c **** #include "action_layer.h"
  25:/users/hunter/downloads/tmk_core/common/action.c **** #include "action_tapping.h"
  26:/users/hunter/downloads/tmk_core/common/action.c **** #include "action_macro.h"
  27:/users/hunter/downloads/tmk_core/common/action.c **** #include "action_util.h"
  28:/users/hunter/downloads/tmk_core/common/action.c **** #include "action.h"
  29:/users/hunter/downloads/tmk_core/common/action.c **** #include "hook.h"
  30:/users/hunter/downloads/tmk_core/common/action.c **** #include "wait.h"
  31:/users/hunter/downloads/tmk_core/common/action.c **** 
  32:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef DEBUG_ACTION
  33:/users/hunter/downloads/tmk_core/common/action.c **** #include "debug.h"
  34:/users/hunter/downloads/tmk_core/common/action.c **** #else
  35:/users/hunter/downloads/tmk_core/common/action.c **** #include "nodebug.h"
  36:/users/hunter/downloads/tmk_core/common/action.c **** #endif
  37:/users/hunter/downloads/tmk_core/common/action.c **** 
  38:/users/hunter/downloads/tmk_core/common/action.c **** 
  39:/users/hunter/downloads/tmk_core/common/action.c **** void action_exec(keyevent_t event)
  40:/users/hunter/downloads/tmk_core/common/action.c **** {
  16               		.loc 1 40 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 CDB7      		in r28,__SP_L__
  27 0006 DEB7      		in r29,__SP_H__
  28               	.LCFI2:
  29               		.cfi_def_cfa_register 28
  30 0008 2B97      		sbiw r28,11
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 15
  33 000a 0FB6      		in __tmp_reg__,__SREG__
  34 000c F894      		cli
  35 000e DEBF      		out __SP_H__,r29
  36 0010 0FBE      		out __SREG__,__tmp_reg__
  37 0012 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 11 */
  40               	/* stack size = 13 */
  41               	.L__stack_usage = 13
  42 0014 942F      		mov r25,r20
  43 0016 4F83      		std Y+7,r20
  44 0018 252F      		mov r18,r21
  45 001a 5887      		std Y+8,r21
  46 001c 6987      		std Y+9,r22
  47 001e 7A87      		std Y+10,r23
  48 0020 8B87      		std Y+11,r24
  49               	.LVL0:
  50               	.LBB4:
  51               	.LBB5:
  52               		.file 2 "/users/hunter/downloads/tmk_core/common/keyboard.h"
   1:/users/hunter/downloads/tmk_core/common/keyboard.h **** /*
   2:/users/hunter/downloads/tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
   4:/users/hunter/downloads/tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:/users/hunter/downloads/tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:/users/hunter/downloads/tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:/users/hunter/downloads/tmk_core/common/keyboard.h **** (at your option) any later version.
   8:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
   9:/users/hunter/downloads/tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:/users/hunter/downloads/tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/users/hunter/downloads/tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:/users/hunter/downloads/tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  14:/users/hunter/downloads/tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:/users/hunter/downloads/tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:/users/hunter/downloads/tmk_core/common/keyboard.h **** */
  17:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  18:/users/hunter/downloads/tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:/users/hunter/downloads/tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  21:/users/hunter/downloads/tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:/users/hunter/downloads/tmk_core/common/keyboard.h **** #include <stdint.h>
  23:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  24:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  25:/users/hunter/downloads/tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:/users/hunter/downloads/tmk_core/common/keyboard.h **** extern "C" {
  27:/users/hunter/downloads/tmk_core/common/keyboard.h **** #endif
  28:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  29:/users/hunter/downloads/tmk_core/common/keyboard.h **** /* key matrix position */
  30:/users/hunter/downloads/tmk_core/common/keyboard.h **** typedef struct {
  31:/users/hunter/downloads/tmk_core/common/keyboard.h ****     uint8_t col;
  32:/users/hunter/downloads/tmk_core/common/keyboard.h ****     uint8_t row;
  33:/users/hunter/downloads/tmk_core/common/keyboard.h **** } keypos_t;
  34:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  35:/users/hunter/downloads/tmk_core/common/keyboard.h **** /* key event */
  36:/users/hunter/downloads/tmk_core/common/keyboard.h **** typedef struct {
  37:/users/hunter/downloads/tmk_core/common/keyboard.h ****     keypos_t key;
  38:/users/hunter/downloads/tmk_core/common/keyboard.h ****     bool     pressed;
  39:/users/hunter/downloads/tmk_core/common/keyboard.h ****     uint16_t time;
  40:/users/hunter/downloads/tmk_core/common/keyboard.h **** } keyevent_t;
  41:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  42:/users/hunter/downloads/tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:/users/hunter/downloads/tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:/users/hunter/downloads/tmk_core/common/keyboard.h **** 
  45:/users/hunter/downloads/tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:/users/hunter/downloads/tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:/users/hunter/downloads/tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:/users/hunter/downloads/tmk_core/common/keyboard.h ****  */
  49:/users/hunter/downloads/tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  53               		.loc 2 49 0
  54 0022 4A85      		ldd r20,Y+10
  55 0024 5B85      		ldd r21,Y+11
  56               	.LVL1:
  57 0026 81E0      		ldi r24,lo8(1)
  58 0028 452B      		or r20,r21
  59 002a 01F0      		breq .L2
  60 002c 2F3F      		cpi r18,lo8(-1)
  61 002e 01F4      		brne .L6
  62 0030 81E0      		ldi r24,lo8(1)
  63 0032 9F3F      		cpi r25,lo8(-1)
  64 0034 01F0      		breq .L2
  65               	.L6:
  66 0036 80E0      		ldi r24,0
  67               	.L2:
  68               	.LBE5:
  69               	.LBE4:
  41:/users/hunter/downloads/tmk_core/common/action.c ****     if (!IS_NOEVENT(event)) {
  70               		.loc 1 41 0
  71 0038 80FD      		sbrc r24,0
  72 003a 00C0      		rjmp .L4
  42:/users/hunter/downloads/tmk_core/common/action.c ****         dprint("\n---- action_exec: start -----\n");
  43:/users/hunter/downloads/tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
  44:/users/hunter/downloads/tmk_core/common/action.c ****         hook_matrix_change(event);
  73               		.loc 1 44 0
  74 003c 4F81      		ldd r20,Y+7
  75 003e 5885      		ldd r21,Y+8
  76 0040 6985      		ldd r22,Y+9
  77 0042 7A85      		ldd r23,Y+10
  78 0044 8B85      		ldd r24,Y+11
  79 0046 0E94 0000 		call hook_matrix_change
  80               	.LVL2:
  81               	.L4:
  45:/users/hunter/downloads/tmk_core/common/action.c ****     }
  46:/users/hunter/downloads/tmk_core/common/action.c **** 
  47:/users/hunter/downloads/tmk_core/common/action.c ****     keyrecord_t record = { .event = event };
  82               		.loc 1 47 0
  83 004a 1E82      		std Y+6,__zero_reg__
  84 004c 1D82      		std Y+5,__zero_reg__
  85 004e 85E0      		ldi r24,lo8(5)
  86 0050 FE01      		movw r30,r28
  87 0052 3796      		adiw r30,7
  88 0054 DE01      		movw r26,r28
  89 0056 1196      		adiw r26,1
  90               		0:
  91 0058 0190      		ld r0,Z+
  92 005a 0D92      		st X+,r0
  93 005c 8A95      		dec r24
  94 005e 01F4      		brne 0b
  48:/users/hunter/downloads/tmk_core/common/action.c **** 
  49:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  50:/users/hunter/downloads/tmk_core/common/action.c ****     action_tapping_process(record);
  95               		.loc 1 50 0
  96 0060 4981      		ldd r20,Y+1
  97 0062 5A81      		ldd r21,Y+2
  98 0064 6B81      		ldd r22,Y+3
  99 0066 7C81      		ldd r23,Y+4
 100 0068 8D81      		ldd r24,Y+5
 101 006a 9E81      		ldd r25,Y+6
 102               	/* epilogue start */
  51:/users/hunter/downloads/tmk_core/common/action.c **** #else
  52:/users/hunter/downloads/tmk_core/common/action.c ****     process_action(&record);
  53:/users/hunter/downloads/tmk_core/common/action.c ****     if (!IS_NOEVENT(record.event)) {
  54:/users/hunter/downloads/tmk_core/common/action.c ****         dprint("processed: "); debug_record(record); dprintln();
  55:/users/hunter/downloads/tmk_core/common/action.c ****     }
  56:/users/hunter/downloads/tmk_core/common/action.c **** #endif
  57:/users/hunter/downloads/tmk_core/common/action.c **** }
 103               		.loc 1 57 0
 104 006c 2B96      		adiw r28,11
 105 006e 0FB6      		in __tmp_reg__,__SREG__
 106 0070 F894      		cli
 107 0072 DEBF      		out __SP_H__,r29
 108 0074 0FBE      		out __SREG__,__tmp_reg__
 109 0076 CDBF      		out __SP_L__,r28
 110 0078 DF91      		pop r29
 111 007a CF91      		pop r28
  50:/users/hunter/downloads/tmk_core/common/action.c **** #else
 112               		.loc 1 50 0
 113 007c 0C94 0000 		jmp action_tapping_process
 114               	.LVL3:
 115               		.cfi_endproc
 116               	.LFE10:
 118               		.section	.text.register_code,"ax",@progbits
 119               	.global	register_code
 121               	register_code:
 122               	.LFB12:
  58:/users/hunter/downloads/tmk_core/common/action.c **** 
  59:/users/hunter/downloads/tmk_core/common/action.c **** void process_action(keyrecord_t *record)
  60:/users/hunter/downloads/tmk_core/common/action.c **** {
  61:/users/hunter/downloads/tmk_core/common/action.c ****     keyevent_t event = record->event;
  62:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  63:/users/hunter/downloads/tmk_core/common/action.c ****     uint8_t tap_count = record->tap.count;
  64:/users/hunter/downloads/tmk_core/common/action.c **** #endif
  65:/users/hunter/downloads/tmk_core/common/action.c **** 
  66:/users/hunter/downloads/tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return; }
  67:/users/hunter/downloads/tmk_core/common/action.c **** 
  68:/users/hunter/downloads/tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event.key);
  69:/users/hunter/downloads/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
  70:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
  71:/users/hunter/downloads/tmk_core/common/action.c ****     dprint(" layer_state: "); layer_debug();
  72:/users/hunter/downloads/tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
  73:/users/hunter/downloads/tmk_core/common/action.c **** #endif
  74:/users/hunter/downloads/tmk_core/common/action.c ****     dprintln();
  75:/users/hunter/downloads/tmk_core/common/action.c **** 
  76:/users/hunter/downloads/tmk_core/common/action.c ****     switch (action.kind.id) {
  77:/users/hunter/downloads/tmk_core/common/action.c ****         /* Key and Mods */
  78:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS:
  79:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_RMODS:
  80:/users/hunter/downloads/tmk_core/common/action.c ****             {
  81:/users/hunter/downloads/tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS) ?  action.key.mods :
  82:/users/hunter/downloads/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
  83:/users/hunter/downloads/tmk_core/common/action.c ****                 if (event.pressed) {
  84:/users/hunter/downloads/tmk_core/common/action.c ****                     if (mods) {
  85:/users/hunter/downloads/tmk_core/common/action.c ****                         add_weak_mods(mods);
  86:/users/hunter/downloads/tmk_core/common/action.c ****                         send_keyboard_report();
  87:/users/hunter/downloads/tmk_core/common/action.c ****                     }
  88:/users/hunter/downloads/tmk_core/common/action.c ****                     register_code(action.key.code);
  89:/users/hunter/downloads/tmk_core/common/action.c ****                 } else {
  90:/users/hunter/downloads/tmk_core/common/action.c ****                     unregister_code(action.key.code);
  91:/users/hunter/downloads/tmk_core/common/action.c ****                     if (mods) {
  92:/users/hunter/downloads/tmk_core/common/action.c ****                         del_weak_mods(mods);
  93:/users/hunter/downloads/tmk_core/common/action.c ****                         send_keyboard_report();
  94:/users/hunter/downloads/tmk_core/common/action.c ****                     }
  95:/users/hunter/downloads/tmk_core/common/action.c ****                 }
  96:/users/hunter/downloads/tmk_core/common/action.c ****             }
  97:/users/hunter/downloads/tmk_core/common/action.c ****             break;
  98:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  99:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 100:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 101:/users/hunter/downloads/tmk_core/common/action.c ****             {
 102:/users/hunter/downloads/tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS_TAP) ?  action.key.mods :
 103:/users/hunter/downloads/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 104:/users/hunter/downloads/tmk_core/common/action.c ****                 switch (action.layer_tap.code) {
 105:/users/hunter/downloads/tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 106:/users/hunter/downloads/tmk_core/common/action.c ****                     case MODS_ONESHOT:
 107:/users/hunter/downloads/tmk_core/common/action.c ****                         // Oneshot modifier
 108:/users/hunter/downloads/tmk_core/common/action.c ****                         if (event.pressed) {
 109:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count == 0) {
 110:/users/hunter/downloads/tmk_core/common/action.c ****                                 register_mods(mods);
 111:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 112:/users/hunter/downloads/tmk_core/common/action.c ****                             else if (tap_count == 1) {
 113:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 114:/users/hunter/downloads/tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 115:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 116:/users/hunter/downloads/tmk_core/common/action.c ****                             else {
 117:/users/hunter/downloads/tmk_core/common/action.c ****                                 register_mods(mods);
 118:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 119:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 120:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count == 0) {
 121:/users/hunter/downloads/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 122:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_mods(mods);
 123:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 124:/users/hunter/downloads/tmk_core/common/action.c ****                             else if (tap_count == 1) {
 125:/users/hunter/downloads/tmk_core/common/action.c ****                                 // Retain Oneshot mods
 126:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 127:/users/hunter/downloads/tmk_core/common/action.c ****                             else {
 128:/users/hunter/downloads/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 129:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_mods(mods);
 130:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 131:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 132:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 133:/users/hunter/downloads/tmk_core/common/action.c ****     #endif
 134:/users/hunter/downloads/tmk_core/common/action.c ****                     case MODS_TAP_TOGGLE:
 135:/users/hunter/downloads/tmk_core/common/action.c ****                         if (event.pressed) {
 136:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 137:/users/hunter/downloads/tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 138:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 139:/users/hunter/downloads/tmk_core/common/action.c ****                                     unregister_mods(mods);
 140:/users/hunter/downloads/tmk_core/common/action.c ****                                 } else {
 141:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods on\n");
 142:/users/hunter/downloads/tmk_core/common/action.c ****                                     register_mods(mods);
 143:/users/hunter/downloads/tmk_core/common/action.c ****                                 }
 144:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 145:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 146:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count < TAPPING_TOGGLE) {
 147:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 148:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_mods(mods);
 149:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 150:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 151:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 152:/users/hunter/downloads/tmk_core/common/action.c ****                     default:
 153:/users/hunter/downloads/tmk_core/common/action.c ****                         if (event.pressed) {
 154:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count > 0) {
 155:/users/hunter/downloads/tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 156:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 157:/users/hunter/downloads/tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 158:/users/hunter/downloads/tmk_core/common/action.c ****                                     record->tap.count = 0;
 159:/users/hunter/downloads/tmk_core/common/action.c ****                                     register_mods(mods);
 160:/users/hunter/downloads/tmk_core/common/action.c ****                                 } else {
 161:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: register_code\n");
 162:/users/hunter/downloads/tmk_core/common/action.c ****                                     register_code(action.key.code);
 163:/users/hunter/downloads/tmk_core/common/action.c ****                                 }
 164:/users/hunter/downloads/tmk_core/common/action.c ****                             } else {
 165:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 166:/users/hunter/downloads/tmk_core/common/action.c ****                                 register_mods(mods);
 167:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 168:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 169:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count > 0) {
 170:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 171:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_code(action.key.code);
 172:/users/hunter/downloads/tmk_core/common/action.c ****                             } else {
 173:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 174:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_mods(mods);
 175:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 176:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 177:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 178:/users/hunter/downloads/tmk_core/common/action.c ****                 }
 179:/users/hunter/downloads/tmk_core/common/action.c ****             }
 180:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 181:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 182:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 183:/users/hunter/downloads/tmk_core/common/action.c ****         /* other HID usage */
 184:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_USAGE:
 185:/users/hunter/downloads/tmk_core/common/action.c ****             switch (action.usage.page) {
 186:/users/hunter/downloads/tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 187:/users/hunter/downloads/tmk_core/common/action.c ****                     if (event.pressed) {
 188:/users/hunter/downloads/tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 189:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 190:/users/hunter/downloads/tmk_core/common/action.c ****                         host_system_send(0);
 191:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 192:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 193:/users/hunter/downloads/tmk_core/common/action.c ****                 case PAGE_CONSUMER:
 194:/users/hunter/downloads/tmk_core/common/action.c ****                     if (event.pressed) {
 195:/users/hunter/downloads/tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 196:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 197:/users/hunter/downloads/tmk_core/common/action.c ****                         host_consumer_send(0);
 198:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 199:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 200:/users/hunter/downloads/tmk_core/common/action.c ****             }
 201:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 202:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 203:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 204:/users/hunter/downloads/tmk_core/common/action.c ****         /* Mouse key */
 205:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_MOUSEKEY:
 206:/users/hunter/downloads/tmk_core/common/action.c ****             if (event.pressed) {
 207:/users/hunter/downloads/tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 208:/users/hunter/downloads/tmk_core/common/action.c ****                 mousekey_send();
 209:/users/hunter/downloads/tmk_core/common/action.c ****             } else {
 210:/users/hunter/downloads/tmk_core/common/action.c ****                 mousekey_off(action.key.code);
 211:/users/hunter/downloads/tmk_core/common/action.c ****                 mousekey_send();
 212:/users/hunter/downloads/tmk_core/common/action.c ****             }
 213:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 214:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 215:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 216:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER:
 217:/users/hunter/downloads/tmk_core/common/action.c ****             if (action.layer_bitop.on == 0) {
 218:/users/hunter/downloads/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 219:/users/hunter/downloads/tmk_core/common/action.c ****                 if (!event.pressed) {
 220:/users/hunter/downloads/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 221:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 222:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 223:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 224:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 225:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 226:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 227:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 228:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 229:/users/hunter/downloads/tmk_core/common/action.c ****                 }
 230:/users/hunter/downloads/tmk_core/common/action.c ****             } else {
 231:/users/hunter/downloads/tmk_core/common/action.c ****                 /* Layer Bitwise Operation */
 232:/users/hunter/downloads/tmk_core/common/action.c ****                 if (event.pressed ? (action.layer_bitop.on & ON_PRESS) :
 233:/users/hunter/downloads/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 234:/users/hunter/downloads/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 235:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 236:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 237:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 238:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 239:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 240:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 241:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 242:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 243:/users/hunter/downloads/tmk_core/common/action.c ****                 }
 244:/users/hunter/downloads/tmk_core/common/action.c ****             }
 245:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 246:/users/hunter/downloads/tmk_core/common/action.c ****     #ifndef NO_ACTION_TAPPING
 247:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 248:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 249:/users/hunter/downloads/tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 250:/users/hunter/downloads/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 251:/users/hunter/downloads/tmk_core/common/action.c ****                     /* layer On/Off with modifiers(left only) */
 252:/users/hunter/downloads/tmk_core/common/action.c ****                     if (event.pressed) {
 253:/users/hunter/downloads/tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 254:/users/hunter/downloads/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 255:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 256:/users/hunter/downloads/tmk_core/common/action.c ****                         layer_off(action.layer_tap.val);
 257:/users/hunter/downloads/tmk_core/common/action.c ****                         unregister_mods(action.layer_tap.code & 0x0f);
 258:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 259:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 260:/users/hunter/downloads/tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 261:/users/hunter/downloads/tmk_core/common/action.c ****                     /* tap toggle */
 262:/users/hunter/downloads/tmk_core/common/action.c ****                     if (event.pressed) {
 263:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 264:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 265:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 266:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 267:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count <= TAPPING_TOGGLE) {
 268:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 269:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 270:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 271:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 272:/users/hunter/downloads/tmk_core/common/action.c ****                 case OP_ON_OFF:
 273:/users/hunter/downloads/tmk_core/common/action.c ****                     event.pressed ? layer_on(action.layer_tap.val) :
 274:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 275:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 276:/users/hunter/downloads/tmk_core/common/action.c ****                 case OP_OFF_ON:
 277:/users/hunter/downloads/tmk_core/common/action.c ****                     event.pressed ? layer_off(action.layer_tap.val) :
 278:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 279:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 280:/users/hunter/downloads/tmk_core/common/action.c ****                 case OP_SET_CLEAR:
 281:/users/hunter/downloads/tmk_core/common/action.c ****                     event.pressed ? layer_move(action.layer_tap.val) :
 282:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_clear();
 283:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 284:/users/hunter/downloads/tmk_core/common/action.c ****                 default:
 285:/users/hunter/downloads/tmk_core/common/action.c ****                     /* tap key */
 286:/users/hunter/downloads/tmk_core/common/action.c ****                     if (event.pressed) {
 287:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count > 0) {
 288:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 289:/users/hunter/downloads/tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 290:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 291:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: On on press\n");
 292:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 293:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 294:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 295:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count > 0) {
 296:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 297:/users/hunter/downloads/tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 298:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 299:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: Off on release\n");
 300:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 301:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 302:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 303:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 304:/users/hunter/downloads/tmk_core/common/action.c ****             }
 305:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 306:/users/hunter/downloads/tmk_core/common/action.c ****     #endif
 307:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 308:/users/hunter/downloads/tmk_core/common/action.c ****         /* Extentions */
 309:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_MACRO
 310:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_MACRO:
 311:/users/hunter/downloads/tmk_core/common/action.c ****             action_macro_play(action_get_macro(record, action.func.id, action.func.opt));
 312:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 313:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 314:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef BACKLIGHT_ENABLE
 315:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_BACKLIGHT:
 316:/users/hunter/downloads/tmk_core/common/action.c ****             if (!event.pressed) {
 317:/users/hunter/downloads/tmk_core/common/action.c ****                 switch (action.backlight.opt) {
 318:/users/hunter/downloads/tmk_core/common/action.c ****                     case BACKLIGHT_INCREASE:
 319:/users/hunter/downloads/tmk_core/common/action.c ****                         backlight_increase();
 320:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 321:/users/hunter/downloads/tmk_core/common/action.c ****                     case BACKLIGHT_DECREASE:
 322:/users/hunter/downloads/tmk_core/common/action.c ****                         backlight_decrease();
 323:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 324:/users/hunter/downloads/tmk_core/common/action.c ****                     case BACKLIGHT_TOGGLE:
 325:/users/hunter/downloads/tmk_core/common/action.c ****                         backlight_toggle();
 326:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 327:/users/hunter/downloads/tmk_core/common/action.c ****                     case BACKLIGHT_STEP:
 328:/users/hunter/downloads/tmk_core/common/action.c ****                         backlight_step();
 329:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 330:/users/hunter/downloads/tmk_core/common/action.c ****                     case BACKLIGHT_LEVEL:
 331:/users/hunter/downloads/tmk_core/common/action.c ****                         backlight_level(action.backlight.level);
 332:/users/hunter/downloads/tmk_core/common/action.c ****                         break;
 333:/users/hunter/downloads/tmk_core/common/action.c ****                 }
 334:/users/hunter/downloads/tmk_core/common/action.c ****             }
 335:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 336:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 337:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_COMMAND:
 338:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 339:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_FUNCTION
 340:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_FUNCTION:
 341:/users/hunter/downloads/tmk_core/common/action.c ****             action_function(record, action.func.id, action.func.opt);
 342:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 343:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 344:/users/hunter/downloads/tmk_core/common/action.c ****         default:
 345:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 346:/users/hunter/downloads/tmk_core/common/action.c ****     }
 347:/users/hunter/downloads/tmk_core/common/action.c **** }
 348:/users/hunter/downloads/tmk_core/common/action.c **** 
 349:/users/hunter/downloads/tmk_core/common/action.c **** 
 350:/users/hunter/downloads/tmk_core/common/action.c **** 
 351:/users/hunter/downloads/tmk_core/common/action.c **** 
 352:/users/hunter/downloads/tmk_core/common/action.c **** /*
 353:/users/hunter/downloads/tmk_core/common/action.c ****  * Utilities for actions.
 354:/users/hunter/downloads/tmk_core/common/action.c ****  */
 355:/users/hunter/downloads/tmk_core/common/action.c **** void register_code(uint8_t code)
 356:/users/hunter/downloads/tmk_core/common/action.c **** {
 123               		.loc 1 356 0
 124               		.cfi_startproc
 125               	.LVL4:
 126 0000 CF93      		push r28
 127               	.LCFI4:
 128               		.cfi_def_cfa_offset 3
 129               		.cfi_offset 28, -2
 130               	/* prologue: function */
 131               	/* frame size = 0 */
 132               	/* stack size = 1 */
 133               	.L__stack_usage = 1
 134 0002 C82F      		mov r28,r24
 357:/users/hunter/downloads/tmk_core/common/action.c ****     if (code == KC_NO) {
 135               		.loc 1 357 0
 136 0004 8823      		tst r24
 137 0006 01F4      		brne .+2
 138 0008 00C0      		rjmp .L10
 358:/users/hunter/downloads/tmk_core/common/action.c ****         return;
 359:/users/hunter/downloads/tmk_core/common/action.c ****     }
 360:/users/hunter/downloads/tmk_core/common/action.c **** 
 361:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 362:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 363:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 364:/users/hunter/downloads/tmk_core/common/action.c ****         // Resync: ignore if caps lock already is on
 365:/users/hunter/downloads/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK)) return;
 366:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 367:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 368:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 369:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 370:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 371:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 372:/users/hunter/downloads/tmk_core/common/action.c ****     }
 373:/users/hunter/downloads/tmk_core/common/action.c **** 
 374:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 375:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 376:/users/hunter/downloads/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK)) return;
 377:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 378:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 379:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 380:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 381:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 382:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 383:/users/hunter/downloads/tmk_core/common/action.c ****     }
 384:/users/hunter/downloads/tmk_core/common/action.c **** 
 385:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 386:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 387:/users/hunter/downloads/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK)) return;
 388:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 389:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 390:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 391:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 392:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 393:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 394:/users/hunter/downloads/tmk_core/common/action.c ****     }
 395:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 396:/users/hunter/downloads/tmk_core/common/action.c **** 
 397:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_KEY(code) {
 139               		.loc 1 397 0
 140 000a 8CEF      		ldi r24,lo8(-4)
 141               	.LVL5:
 142 000c 8C0F      		add r24,r28
 143 000e 813A      		cpi r24,lo8(-95)
 144 0010 00F4      		brsh .L13
 398:/users/hunter/downloads/tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 399:/users/hunter/downloads/tmk_core/common/action.c ****         if (command_proc(code)) return;
 145               		.loc 1 399 0
 146 0012 8C2F      		mov r24,r28
 147 0014 0E94 0000 		call command_proc
 148               	.LVL6:
 149 0018 8111      		cpse r24,__zero_reg__
 150 001a 00C0      		rjmp .L10
 400:/users/hunter/downloads/tmk_core/common/action.c **** 
 401:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_ONESHOT
 402:/users/hunter/downloads/tmk_core/common/action.c **** /* TODO: remove
 403:/users/hunter/downloads/tmk_core/common/action.c ****         if (oneshot_state.mods && !oneshot_state.disabled) {
 404:/users/hunter/downloads/tmk_core/common/action.c ****             uint8_t tmp_mods = get_mods();
 405:/users/hunter/downloads/tmk_core/common/action.c ****             add_mods(oneshot_state.mods);
 406:/users/hunter/downloads/tmk_core/common/action.c **** 
 407:/users/hunter/downloads/tmk_core/common/action.c ****             add_key(code);
 408:/users/hunter/downloads/tmk_core/common/action.c ****             send_keyboard_report();
 409:/users/hunter/downloads/tmk_core/common/action.c **** 
 410:/users/hunter/downloads/tmk_core/common/action.c ****             set_mods(tmp_mods);
 411:/users/hunter/downloads/tmk_core/common/action.c ****             send_keyboard_report();
 412:/users/hunter/downloads/tmk_core/common/action.c ****             oneshot_cancel();
 413:/users/hunter/downloads/tmk_core/common/action.c ****         } else 
 414:/users/hunter/downloads/tmk_core/common/action.c **** */
 415:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 416:/users/hunter/downloads/tmk_core/common/action.c ****         {
 417:/users/hunter/downloads/tmk_core/common/action.c ****             add_key(code);
 151               		.loc 1 417 0
 152 001c 8C2F      		mov r24,r28
 153 001e 0E94 0000 		call add_key
 154               	.LVL7:
 155               	.L42:
 156               	/* epilogue start */
 418:/users/hunter/downloads/tmk_core/common/action.c ****             send_keyboard_report();
 419:/users/hunter/downloads/tmk_core/common/action.c ****         }
 420:/users/hunter/downloads/tmk_core/common/action.c ****     }
 421:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_MOD(code) {
 422:/users/hunter/downloads/tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 423:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 424:/users/hunter/downloads/tmk_core/common/action.c ****     }
 425:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 426:/users/hunter/downloads/tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 427:/users/hunter/downloads/tmk_core/common/action.c ****     }
 428:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 429:/users/hunter/downloads/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 430:/users/hunter/downloads/tmk_core/common/action.c ****     }
 431:/users/hunter/downloads/tmk_core/common/action.c **** }
 157               		.loc 1 431 0
 158 0022 CF91      		pop r28
 423:/users/hunter/downloads/tmk_core/common/action.c ****     }
 159               		.loc 1 423 0
 160 0024 0C94 0000 		jmp send_keyboard_report
 161               	.LVL8:
 162               	.L13:
 421:/users/hunter/downloads/tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 163               		.loc 1 421 0
 164 0028 80E2      		ldi r24,lo8(32)
 165 002a 8C0F      		add r24,r28
 166 002c 8830      		cpi r24,lo8(8)
 167 002e 00F4      		brsh .L15
 422:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 168               		.loc 1 422 0
 169 0030 C770      		andi r28,lo8(7)
 170               	.LVL9:
 171 0032 81E0      		ldi r24,lo8(1)
 172 0034 00C0      		rjmp 2f
 173               		1:
 174 0036 880F      		lsl r24
 175               		2:
 176 0038 CA95      		dec r28
 177 003a 02F4      		brpl 1b
 178 003c 0E94 0000 		call add_mods
 179               	.LVL10:
 180 0040 00C0      		rjmp .L42
 181               	.LVL11:
 182               	.L15:
 425:/users/hunter/downloads/tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 183               		.loc 1 425 0
 184 0042 8BE5      		ldi r24,lo8(91)
 185 0044 8C0F      		add r24,r28
 186 0046 8330      		cpi r24,lo8(3)
 187 0048 00F4      		brsh .L16
 426:/users/hunter/downloads/tmk_core/common/action.c ****     }
 188               		.loc 1 426 0
 189 004a 81E8      		ldi r24,lo8(-127)
 190 004c 90E0      		ldi r25,0
 191 004e C53A      		cpi r28,lo8(-91)
 192 0050 01F0      		breq .L17
 426:/users/hunter/downloads/tmk_core/common/action.c ****     }
 193               		.loc 1 426 0 is_stmt 0 discriminator 1
 194 0052 83E8      		ldi r24,lo8(-125)
 195 0054 90E0      		ldi r25,0
 196 0056 C63A      		cpi r28,lo8(-90)
 197 0058 01F4      		brne .L17
 426:/users/hunter/downloads/tmk_core/common/action.c ****     }
 198               		.loc 1 426 0
 199 005a 82E8      		ldi r24,lo8(-126)
 200 005c 90E0      		ldi r25,0
 201               	.L17:
 202               	/* epilogue start */
 203               		.loc 1 431 0 is_stmt 1 discriminator 12
 204 005e CF91      		pop r28
 205               	.LVL12:
 426:/users/hunter/downloads/tmk_core/common/action.c ****     }
 206               		.loc 1 426 0 discriminator 12
 207 0060 0C94 0000 		jmp host_system_send
 208               	.LVL13:
 209               	.L16:
 428:/users/hunter/downloads/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 210               		.loc 1 428 0
 211 0064 88E5      		ldi r24,lo8(88)
 212 0066 8C0F      		add r24,r28
 213 0068 8531      		cpi r24,lo8(21)
 214 006a 00F0      		brlo .+2
 215 006c 00C0      		rjmp .L10
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 216               		.loc 1 429 0
 217 006e 82EE      		ldi r24,lo8(-30)
 218 0070 90E0      		ldi r25,0
 219 0072 C83A      		cpi r28,lo8(-88)
 220 0074 01F4      		brne .+2
 221 0076 00C0      		rjmp .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 222               		.loc 1 429 0 is_stmt 0 discriminator 1
 223 0078 89EE      		ldi r24,lo8(-23)
 224 007a 90E0      		ldi r25,0
 225 007c C93A      		cpi r28,lo8(-87)
 226 007e 01F4      		brne .+2
 227 0080 00C0      		rjmp .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 228               		.loc 1 429 0 discriminator 3
 229 0082 8AEE      		ldi r24,lo8(-22)
 230 0084 90E0      		ldi r25,0
 231 0086 CA3A      		cpi r28,lo8(-86)
 232 0088 01F4      		brne .+2
 233 008a 00C0      		rjmp .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 234               		.loc 1 429 0 discriminator 5
 235 008c 85EB      		ldi r24,lo8(-75)
 236 008e 90E0      		ldi r25,0
 237 0090 CB3A      		cpi r28,lo8(-85)
 238 0092 01F4      		brne .+2
 239 0094 00C0      		rjmp .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 240               		.loc 1 429 0 discriminator 7
 241 0096 86EB      		ldi r24,lo8(-74)
 242 0098 90E0      		ldi r25,0
 243 009a CC3A      		cpi r28,lo8(-84)
 244 009c 01F4      		brne .+2
 245 009e 00C0      		rjmp .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 246               		.loc 1 429 0 discriminator 9
 247 00a0 83EB      		ldi r24,lo8(-77)
 248 00a2 90E0      		ldi r25,0
 249 00a4 CD3A      		cpi r28,lo8(-83)
 250 00a6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 251               		.loc 1 429 0 discriminator 11
 252 00a8 84EB      		ldi r24,lo8(-76)
 253 00aa 90E0      		ldi r25,0
 254 00ac CE3A      		cpi r28,lo8(-82)
 255 00ae 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 256               		.loc 1 429 0 discriminator 13
 257 00b0 87EB      		ldi r24,lo8(-73)
 258 00b2 90E0      		ldi r25,0
 259 00b4 CF3A      		cpi r28,lo8(-81)
 260 00b6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 261               		.loc 1 429 0 discriminator 15
 262 00b8 8CEC      		ldi r24,lo8(-52)
 263 00ba 90E0      		ldi r25,0
 264 00bc C13B      		cpi r28,lo8(-79)
 265 00be 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 266               		.loc 1 429 0 discriminator 17
 267 00c0 8DEC      		ldi r24,lo8(-51)
 268 00c2 90E0      		ldi r25,0
 269 00c4 C03B      		cpi r28,lo8(-80)
 270 00c6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 271               		.loc 1 429 0 discriminator 19
 272 00c8 83E8      		ldi r24,lo8(-125)
 273 00ca 91E0      		ldi r25,lo8(1)
 274 00cc C23B      		cpi r28,lo8(-78)
 275 00ce 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 276               		.loc 1 429 0 discriminator 21
 277 00d0 8AE8      		ldi r24,lo8(-118)
 278 00d2 91E0      		ldi r25,lo8(1)
 279 00d4 C33B      		cpi r28,lo8(-77)
 280 00d6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 281               		.loc 1 429 0 discriminator 23
 282 00d8 82E9      		ldi r24,lo8(-110)
 283 00da 91E0      		ldi r25,lo8(1)
 284 00dc C43B      		cpi r28,lo8(-76)
 285 00de 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 286               		.loc 1 429 0 discriminator 25
 287 00e0 84E9      		ldi r24,lo8(-108)
 288 00e2 91E0      		ldi r25,lo8(1)
 289 00e4 C53B      		cpi r28,lo8(-75)
 290 00e6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 291               		.loc 1 429 0 discriminator 27
 292 00e8 81E2      		ldi r24,lo8(33)
 293 00ea 92E0      		ldi r25,lo8(2)
 294 00ec C63B      		cpi r28,lo8(-74)
 295 00ee 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 296               		.loc 1 429 0 discriminator 29
 297 00f0 83E2      		ldi r24,lo8(35)
 298 00f2 92E0      		ldi r25,lo8(2)
 299 00f4 C73B      		cpi r28,lo8(-73)
 300 00f6 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 301               		.loc 1 429 0 discriminator 31
 302 00f8 84E2      		ldi r24,lo8(36)
 303 00fa 92E0      		ldi r25,lo8(2)
 304 00fc C83B      		cpi r28,lo8(-72)
 305 00fe 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 306               		.loc 1 429 0 discriminator 33
 307 0100 85E2      		ldi r24,lo8(37)
 308 0102 92E0      		ldi r25,lo8(2)
 309 0104 C93B      		cpi r28,lo8(-71)
 310 0106 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 311               		.loc 1 429 0 discriminator 35
 312 0108 86E2      		ldi r24,lo8(38)
 313 010a 92E0      		ldi r25,lo8(2)
 314 010c CA3B      		cpi r28,lo8(-70)
 315 010e 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 316               		.loc 1 429 0 discriminator 37
 317 0110 87E2      		ldi r24,lo8(39)
 318 0112 92E0      		ldi r25,lo8(2)
 319 0114 CB3B      		cpi r28,lo8(-69)
 320 0116 01F0      		breq .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 321               		.loc 1 429 0 discriminator 39
 322 0118 90E0      		ldi r25,0
 323 011a 80E0      		ldi r24,0
 324 011c CC3B      		cpi r28,lo8(-68)
 325 011e 01F4      		brne .L18
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 326               		.loc 1 429 0
 327 0120 8AE2      		ldi r24,lo8(42)
 328 0122 92E0      		ldi r25,lo8(2)
 329               	.L18:
 330               	/* epilogue start */
 331               		.loc 1 431 0 is_stmt 1 discriminator 84
 332 0124 CF91      		pop r28
 333               	.LVL14:
 429:/users/hunter/downloads/tmk_core/common/action.c ****     }
 334               		.loc 1 429 0 discriminator 84
 335 0126 0C94 0000 		jmp host_consumer_send
 336               	.LVL15:
 337               	.L10:
 338               	/* epilogue start */
 339               		.loc 1 431 0
 340 012a CF91      		pop r28
 341               	.LVL16:
 342 012c 0895      		ret
 343               		.cfi_endproc
 344               	.LFE12:
 346               		.section	.text.unregister_code,"ax",@progbits
 347               	.global	unregister_code
 349               	unregister_code:
 350               	.LFB13:
 432:/users/hunter/downloads/tmk_core/common/action.c **** 
 433:/users/hunter/downloads/tmk_core/common/action.c **** void unregister_code(uint8_t code)
 434:/users/hunter/downloads/tmk_core/common/action.c **** {
 351               		.loc 1 434 0
 352               		.cfi_startproc
 353               	.LVL17:
 354               	/* prologue: function */
 355               	/* frame size = 0 */
 356               	/* stack size = 0 */
 357               	.L__stack_usage = 0
 435:/users/hunter/downloads/tmk_core/common/action.c ****     if (code == KC_NO) {
 358               		.loc 1 435 0
 359 0000 8823      		tst r24
 360 0002 01F0      		breq .L43
 436:/users/hunter/downloads/tmk_core/common/action.c ****         return;
 437:/users/hunter/downloads/tmk_core/common/action.c ****     }
 438:/users/hunter/downloads/tmk_core/common/action.c **** 
 439:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 440:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 441:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 442:/users/hunter/downloads/tmk_core/common/action.c ****         // Resync: ignore if caps lock already is off
 443:/users/hunter/downloads/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK))) return;
 444:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 445:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 446:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 447:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 448:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 449:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 450:/users/hunter/downloads/tmk_core/common/action.c ****     }
 451:/users/hunter/downloads/tmk_core/common/action.c **** 
 452:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 453:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 454:/users/hunter/downloads/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))) return;
 455:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 456:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 457:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 458:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 459:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 460:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 461:/users/hunter/downloads/tmk_core/common/action.c ****     }
 462:/users/hunter/downloads/tmk_core/common/action.c **** 
 463:/users/hunter/downloads/tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 464:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 465:/users/hunter/downloads/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK))) return;
 466:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 467:/users/hunter/downloads/tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 468:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 469:/users/hunter/downloads/tmk_core/common/action.c ****         wait_ms(100);
 470:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 471:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 472:/users/hunter/downloads/tmk_core/common/action.c ****     }
 473:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 474:/users/hunter/downloads/tmk_core/common/action.c **** 
 475:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_KEY(code) {
 361               		.loc 1 475 0
 362 0004 9CEF      		ldi r25,lo8(-4)
 363 0006 980F      		add r25,r24
 364 0008 913A      		cpi r25,lo8(-95)
 365 000a 00F4      		brsh .L45
 476:/users/hunter/downloads/tmk_core/common/action.c ****         del_key(code);
 366               		.loc 1 476 0
 367 000c 0E94 0000 		call del_key
 368               	.LVL18:
 369               	.L51:
 477:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 478:/users/hunter/downloads/tmk_core/common/action.c ****     }
 479:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_MOD(code) {
 480:/users/hunter/downloads/tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 481:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 370               		.loc 1 481 0
 371 0010 0C94 0000 		jmp send_keyboard_report
 372               	.LVL19:
 373               	.L45:
 479:/users/hunter/downloads/tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 374               		.loc 1 479 0
 375 0014 90E2      		ldi r25,lo8(32)
 376 0016 980F      		add r25,r24
 377 0018 9830      		cpi r25,lo8(8)
 378 001a 00F4      		brsh .L46
 480:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 379               		.loc 1 480 0
 380 001c 8770      		andi r24,lo8(7)
 381               	.LVL20:
 382 001e 91E0      		ldi r25,lo8(1)
 383 0020 00C0      		rjmp 2f
 384               		1:
 385 0022 990F      		lsl r25
 386               		2:
 387 0024 8A95      		dec r24
 388 0026 02F4      		brpl 1b
 389 0028 892F      		mov r24,r25
 390 002a 0E94 0000 		call del_mods
 391               	.LVL21:
 392 002e 00C0      		rjmp .L51
 393               	.LVL22:
 394               	.L46:
 482:/users/hunter/downloads/tmk_core/common/action.c ****     }
 483:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 395               		.loc 1 483 0
 396 0030 9BE5      		ldi r25,lo8(91)
 397 0032 980F      		add r25,r24
 398 0034 9330      		cpi r25,lo8(3)
 399 0036 00F4      		brsh .L47
 484:/users/hunter/downloads/tmk_core/common/action.c ****         host_system_send(0);
 400               		.loc 1 484 0
 401 0038 90E0      		ldi r25,0
 402 003a 80E0      		ldi r24,0
 403               	.LVL23:
 404 003c 0C94 0000 		jmp host_system_send
 405               	.LVL24:
 406               	.L47:
 485:/users/hunter/downloads/tmk_core/common/action.c ****     }
 486:/users/hunter/downloads/tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 407               		.loc 1 486 0
 408 0040 885A      		subi r24,lo8(-(88))
 409               	.LVL25:
 410 0042 8531      		cpi r24,lo8(21)
 411 0044 00F4      		brsh .L43
 487:/users/hunter/downloads/tmk_core/common/action.c ****         host_consumer_send(0);
 412               		.loc 1 487 0
 413 0046 90E0      		ldi r25,0
 414 0048 80E0      		ldi r24,0
 415               	.LVL26:
 416 004a 0C94 0000 		jmp host_consumer_send
 417               	.LVL27:
 418               	.L43:
 419               	/* epilogue start */
 488:/users/hunter/downloads/tmk_core/common/action.c ****     }
 489:/users/hunter/downloads/tmk_core/common/action.c **** }
 420               		.loc 1 489 0
 421 004e 0895      		ret
 422               		.cfi_endproc
 423               	.LFE13:
 425               		.section	.text.register_mods,"ax",@progbits
 426               	.global	register_mods
 428               	register_mods:
 429               	.LFB14:
 490:/users/hunter/downloads/tmk_core/common/action.c **** 
 491:/users/hunter/downloads/tmk_core/common/action.c **** void register_mods(uint8_t mods)
 492:/users/hunter/downloads/tmk_core/common/action.c **** {
 430               		.loc 1 492 0
 431               		.cfi_startproc
 432               	.LVL28:
 433               	/* prologue: function */
 434               	/* frame size = 0 */
 435               	/* stack size = 0 */
 436               	.L__stack_usage = 0
 493:/users/hunter/downloads/tmk_core/common/action.c ****     if (mods) {
 437               		.loc 1 493 0
 438 0000 8823      		tst r24
 439 0002 01F0      		breq .L52
 494:/users/hunter/downloads/tmk_core/common/action.c ****         add_mods(mods);
 440               		.loc 1 494 0
 441 0004 0E94 0000 		call add_mods
 442               	.LVL29:
 495:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 443               		.loc 1 495 0
 444 0008 0C94 0000 		jmp send_keyboard_report
 445               	.LVL30:
 446               	.L52:
 447               	/* epilogue start */
 496:/users/hunter/downloads/tmk_core/common/action.c ****     }
 497:/users/hunter/downloads/tmk_core/common/action.c **** }
 448               		.loc 1 497 0
 449 000c 0895      		ret
 450               		.cfi_endproc
 451               	.LFE14:
 453               		.section	.text.unregister_mods,"ax",@progbits
 454               	.global	unregister_mods
 456               	unregister_mods:
 457               	.LFB15:
 498:/users/hunter/downloads/tmk_core/common/action.c **** 
 499:/users/hunter/downloads/tmk_core/common/action.c **** void unregister_mods(uint8_t mods)
 500:/users/hunter/downloads/tmk_core/common/action.c **** {
 458               		.loc 1 500 0
 459               		.cfi_startproc
 460               	.LVL31:
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 501:/users/hunter/downloads/tmk_core/common/action.c ****     if (mods) {
 465               		.loc 1 501 0
 466 0000 8823      		tst r24
 467 0002 01F0      		breq .L54
 502:/users/hunter/downloads/tmk_core/common/action.c ****         del_mods(mods);
 468               		.loc 1 502 0
 469 0004 0E94 0000 		call del_mods
 470               	.LVL32:
 503:/users/hunter/downloads/tmk_core/common/action.c ****         send_keyboard_report();
 471               		.loc 1 503 0
 472 0008 0C94 0000 		jmp send_keyboard_report
 473               	.LVL33:
 474               	.L54:
 475               	/* epilogue start */
 504:/users/hunter/downloads/tmk_core/common/action.c ****     }
 505:/users/hunter/downloads/tmk_core/common/action.c **** }
 476               		.loc 1 505 0
 477 000c 0895      		ret
 478               		.cfi_endproc
 479               	.LFE15:
 481               		.section	.text.process_action,"ax",@progbits
 482               	.global	process_action
 484               	process_action:
 485               	.LFB11:
  60:/users/hunter/downloads/tmk_core/common/action.c ****     keyevent_t event = record->event;
 486               		.loc 1 60 0
 487               		.cfi_startproc
 488               	.LVL34:
 489 0000 AF92      		push r10
 490               	.LCFI5:
 491               		.cfi_def_cfa_offset 3
 492               		.cfi_offset 10, -2
 493 0002 BF92      		push r11
 494               	.LCFI6:
 495               		.cfi_def_cfa_offset 4
 496               		.cfi_offset 11, -3
 497 0004 CF92      		push r12
 498               	.LCFI7:
 499               		.cfi_def_cfa_offset 5
 500               		.cfi_offset 12, -4
 501 0006 DF92      		push r13
 502               	.LCFI8:
 503               		.cfi_def_cfa_offset 6
 504               		.cfi_offset 13, -5
 505 0008 EF92      		push r14
 506               	.LCFI9:
 507               		.cfi_def_cfa_offset 7
 508               		.cfi_offset 14, -6
 509 000a FF92      		push r15
 510               	.LCFI10:
 511               		.cfi_def_cfa_offset 8
 512               		.cfi_offset 15, -7
 513 000c 0F93      		push r16
 514               	.LCFI11:
 515               		.cfi_def_cfa_offset 9
 516               		.cfi_offset 16, -8
 517 000e 1F93      		push r17
 518               	.LCFI12:
 519               		.cfi_def_cfa_offset 10
 520               		.cfi_offset 17, -9
 521 0010 CF93      		push r28
 522               	.LCFI13:
 523               		.cfi_def_cfa_offset 11
 524               		.cfi_offset 28, -10
 525 0012 DF93      		push r29
 526               	.LCFI14:
 527               		.cfi_def_cfa_offset 12
 528               		.cfi_offset 29, -11
 529 0014 00D0      		rcall .
 530 0016 00D0      		rcall .
 531 0018 1F92      		push __zero_reg__
 532               	.LCFI15:
 533               		.cfi_def_cfa_offset 17
 534 001a CDB7      		in r28,__SP_L__
 535 001c DEB7      		in r29,__SP_H__
 536               	.LCFI16:
 537               		.cfi_def_cfa_register 28
 538               	/* prologue: function */
 539               	/* frame size = 5 */
 540               	/* stack size = 15 */
 541               	.L__stack_usage = 15
 542 001e 5C01      		movw r10,r24
  61:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 543               		.loc 1 61 0
 544 0020 85E0      		ldi r24,lo8(5)
 545               	.LVL35:
 546 0022 F501      		movw r30,r10
 547 0024 DE01      		movw r26,r28
 548 0026 1196      		adiw r26,1
 549               		0:
 550 0028 0190      		ld r0,Z+
 551 002a 0D92      		st X+,r0
 552 002c 8A95      		dec r24
 553 002e 01F4      		brne 0b
 554 0030 F501      		movw r30,r10
 555 0032 2081      		ld r18,Z
 556               	.LVL36:
 557 0034 9181      		ldd r25,Z+1
 558               	.LVL37:
 559               	.LBB12:
 560               	.LBB13:
 561               		.loc 2 49 0
 562 0036 4381      		ldd r20,Z+3
 563 0038 5481      		ldd r21,Z+4
 564 003a 81E0      		ldi r24,lo8(1)
 565 003c 452B      		or r20,r21
 566 003e 01F0      		breq .L57
 567 0040 9F3F      		cpi r25,lo8(-1)
 568 0042 01F4      		brne .L118
 569 0044 81E0      		ldi r24,lo8(1)
 570 0046 2F3F      		cpi r18,lo8(-1)
 571 0048 01F0      		breq .L57
 572               	.L118:
 573 004a 80E0      		ldi r24,0
 574               	.L57:
 575               	.LBE13:
 576               	.LBE12:
  66:/users/hunter/downloads/tmk_core/common/action.c **** 
 577               		.loc 1 66 0
 578 004c 80FD      		sbrc r24,0
 579 004e 00C0      		rjmp .L56
  61:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 580               		.loc 1 61 0
 581 0050 F501      		movw r30,r10
 582 0052 D280      		ldd r13,Z+2
  63:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 583               		.loc 1 63 0
 584 0054 F580      		ldd r15,Z+5
 585 0056 F294      		swap r15
 586 0058 3FE0      		ldi r19,lo8(15)
 587 005a F322      		and r15,r19
  68:/users/hunter/downloads/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 588               		.loc 1 68 0
 589 005c 2983      		std Y+1,r18
 590 005e 9A83      		std Y+2,r25
 591 0060 8981      		ldd r24,Y+1
 592 0062 9A81      		ldd r25,Y+2
 593 0064 0E94 0000 		call layer_switch_get_action
 594               	.LVL38:
 595 0068 8C01      		movw r16,r24
  71:/users/hunter/downloads/tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 596               		.loc 1 71 0
 597 006a 0E94 0000 		call layer_debug
 598               	.LVL39:
  72:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 599               		.loc 1 72 0
 600 006e 0E94 0000 		call default_layer_debug
 601               	.LVL40:
  76:/users/hunter/downloads/tmk_core/common/action.c ****         /* Key and Mods */
 602               		.loc 1 76 0
 603 0072 E12F      		mov r30,r17
 604 0074 E295      		swap r30
 605 0076 EF70      		andi r30,lo8(15)
 606 0078 F0E0      		ldi r31,0
 607 007a E050      		subi r30,lo8(-(gs(.L62)))
 608 007c F040      		sbci r31,hi8(-(gs(.L62)))
 609 007e 0C94 0000 		jmp __tablejump2__
 610               		.p2align	1
 611               	.L62:
 612 0082 0000      		.word gs(.L61)
 613 0084 0000      		.word gs(.L61)
 614 0086 0000      		.word gs(.L63)
 615 0088 0000      		.word gs(.L63)
 616 008a 0000      		.word gs(.L56)
 617 008c 0000      		.word gs(.L56)
 618 008e 0000      		.word gs(.L56)
 619 0090 0000      		.word gs(.L56)
 620 0092 0000      		.word gs(.L64)
 621 0094 0000      		.word gs(.L56)
 622 0096 0000      		.word gs(.L65)
 623 0098 0000      		.word gs(.L65)
 624 009a 0000      		.word gs(.L66)
 625 009c 0000      		.word gs(.L56)
 626 009e 0000      		.word gs(.L56)
 627 00a0 0000      		.word gs(.L67)
 628               	.L61:
 629 00a2 F12F      		mov r31,r17
 630 00a4 FF70      		andi r31,lo8(15)
 631 00a6 FF2E      		mov r15,r31
 632               	.LBB14:
  81:/users/hunter/downloads/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 633               		.loc 1 81 0
 634 00a8 107F      		andi r17,lo8(-16)
 635 00aa 01F0      		breq .L68
  81:/users/hunter/downloads/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 636               		.loc 1 81 0 is_stmt 0 discriminator 2
 637 00ac F294      		swap r15
 638 00ae 90EF      		ldi r25,lo8(-16)
 639 00b0 F922      		and r15,r25
 640               	.L68:
 641               	.LVL41:
  83:/users/hunter/downloads/tmk_core/common/action.c ****                     if (mods) {
 642               		.loc 1 83 0 is_stmt 1 discriminator 4
 643 00b2 DD20      		tst r13
 644 00b4 01F0      		breq .L69
  84:/users/hunter/downloads/tmk_core/common/action.c ****                         add_weak_mods(mods);
 645               		.loc 1 84 0
 646 00b6 FF20      		tst r15
 647 00b8 01F0      		breq .L145
  85:/users/hunter/downloads/tmk_core/common/action.c ****                         send_keyboard_report();
 648               		.loc 1 85 0
 649 00ba 8F2D      		mov r24,r15
 650 00bc 0E94 0000 		call add_weak_mods
 651               	.LVL42:
  86:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 652               		.loc 1 86 0
 653 00c0 0E94 0000 		call send_keyboard_report
 654               	.LVL43:
 655               	.L145:
 656               	.LBE14:
 289:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 657               		.loc 1 289 0
 658 00c4 802F      		mov r24,r16
 659               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 660               		.loc 1 347 0
 661 00c6 0F90      		pop __tmp_reg__
 662 00c8 0F90      		pop __tmp_reg__
 663 00ca 0F90      		pop __tmp_reg__
 664 00cc 0F90      		pop __tmp_reg__
 665 00ce 0F90      		pop __tmp_reg__
 666 00d0 DF91      		pop r29
 667 00d2 CF91      		pop r28
 668               	.LVL44:
 669 00d4 1F91      		pop r17
 670               	.LVL45:
 671 00d6 0F91      		pop r16
 672               	.LVL46:
 673 00d8 FF90      		pop r15
 674               	.LVL47:
 675 00da EF90      		pop r14
 676               	.LVL48:
 677 00dc DF90      		pop r13
 678               	.LVL49:
 679 00de CF90      		pop r12
 680               	.LVL50:
 681 00e0 BF90      		pop r11
 682               	.LVL51:
 683 00e2 AF90      		pop r10
 684               	.LVL52:
 289:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 685               		.loc 1 289 0
 686 00e4 0C94 0000 		jmp register_code
 687               	.LVL53:
 688               	.L69:
 689               	.LBB15:
  90:/users/hunter/downloads/tmk_core/common/action.c ****                     if (mods) {
 690               		.loc 1 90 0
 691 00e8 802F      		mov r24,r16
 692 00ea 0E94 0000 		call unregister_code
 693               	.LVL54:
  91:/users/hunter/downloads/tmk_core/common/action.c ****                         del_weak_mods(mods);
 694               		.loc 1 91 0
 695 00ee FF20      		tst r15
 696 00f0 01F4      		brne .+2
 697 00f2 00C0      		rjmp .L56
  92:/users/hunter/downloads/tmk_core/common/action.c ****                         send_keyboard_report();
 698               		.loc 1 92 0
 699 00f4 8F2D      		mov r24,r15
 700 00f6 0E94 0000 		call del_weak_mods
 701               	.LVL55:
 702               	/* epilogue start */
 703               	.LBE15:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 704               		.loc 1 347 0
 705 00fa 0F90      		pop __tmp_reg__
 706 00fc 0F90      		pop __tmp_reg__
 707 00fe 0F90      		pop __tmp_reg__
 708 0100 0F90      		pop __tmp_reg__
 709 0102 0F90      		pop __tmp_reg__
 710 0104 DF91      		pop r29
 711 0106 CF91      		pop r28
 712               	.LVL56:
 713 0108 1F91      		pop r17
 714               	.LVL57:
 715 010a 0F91      		pop r16
 716               	.LVL58:
 717 010c FF90      		pop r15
 718               	.LVL59:
 719 010e EF90      		pop r14
 720               	.LVL60:
 721 0110 DF90      		pop r13
 722               	.LVL61:
 723 0112 CF90      		pop r12
 724               	.LVL62:
 725 0114 BF90      		pop r11
 726               	.LVL63:
 727 0116 AF90      		pop r10
 728               	.LVL64:
 729               	.LBB16:
  93:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 730               		.loc 1 93 0
 731 0118 0C94 0000 		jmp send_keyboard_report
 732               	.LVL65:
 733               	.L63:
 734 011c 812F      		mov r24,r17
 735 011e 8F70      		andi r24,lo8(15)
 736 0120 E82E      		mov r14,r24
 737               	.LBE16:
 738               	.LBB17:
 102:/users/hunter/downloads/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 739               		.loc 1 102 0
 740 0122 107F      		andi r17,lo8(-16)
 741 0124 1032      		cpi r17,lo8(32)
 742 0126 01F0      		breq .L72
 102:/users/hunter/downloads/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 743               		.loc 1 102 0 is_stmt 0 discriminator 2
 744 0128 E294      		swap r14
 745 012a 80EF      		ldi r24,lo8(-16)
 746 012c E822      		and r14,r24
 747               	.L72:
 748               	.LVL66:
 104:/users/hunter/downloads/tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 749               		.loc 1 104 0 is_stmt 1 discriminator 4
 750 012e 0023      		tst r16
 751 0130 01F0      		breq .L74
 752 0132 0130      		cpi r16,lo8(1)
 753 0134 01F4      		brne .+2
 754 0136 00C0      		rjmp .L75
 153:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count > 0) {
 755               		.loc 1 153 0
 756 0138 DD20      		tst r13
 757 013a 01F4      		brne .+2
 758 013c 00C0      		rjmp .L83
 154:/users/hunter/downloads/tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 759               		.loc 1 154 0
 760 013e FF20      		tst r15
 761 0140 01F0      		breq .L82
 155:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 762               		.loc 1 155 0
 763 0142 F501      		movw r30,r10
 764 0144 8581      		ldd r24,Z+5
 765 0146 80FF      		sbrs r24,0
 766 0148 00C0      		rjmp .L145
 158:/users/hunter/downloads/tmk_core/common/action.c ****                                     register_mods(mods);
 767               		.loc 1 158 0
 768 014a 8F70      		andi r24,lo8(15)
 769 014c 8583      		std Z+5,r24
 770 014e 00C0      		rjmp .L82
 771               	.L74:
 108:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count == 0) {
 772               		.loc 1 108 0
 773 0150 DD20      		tst r13
 774 0152 01F0      		breq .L76
 109:/users/hunter/downloads/tmk_core/common/action.c ****                                 register_mods(mods);
 775               		.loc 1 109 0
 776 0154 F110      		cpse r15,__zero_reg__
 777 0156 00C0      		rjmp .L77
 778               	.L82:
 142:/users/hunter/downloads/tmk_core/common/action.c ****                                 }
 779               		.loc 1 142 0
 780 0158 8E2D      		mov r24,r14
 781               	.LVL67:
 782               	.L141:
 783               	/* epilogue start */
 784               	.LBE17:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 785               		.loc 1 347 0
 786 015a 0F90      		pop __tmp_reg__
 787 015c 0F90      		pop __tmp_reg__
 788 015e 0F90      		pop __tmp_reg__
 789 0160 0F90      		pop __tmp_reg__
 790 0162 0F90      		pop __tmp_reg__
 791 0164 DF91      		pop r29
 792 0166 CF91      		pop r28
 793               	.LVL68:
 794 0168 1F91      		pop r17
 795               	.LVL69:
 796 016a 0F91      		pop r16
 797               	.LVL70:
 798 016c FF90      		pop r15
 799               	.LVL71:
 800 016e EF90      		pop r14
 801               	.LVL72:
 802 0170 DF90      		pop r13
 803               	.LVL73:
 804 0172 CF90      		pop r12
 805               	.LVL74:
 806 0174 BF90      		pop r11
 807               	.LVL75:
 808 0176 AF90      		pop r10
 809               	.LVL76:
 810               	.LBB18:
 142:/users/hunter/downloads/tmk_core/common/action.c ****                                 }
 811               		.loc 1 142 0
 812 0178 0C94 0000 		jmp register_mods
 813               	.LVL77:
 814               	.L77:
 112:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 815               		.loc 1 112 0
 816 017c E1E0      		ldi r30,lo8(1)
 114:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 817               		.loc 1 114 0
 818 017e 8E2D      		mov r24,r14
 112:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 819               		.loc 1 112 0
 820 0180 FE12      		cpse r15,r30
 821 0182 00C0      		rjmp .L141
 822               	/* epilogue start */
 823               	.LBE18:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 824               		.loc 1 347 0
 825 0184 0F90      		pop __tmp_reg__
 826 0186 0F90      		pop __tmp_reg__
 827 0188 0F90      		pop __tmp_reg__
 828 018a 0F90      		pop __tmp_reg__
 829 018c 0F90      		pop __tmp_reg__
 830 018e DF91      		pop r29
 831 0190 CF91      		pop r28
 832               	.LVL78:
 833 0192 1F91      		pop r17
 834               	.LVL79:
 835 0194 0F91      		pop r16
 836               	.LVL80:
 837 0196 FF90      		pop r15
 838               	.LVL81:
 839 0198 EF90      		pop r14
 840               	.LVL82:
 841 019a DF90      		pop r13
 842               	.LVL83:
 843 019c CF90      		pop r12
 844               	.LVL84:
 845 019e BF90      		pop r11
 846               	.LVL85:
 847 01a0 AF90      		pop r10
 848               	.LVL86:
 849               	.LBB19:
 114:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 850               		.loc 1 114 0
 851 01a2 0C94 0000 		jmp set_oneshot_mods
 852               	.LVL87:
 853               	.L76:
 120:/users/hunter/downloads/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 854               		.loc 1 120 0
 855 01a6 F110      		cpse r15,__zero_reg__
 856 01a8 00C0      		rjmp .L79
 857               	.L142:
 128:/users/hunter/downloads/tmk_core/common/action.c ****                                 unregister_mods(mods);
 858               		.loc 1 128 0
 859 01aa 0E94 0000 		call clear_oneshot_mods
 860               	.LVL88:
 861               	.L86:
 174:/users/hunter/downloads/tmk_core/common/action.c ****                             }
 862               		.loc 1 174 0
 863 01ae 8E2D      		mov r24,r14
 864               	.LVL89:
 865               	.L149:
 866               	/* epilogue start */
 867               	.LBE19:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 868               		.loc 1 347 0
 869 01b0 0F90      		pop __tmp_reg__
 870 01b2 0F90      		pop __tmp_reg__
 871 01b4 0F90      		pop __tmp_reg__
 872 01b6 0F90      		pop __tmp_reg__
 873 01b8 0F90      		pop __tmp_reg__
 874 01ba DF91      		pop r29
 875 01bc CF91      		pop r28
 876               	.LVL90:
 877 01be 1F91      		pop r17
 878               	.LVL91:
 879 01c0 0F91      		pop r16
 880               	.LVL92:
 881 01c2 FF90      		pop r15
 882               	.LVL93:
 883 01c4 EF90      		pop r14
 884               	.LVL94:
 885 01c6 DF90      		pop r13
 886               	.LVL95:
 887 01c8 CF90      		pop r12
 888               	.LVL96:
 889 01ca BF90      		pop r11
 890               	.LVL97:
 891 01cc AF90      		pop r10
 892               	.LVL98:
 257:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 893               		.loc 1 257 0
 894 01ce 0C94 0000 		jmp unregister_mods
 895               	.LVL99:
 896               	.L79:
 897               	.LBB20:
 124:/users/hunter/downloads/tmk_core/common/action.c ****                                 // Retain Oneshot mods
 898               		.loc 1 124 0
 899 01d2 F1E0      		ldi r31,lo8(1)
 900 01d4 FF12      		cpse r15,r31
 901 01d6 00C0      		rjmp .L142
 902               	.LVL100:
 903               	.L56:
 904               	/* epilogue start */
 905               	.LBE20:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 906               		.loc 1 347 0
 907 01d8 0F90      		pop __tmp_reg__
 908 01da 0F90      		pop __tmp_reg__
 909 01dc 0F90      		pop __tmp_reg__
 910 01de 0F90      		pop __tmp_reg__
 911 01e0 0F90      		pop __tmp_reg__
 912 01e2 DF91      		pop r29
 913 01e4 CF91      		pop r28
 914 01e6 1F91      		pop r17
 915               	.LVL101:
 916 01e8 0F91      		pop r16
 917 01ea FF90      		pop r15
 918 01ec EF90      		pop r14
 919 01ee DF90      		pop r13
 920 01f0 CF90      		pop r12
 921 01f2 BF90      		pop r11
 922 01f4 AF90      		pop r10
 923               	.LVL102:
 924 01f6 0895      		ret
 925               	.LVL103:
 926               	.L75:
 927               	.LBB21:
 135:/users/hunter/downloads/tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 928               		.loc 1 135 0
 929 01f8 DD20      		tst r13
 930 01fa 01F0      		breq .L81
 136:/users/hunter/downloads/tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 931               		.loc 1 136 0
 932 01fc 85E0      		ldi r24,lo8(5)
 933 01fe 8F15      		cp r24,r15
 934 0200 00F0      		brlo .L56
 137:/users/hunter/downloads/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 935               		.loc 1 137 0
 936 0202 0E94 0000 		call get_mods
 937               	.LVL104:
 938 0206 8E21      		and r24,r14
 939 0208 01F4      		brne .+2
 940 020a 00C0      		rjmp .L82
 941 020c 00C0      		rjmp .L86
 942               	.L81:
 146:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 943               		.loc 1 146 0
 944 020e E4E0      		ldi r30,lo8(4)
 945 0210 EF15      		cp r30,r15
 946 0212 00F0      		brlo .L56
 947 0214 00C0      		rjmp .L86
 948               	.L83:
 169:/users/hunter/downloads/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 949               		.loc 1 169 0
 950 0216 FF20      		tst r15
 951 0218 01F0      		breq .L86
 952               	.LVL105:
 953               	.L148:
 954               	.LBE21:
 297:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 955               		.loc 1 297 0
 956 021a 802F      		mov r24,r16
 957               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 958               		.loc 1 347 0
 959 021c 0F90      		pop __tmp_reg__
 960 021e 0F90      		pop __tmp_reg__
 961 0220 0F90      		pop __tmp_reg__
 962 0222 0F90      		pop __tmp_reg__
 963 0224 0F90      		pop __tmp_reg__
 964 0226 DF91      		pop r29
 965 0228 CF91      		pop r28
 966               	.LVL106:
 967 022a 1F91      		pop r17
 968               	.LVL107:
 969 022c 0F91      		pop r16
 970               	.LVL108:
 971 022e FF90      		pop r15
 972               	.LVL109:
 973 0230 EF90      		pop r14
 974               	.LVL110:
 975 0232 DF90      		pop r13
 976               	.LVL111:
 977 0234 CF90      		pop r12
 978               	.LVL112:
 979 0236 BF90      		pop r11
 980               	.LVL113:
 981 0238 AF90      		pop r10
 982               	.LVL114:
 297:/users/hunter/downloads/tmk_core/common/action.c ****                         } else {
 983               		.loc 1 297 0
 984 023a 0C94 0000 		jmp unregister_code
 985               	.LVL115:
 986               	.L64:
 217:/users/hunter/downloads/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 987               		.loc 1 217 0
 988 023e 812F      		mov r24,r17
 989 0240 8370      		andi r24,lo8(3)
 990 0242 01F0      		breq .+2
 991 0244 00C0      		rjmp .L87
 219:/users/hunter/downloads/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 992               		.loc 1 219 0
 993 0246 D110      		cpse r13,__zero_reg__
 994 0248 00C0      		rjmp .L56
 995               	.LVL116:
 996               	.LBB22:
 220:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 997               		.loc 1 220 0
 998 024a 202F      		mov r18,r16
 999 024c 2295      		swap r18
 1000 024e 2695      		lsr r18
 1001 0250 2770      		andi r18,lo8(7)
 1002 0252 220F      		lsl r18
 1003 0254 220F      		lsl r18
 221:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1004               		.loc 1 221 0
 1005 0256 602F      		mov r22,r16
 1006 0258 6F70      		andi r22,lo8(15)
 1007 025a C62E      		mov r12,r22
 1008 025c D12C      		mov r13,__zero_reg__
 1009 025e F12C      		mov r15,__zero_reg__
 1010 0260 E12C      		mov r14,__zero_reg__
 1011 0262 022E      		mov r0,r18
 1012 0264 00C0      		rjmp 2f
 1013               		1:
 1014 0266 CC0C      		lsl r12
 1015 0268 DD1C      		rol r13
 1016 026a EE1C      		rol r14
 1017 026c FF1C      		rol r15
 1018               		2:
 1019 026e 0A94      		dec r0
 1020 0270 02F4      		brpl 1b
 1021               	.LVL117:
 222:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1022               		.loc 1 222 0
 1023 0272 60E0      		ldi r22,0
 1024 0274 70E0      		ldi r23,0
 1025 0276 CB01      		movw r24,r22
 1026 0278 04FF      		sbrs r16,4
 1027 027a 00C0      		rjmp .L88
 222:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1028               		.loc 1 222 0 is_stmt 0 discriminator 1
 1029 027c 6FE0      		ldi r22,lo8(15)
 1030 027e 70E0      		ldi r23,0
 1031 0280 80E0      		ldi r24,0
 1032 0282 90E0      		ldi r25,0
 1033 0284 00C0      		rjmp 2f
 1034               		1:
 1035 0286 660F      		lsl r22
 1036 0288 771F      		rol r23
 1037 028a 881F      		rol r24
 1038 028c 991F      		rol r25
 1039               		2:
 1040 028e 2A95      		dec r18
 1041 0290 02F4      		brpl 1b
 1042 0292 6095      		com r22
 1043 0294 7095      		com r23
 1044 0296 8095      		com r24
 1045 0298 9095      		com r25
 1046               	.L88:
 1047               	.LVL118:
 223:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1048               		.loc 1 223 0 is_stmt 1 discriminator 4
 1049 029a 1695      		lsr r17
 1050 029c 1695      		lsr r17
 1051               	.LVL119:
 1052 029e 1370      		andi r17,lo8(3)
 1053 02a0 1230      		cpi r17,lo8(2)
 1054 02a2 01F0      		breq .L90
 1055 02a4 00F4      		brsh .L91
 1056 02a6 6C29      		or r22,r12
 1057               	.LVL120:
 1058 02a8 7D29      		or r23,r13
 1059 02aa 8E29      		or r24,r14
 1060 02ac 9F29      		or r25,r15
 1061 02ae 1130      		cpi r17,lo8(1)
 1062 02b0 01F0      		breq .L150
 1063               	/* epilogue start */
 1064               	.LBE22:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1065               		.loc 1 347 0 discriminator 4
 1066 02b2 0F90      		pop __tmp_reg__
 1067 02b4 0F90      		pop __tmp_reg__
 1068 02b6 0F90      		pop __tmp_reg__
 1069 02b8 0F90      		pop __tmp_reg__
 1070 02ba 0F90      		pop __tmp_reg__
 1071 02bc DF91      		pop r29
 1072 02be CF91      		pop r28
 1073               	.LVL121:
 1074 02c0 1F91      		pop r17
 1075               	.LVL122:
 1076 02c2 0F91      		pop r16
 1077               	.LVL123:
 1078 02c4 FF90      		pop r15
 1079               	.LVL124:
 1080 02c6 EF90      		pop r14
 1081               	.LVL125:
 1082 02c8 DF90      		pop r13
 1083               	.LVL126:
 1084 02ca CF90      		pop r12
 1085               	.LVL127:
 1086 02cc BF90      		pop r11
 1087               	.LVL128:
 1088 02ce AF90      		pop r10
 1089               	.LVL129:
 1090               	.LBB23:
 224:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1091               		.loc 1 224 0 discriminator 4
 1092 02d0 0C94 0000 		jmp default_layer_and
 1093               	.LVL130:
 1094               	.L90:
 226:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1095               		.loc 1 226 0
 1096 02d4 6C29      		or r22,r12
 1097               	.LVL131:
 1098 02d6 7D29      		or r23,r13
 1099 02d8 8E29      		or r24,r14
 1100 02da 9F29      		or r25,r15
 1101               	/* epilogue start */
 1102               	.LBE23:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1103               		.loc 1 347 0
 1104 02dc 0F90      		pop __tmp_reg__
 1105 02de 0F90      		pop __tmp_reg__
 1106 02e0 0F90      		pop __tmp_reg__
 1107 02e2 0F90      		pop __tmp_reg__
 1108 02e4 0F90      		pop __tmp_reg__
 1109 02e6 DF91      		pop r29
 1110 02e8 CF91      		pop r28
 1111               	.LVL132:
 1112 02ea 1F91      		pop r17
 1113               	.LVL133:
 1114 02ec 0F91      		pop r16
 1115               	.LVL134:
 1116 02ee FF90      		pop r15
 1117               	.LVL135:
 1118 02f0 EF90      		pop r14
 1119               	.LVL136:
 1120 02f2 DF90      		pop r13
 1121               	.LVL137:
 1122 02f4 CF90      		pop r12
 1123               	.LVL138:
 1124 02f6 BF90      		pop r11
 1125               	.LVL139:
 1126 02f8 AF90      		pop r10
 1127               	.LVL140:
 1128               	.LBB24:
 226:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1129               		.loc 1 226 0
 1130 02fa 0C94 0000 		jmp default_layer_xor
 1131               	.LVL141:
 1132               	.L91:
 227:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 1133               		.loc 1 227 0
 1134 02fe 0E94 0000 		call default_layer_and
 1135               	.LVL142:
 1136 0302 C701      		movw r24,r14
 1137 0304 B601      		movw r22,r12
 1138               	.L150:
 1139               	/* epilogue start */
 1140               	.LBE24:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1141               		.loc 1 347 0
 1142 0306 0F90      		pop __tmp_reg__
 1143 0308 0F90      		pop __tmp_reg__
 1144 030a 0F90      		pop __tmp_reg__
 1145 030c 0F90      		pop __tmp_reg__
 1146 030e 0F90      		pop __tmp_reg__
 1147 0310 DF91      		pop r29
 1148 0312 CF91      		pop r28
 1149               	.LVL143:
 1150 0314 1F91      		pop r17
 1151               	.LVL144:
 1152 0316 0F91      		pop r16
 1153               	.LVL145:
 1154 0318 FF90      		pop r15
 1155               	.LVL146:
 1156 031a EF90      		pop r14
 1157               	.LVL147:
 1158 031c DF90      		pop r13
 1159               	.LVL148:
 1160 031e CF90      		pop r12
 1161               	.LVL149:
 1162 0320 BF90      		pop r11
 1163               	.LVL150:
 1164 0322 AF90      		pop r10
 1165               	.LVL151:
 1166               	.LBB25:
 227:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 1167               		.loc 1 227 0
 1168 0324 0C94 0000 		jmp default_layer_or
 1169               	.LVL152:
 1170               	.L87:
 1171               	.LBE25:
 232:/users/hunter/downloads/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1172               		.loc 1 232 0
 1173 0328 8695      		lsr r24
 1174 032a DD20      		tst r13
 1175 032c 01F0      		breq .L94
 232:/users/hunter/downloads/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1176               		.loc 1 232 0 is_stmt 0 discriminator 1
 1177 032e 812F      		mov r24,r17
 1178 0330 8170      		andi r24,lo8(1)
 1179               	.L94:
 232:/users/hunter/downloads/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1180               		.loc 1 232 0 discriminator 4
 1181 0332 8823      		tst r24
 1182 0334 01F4      		brne .+2
 1183 0336 00C0      		rjmp .L56
 1184               	.LVL153:
 1185               	.LBB26:
 234:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1186               		.loc 1 234 0 is_stmt 1
 1187 0338 202F      		mov r18,r16
 1188 033a 2295      		swap r18
 1189 033c 2695      		lsr r18
 1190 033e 2770      		andi r18,lo8(7)
 1191 0340 220F      		lsl r18
 1192 0342 220F      		lsl r18
 235:/users/hunter/downloads/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1193               		.loc 1 235 0
 1194 0344 602F      		mov r22,r16
 1195 0346 6F70      		andi r22,lo8(15)
 1196 0348 C62E      		mov r12,r22
 1197 034a D12C      		mov r13,__zero_reg__
 1198 034c F12C      		mov r15,__zero_reg__
 1199 034e E12C      		mov r14,__zero_reg__
 1200 0350 022E      		mov r0,r18
 1201 0352 00C0      		rjmp 2f
 1202               		1:
 1203 0354 CC0C      		lsl r12
 1204 0356 DD1C      		rol r13
 1205 0358 EE1C      		rol r14
 1206 035a FF1C      		rol r15
 1207               		2:
 1208 035c 0A94      		dec r0
 1209 035e 02F4      		brpl 1b
 1210               	.LVL154:
 236:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1211               		.loc 1 236 0
 1212 0360 60E0      		ldi r22,0
 1213 0362 70E0      		ldi r23,0
 1214 0364 CB01      		movw r24,r22
 1215 0366 04FF      		sbrs r16,4
 1216 0368 00C0      		rjmp .L95
 236:/users/hunter/downloads/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1217               		.loc 1 236 0 is_stmt 0 discriminator 1
 1218 036a 6FE0      		ldi r22,lo8(15)
 1219 036c 70E0      		ldi r23,0
 1220 036e 80E0      		ldi r24,0
 1221 0370 90E0      		ldi r25,0
 1222 0372 00C0      		rjmp 2f
 1223               		1:
 1224 0374 660F      		lsl r22
 1225 0376 771F      		rol r23
 1226 0378 881F      		rol r24
 1227 037a 991F      		rol r25
 1228               		2:
 1229 037c 2A95      		dec r18
 1230 037e 02F4      		brpl 1b
 1231 0380 6095      		com r22
 1232 0382 7095      		com r23
 1233 0384 8095      		com r24
 1234 0386 9095      		com r25
 1235               	.L95:
 1236               	.LVL155:
 237:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1237               		.loc 1 237 0 is_stmt 1 discriminator 4
 1238 0388 1695      		lsr r17
 1239 038a 1695      		lsr r17
 1240               	.LVL156:
 1241 038c 1370      		andi r17,lo8(3)
 1242 038e 1230      		cpi r17,lo8(2)
 1243 0390 01F0      		breq .L97
 1244 0392 00F4      		brsh .L98
 1245 0394 6C29      		or r22,r12
 1246               	.LVL157:
 1247 0396 7D29      		or r23,r13
 1248 0398 8E29      		or r24,r14
 1249 039a 9F29      		or r25,r15
 1250 039c 1130      		cpi r17,lo8(1)
 1251 039e 01F0      		breq .L151
 1252               	/* epilogue start */
 1253               	.LBE26:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1254               		.loc 1 347 0 discriminator 4
 1255 03a0 0F90      		pop __tmp_reg__
 1256 03a2 0F90      		pop __tmp_reg__
 1257 03a4 0F90      		pop __tmp_reg__
 1258 03a6 0F90      		pop __tmp_reg__
 1259 03a8 0F90      		pop __tmp_reg__
 1260 03aa DF91      		pop r29
 1261 03ac CF91      		pop r28
 1262               	.LVL158:
 1263 03ae 1F91      		pop r17
 1264               	.LVL159:
 1265 03b0 0F91      		pop r16
 1266               	.LVL160:
 1267 03b2 FF90      		pop r15
 1268               	.LVL161:
 1269 03b4 EF90      		pop r14
 1270               	.LVL162:
 1271 03b6 DF90      		pop r13
 1272               	.LVL163:
 1273 03b8 CF90      		pop r12
 1274               	.LVL164:
 1275 03ba BF90      		pop r11
 1276               	.LVL165:
 1277 03bc AF90      		pop r10
 1278               	.LVL166:
 1279               	.LBB27:
 238:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1280               		.loc 1 238 0 discriminator 4
 1281 03be 0C94 0000 		jmp layer_and
 1282               	.LVL167:
 1283               	.L97:
 240:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1284               		.loc 1 240 0
 1285 03c2 6C29      		or r22,r12
 1286               	.LVL168:
 1287 03c4 7D29      		or r23,r13
 1288 03c6 8E29      		or r24,r14
 1289 03c8 9F29      		or r25,r15
 1290               	/* epilogue start */
 1291               	.LBE27:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1292               		.loc 1 347 0
 1293 03ca 0F90      		pop __tmp_reg__
 1294 03cc 0F90      		pop __tmp_reg__
 1295 03ce 0F90      		pop __tmp_reg__
 1296 03d0 0F90      		pop __tmp_reg__
 1297 03d2 0F90      		pop __tmp_reg__
 1298 03d4 DF91      		pop r29
 1299 03d6 CF91      		pop r28
 1300               	.LVL169:
 1301 03d8 1F91      		pop r17
 1302               	.LVL170:
 1303 03da 0F91      		pop r16
 1304               	.LVL171:
 1305 03dc FF90      		pop r15
 1306               	.LVL172:
 1307 03de EF90      		pop r14
 1308               	.LVL173:
 1309 03e0 DF90      		pop r13
 1310               	.LVL174:
 1311 03e2 CF90      		pop r12
 1312               	.LVL175:
 1313 03e4 BF90      		pop r11
 1314               	.LVL176:
 1315 03e6 AF90      		pop r10
 1316               	.LVL177:
 1317               	.LBB28:
 240:/users/hunter/downloads/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1318               		.loc 1 240 0
 1319 03e8 0C94 0000 		jmp layer_xor
 1320               	.LVL178:
 1321               	.L98:
 241:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 1322               		.loc 1 241 0
 1323 03ec 0E94 0000 		call layer_and
 1324               	.LVL179:
 1325 03f0 C701      		movw r24,r14
 1326 03f2 B601      		movw r22,r12
 1327               	.L151:
 1328               	/* epilogue start */
 1329               	.LBE28:
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1330               		.loc 1 347 0
 1331 03f4 0F90      		pop __tmp_reg__
 1332 03f6 0F90      		pop __tmp_reg__
 1333 03f8 0F90      		pop __tmp_reg__
 1334 03fa 0F90      		pop __tmp_reg__
 1335 03fc 0F90      		pop __tmp_reg__
 1336 03fe DF91      		pop r29
 1337 0400 CF91      		pop r28
 1338               	.LVL180:
 1339 0402 1F91      		pop r17
 1340               	.LVL181:
 1341 0404 0F91      		pop r16
 1342               	.LVL182:
 1343 0406 FF90      		pop r15
 1344               	.LVL183:
 1345 0408 EF90      		pop r14
 1346               	.LVL184:
 1347 040a DF90      		pop r13
 1348               	.LVL185:
 1349 040c CF90      		pop r12
 1350               	.LVL186:
 1351 040e BF90      		pop r11
 1352               	.LVL187:
 1353 0410 AF90      		pop r10
 1354               	.LVL188:
 1355               	.LBB29:
 241:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 1356               		.loc 1 241 0
 1357 0412 0C94 0000 		jmp layer_or
 1358               	.LVL189:
 1359               	.L65:
 1360               	.LBE29:
 249:/users/hunter/downloads/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 1361               		.loc 1 249 0
 1362 0416 003F      		cpi r16,lo8(-16)
 1363 0418 01F0      		breq .L101
 1364 041a 00F4      		brsh .L102
 1365 041c 003E      		cpi r16,lo8(-32)
 1366 041e 00F4      		brsh .L140
 1367               	.L100:
 286:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count > 0) {
 1368               		.loc 1 286 0
 1369 0420 DD20      		tst r13
 1370 0422 01F4      		brne .+2
 1371 0424 00C0      		rjmp .L113
 287:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1372               		.loc 1 287 0
 1373 0426 F110      		cpse r15,__zero_reg__
 1374 0428 00C0      		rjmp .L145
 292:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1375               		.loc 1 292 0
 1376 042a 812F      		mov r24,r17
 1377 042c 8F71      		andi r24,lo8(31)
 1378 042e 00C0      		rjmp .L146
 1379               	.L102:
 249:/users/hunter/downloads/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 1380               		.loc 1 249 0
 1381 0430 023F      		cpi r16,lo8(-14)
 1382 0432 01F4      		brne .+2
 1383 0434 00C0      		rjmp .L104
 1384 0436 00F4      		brsh .+2
 1385 0438 00C0      		rjmp .L105
 1386 043a 033F      		cpi r16,lo8(-13)
 1387 043c 01F4      		brne .L100
 281:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_clear();
 1388               		.loc 1 281 0
 1389 043e DD20      		tst r13
 1390 0440 01F4      		brne .+2
 1391 0442 00C0      		rjmp .L112
 281:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_clear();
 1392               		.loc 1 281 0 is_stmt 0 discriminator 1
 1393 0444 812F      		mov r24,r17
 1394 0446 8F71      		andi r24,lo8(31)
 1395               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1396               		.loc 1 347 0 is_stmt 1 discriminator 1
 1397 0448 0F90      		pop __tmp_reg__
 1398 044a 0F90      		pop __tmp_reg__
 1399 044c 0F90      		pop __tmp_reg__
 1400 044e 0F90      		pop __tmp_reg__
 1401 0450 0F90      		pop __tmp_reg__
 1402 0452 DF91      		pop r29
 1403 0454 CF91      		pop r28
 1404               	.LVL190:
 1405 0456 1F91      		pop r17
 1406               	.LVL191:
 1407 0458 0F91      		pop r16
 1408               	.LVL192:
 1409 045a FF90      		pop r15
 1410               	.LVL193:
 1411 045c EF90      		pop r14
 1412               	.LVL194:
 1413 045e DF90      		pop r13
 1414               	.LVL195:
 1415 0460 CF90      		pop r12
 1416               	.LVL196:
 1417 0462 BF90      		pop r11
 1418               	.LVL197:
 1419 0464 AF90      		pop r10
 1420               	.LVL198:
 281:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_clear();
 1421               		.loc 1 281 0 discriminator 1
 1422 0466 0C94 0000 		jmp layer_move
 1423               	.LVL199:
 1424               	.L140:
 1425 046a 0F70      		andi r16,lo8(15)
 1426               	.LVL200:
 1427 046c 812F      		mov r24,r17
 1428 046e 8F71      		andi r24,lo8(31)
 252:/users/hunter/downloads/tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1429               		.loc 1 252 0
 1430 0470 DD20      		tst r13
 1431 0472 01F0      		breq .L107
 253:/users/hunter/downloads/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 1432               		.loc 1 253 0
 1433 0474 0E94 0000 		call layer_on
 1434               	.LVL201:
 254:/users/hunter/downloads/tmk_core/common/action.c ****                     } else {
 1435               		.loc 1 254 0
 1436 0478 802F      		mov r24,r16
 1437 047a 00C0      		rjmp .L141
 1438               	.L107:
 256:/users/hunter/downloads/tmk_core/common/action.c ****                         unregister_mods(action.layer_tap.code & 0x0f);
 1439               		.loc 1 256 0
 1440 047c 0E94 0000 		call layer_off
 1441               	.LVL202:
 257:/users/hunter/downloads/tmk_core/common/action.c ****                     }
 1442               		.loc 1 257 0
 1443 0480 802F      		mov r24,r16
 1444 0482 00C0      		rjmp .L149
 1445               	.LVL203:
 1446               	.L101:
 262:/users/hunter/downloads/tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1447               		.loc 1 262 0
 1448 0484 DD20      		tst r13
 1449 0486 01F0      		breq .L108
 263:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1450               		.loc 1 263 0
 1451 0488 F4E0      		ldi r31,lo8(4)
 1452 048a FF15      		cp r31,r15
 1453 048c 00F4      		brsh .+2
 1454 048e 00C0      		rjmp .L56
 1455               	.L109:
 264:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1456               		.loc 1 264 0
 1457 0490 812F      		mov r24,r17
 1458 0492 8F71      		andi r24,lo8(31)
 1459               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1460               		.loc 1 347 0
 1461 0494 0F90      		pop __tmp_reg__
 1462 0496 0F90      		pop __tmp_reg__
 1463 0498 0F90      		pop __tmp_reg__
 1464 049a 0F90      		pop __tmp_reg__
 1465 049c 0F90      		pop __tmp_reg__
 1466 049e DF91      		pop r29
 1467 04a0 CF91      		pop r28
 1468               	.LVL204:
 1469 04a2 1F91      		pop r17
 1470               	.LVL205:
 1471 04a4 0F91      		pop r16
 1472               	.LVL206:
 1473 04a6 FF90      		pop r15
 1474               	.LVL207:
 1475 04a8 EF90      		pop r14
 1476               	.LVL208:
 1477 04aa DF90      		pop r13
 1478               	.LVL209:
 1479 04ac CF90      		pop r12
 1480               	.LVL210:
 1481 04ae BF90      		pop r11
 1482               	.LVL211:
 1483 04b0 AF90      		pop r10
 1484               	.LVL212:
 264:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1485               		.loc 1 264 0
 1486 04b2 0C94 0000 		jmp layer_invert
 1487               	.LVL213:
 1488               	.L108:
 267:/users/hunter/downloads/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1489               		.loc 1 267 0
 1490 04b6 85E0      		ldi r24,lo8(5)
 1491 04b8 8F15      		cp r24,r15
 1492 04ba 00F4      		brsh .+2
 1493 04bc 00C0      		rjmp .L56
 1494 04be 00C0      		rjmp .L109
 1495               	.L105:
 1496 04c0 812F      		mov r24,r17
 1497 04c2 8F71      		andi r24,lo8(31)
 273:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1498               		.loc 1 273 0
 1499 04c4 DD20      		tst r13
 1500 04c6 01F0      		breq .L147
 1501               	.L146:
 1502               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1503               		.loc 1 347 0
 1504 04c8 0F90      		pop __tmp_reg__
 1505 04ca 0F90      		pop __tmp_reg__
 1506 04cc 0F90      		pop __tmp_reg__
 1507 04ce 0F90      		pop __tmp_reg__
 1508 04d0 0F90      		pop __tmp_reg__
 1509 04d2 DF91      		pop r29
 1510 04d4 CF91      		pop r28
 1511               	.LVL214:
 1512 04d6 1F91      		pop r17
 1513               	.LVL215:
 1514 04d8 0F91      		pop r16
 1515               	.LVL216:
 1516 04da FF90      		pop r15
 1517               	.LVL217:
 1518 04dc EF90      		pop r14
 1519               	.LVL218:
 1520 04de DF90      		pop r13
 1521               	.LVL219:
 1522 04e0 CF90      		pop r12
 1523               	.LVL220:
 1524 04e2 BF90      		pop r11
 1525               	.LVL221:
 1526 04e4 AF90      		pop r10
 1527               	.LVL222:
 292:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1528               		.loc 1 292 0
 1529 04e6 0C94 0000 		jmp layer_on
 1530               	.LVL223:
 1531               	.L104:
 1532 04ea 812F      		mov r24,r17
 1533 04ec 8F71      		andi r24,lo8(31)
 277:/users/hunter/downloads/tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 1534               		.loc 1 277 0
 1535 04ee DD20      		tst r13
 1536 04f0 01F0      		breq .L146
 1537               	.L147:
 1538               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1539               		.loc 1 347 0
 1540 04f2 0F90      		pop __tmp_reg__
 1541 04f4 0F90      		pop __tmp_reg__
 1542 04f6 0F90      		pop __tmp_reg__
 1543 04f8 0F90      		pop __tmp_reg__
 1544 04fa 0F90      		pop __tmp_reg__
 1545 04fc DF91      		pop r29
 1546 04fe CF91      		pop r28
 1547               	.LVL224:
 1548 0500 1F91      		pop r17
 1549               	.LVL225:
 1550 0502 0F91      		pop r16
 1551               	.LVL226:
 1552 0504 FF90      		pop r15
 1553               	.LVL227:
 1554 0506 EF90      		pop r14
 1555               	.LVL228:
 1556 0508 DF90      		pop r13
 1557               	.LVL229:
 1558 050a CF90      		pop r12
 1559               	.LVL230:
 1560 050c BF90      		pop r11
 1561               	.LVL231:
 1562 050e AF90      		pop r10
 1563               	.LVL232:
 300:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1564               		.loc 1 300 0
 1565 0510 0C94 0000 		jmp layer_off
 1566               	.LVL233:
 1567               	.L112:
 1568               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1569               		.loc 1 347 0
 1570 0514 0F90      		pop __tmp_reg__
 1571 0516 0F90      		pop __tmp_reg__
 1572 0518 0F90      		pop __tmp_reg__
 1573 051a 0F90      		pop __tmp_reg__
 1574 051c 0F90      		pop __tmp_reg__
 1575 051e DF91      		pop r29
 1576 0520 CF91      		pop r28
 1577               	.LVL234:
 1578 0522 1F91      		pop r17
 1579               	.LVL235:
 1580 0524 0F91      		pop r16
 1581               	.LVL236:
 1582 0526 FF90      		pop r15
 1583               	.LVL237:
 1584 0528 EF90      		pop r14
 1585               	.LVL238:
 1586 052a DF90      		pop r13
 1587               	.LVL239:
 1588 052c CF90      		pop r12
 1589               	.LVL240:
 1590 052e BF90      		pop r11
 1591               	.LVL241:
 1592 0530 AF90      		pop r10
 1593               	.LVL242:
 282:/users/hunter/downloads/tmk_core/common/action.c ****                     break;
 1594               		.loc 1 282 0
 1595 0532 0C94 0000 		jmp layer_clear
 1596               	.LVL243:
 1597               	.L113:
 295:/users/hunter/downloads/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 1598               		.loc 1 295 0
 1599 0536 F110      		cpse r15,__zero_reg__
 1600 0538 00C0      		rjmp .L148
 300:/users/hunter/downloads/tmk_core/common/action.c ****                         }
 1601               		.loc 1 300 0
 1602 053a 812F      		mov r24,r17
 1603 053c 8F71      		andi r24,lo8(31)
 1604 053e 00C0      		rjmp .L147
 1605               	.LVL244:
 1606               	.L66:
 311:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 1607               		.loc 1 311 0
 1608 0540 412F      		mov r20,r17
 1609 0542 4F70      		andi r20,lo8(15)
 1610               	.LVL245:
 1611 0544 602F      		mov r22,r16
 1612 0546 C501      		movw r24,r10
 1613 0548 0E94 0000 		call action_get_macro
 1614               	.LVL246:
 1615               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1616               		.loc 1 347 0
 1617 054c 0F90      		pop __tmp_reg__
 1618 054e 0F90      		pop __tmp_reg__
 1619 0550 0F90      		pop __tmp_reg__
 1620 0552 0F90      		pop __tmp_reg__
 1621 0554 0F90      		pop __tmp_reg__
 1622 0556 DF91      		pop r29
 1623 0558 CF91      		pop r28
 1624               	.LVL247:
 1625 055a 1F91      		pop r17
 1626               	.LVL248:
 1627 055c 0F91      		pop r16
 1628               	.LVL249:
 1629 055e FF90      		pop r15
 1630               	.LVL250:
 1631 0560 EF90      		pop r14
 1632               	.LVL251:
 1633 0562 DF90      		pop r13
 1634               	.LVL252:
 1635 0564 CF90      		pop r12
 1636               	.LVL253:
 1637 0566 BF90      		pop r11
 1638               	.LVL254:
 1639 0568 AF90      		pop r10
 1640               	.LVL255:
 311:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 1641               		.loc 1 311 0
 1642 056a 0C94 0000 		jmp action_macro_play
 1643               	.LVL256:
 1644               	.L67:
 341:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 1645               		.loc 1 341 0
 1646 056e 412F      		mov r20,r17
 1647 0570 4F70      		andi r20,lo8(15)
 1648               	.LVL257:
 1649 0572 602F      		mov r22,r16
 1650 0574 C501      		movw r24,r10
 1651               	/* epilogue start */
 347:/users/hunter/downloads/tmk_core/common/action.c **** 
 1652               		.loc 1 347 0
 1653 0576 0F90      		pop __tmp_reg__
 1654 0578 0F90      		pop __tmp_reg__
 1655 057a 0F90      		pop __tmp_reg__
 1656 057c 0F90      		pop __tmp_reg__
 1657 057e 0F90      		pop __tmp_reg__
 1658 0580 DF91      		pop r29
 1659 0582 CF91      		pop r28
 1660               	.LVL258:
 1661 0584 1F91      		pop r17
 1662               	.LVL259:
 1663 0586 0F91      		pop r16
 1664               	.LVL260:
 1665 0588 FF90      		pop r15
 1666               	.LVL261:
 1667 058a EF90      		pop r14
 1668               	.LVL262:
 1669 058c DF90      		pop r13
 1670               	.LVL263:
 1671 058e CF90      		pop r12
 1672               	.LVL264:
 1673 0590 BF90      		pop r11
 1674               	.LVL265:
 1675 0592 AF90      		pop r10
 1676               	.LVL266:
 341:/users/hunter/downloads/tmk_core/common/action.c ****             break;
 1677               		.loc 1 341 0
 1678 0594 0C94 0000 		jmp action_function
 1679               	.LVL267:
 1680               		.cfi_endproc
 1681               	.LFE11:
 1683               		.section	.text.clear_keyboard_but_mods,"ax",@progbits
 1684               	.global	clear_keyboard_but_mods
 1686               	clear_keyboard_but_mods:
 1687               	.LFB17:
 506:/users/hunter/downloads/tmk_core/common/action.c **** 
 507:/users/hunter/downloads/tmk_core/common/action.c **** void clear_keyboard(void)
 508:/users/hunter/downloads/tmk_core/common/action.c **** {
 509:/users/hunter/downloads/tmk_core/common/action.c ****     clear_mods();
 510:/users/hunter/downloads/tmk_core/common/action.c ****     clear_keyboard_but_mods();
 511:/users/hunter/downloads/tmk_core/common/action.c **** }
 512:/users/hunter/downloads/tmk_core/common/action.c **** 
 513:/users/hunter/downloads/tmk_core/common/action.c **** void clear_keyboard_but_mods(void)
 514:/users/hunter/downloads/tmk_core/common/action.c **** {
 1688               		.loc 1 514 0
 1689               		.cfi_startproc
 1690               	/* prologue: function */
 1691               	/* frame size = 0 */
 1692               	/* stack size = 0 */
 1693               	.L__stack_usage = 0
 515:/users/hunter/downloads/tmk_core/common/action.c ****     clear_weak_mods();
 1694               		.loc 1 515 0
 1695 0000 0E94 0000 		call clear_weak_mods
 1696               	.LVL268:
 516:/users/hunter/downloads/tmk_core/common/action.c ****     clear_keys();
 1697               		.loc 1 516 0
 1698 0004 0E94 0000 		call clear_keys
 1699               	.LVL269:
 517:/users/hunter/downloads/tmk_core/common/action.c ****     send_keyboard_report();
 1700               		.loc 1 517 0
 1701 0008 0C94 0000 		jmp send_keyboard_report
 1702               	.LVL270:
 1703               		.cfi_endproc
 1704               	.LFE17:
 1706               		.section	.text.clear_keyboard,"ax",@progbits
 1707               	.global	clear_keyboard
 1709               	clear_keyboard:
 1710               	.LFB16:
 508:/users/hunter/downloads/tmk_core/common/action.c ****     clear_mods();
 1711               		.loc 1 508 0
 1712               		.cfi_startproc
 1713               	/* prologue: function */
 1714               	/* frame size = 0 */
 1715               	/* stack size = 0 */
 1716               	.L__stack_usage = 0
 509:/users/hunter/downloads/tmk_core/common/action.c ****     clear_keyboard_but_mods();
 1717               		.loc 1 509 0
 1718 0000 0E94 0000 		call clear_mods
 1719               	.LVL271:
 510:/users/hunter/downloads/tmk_core/common/action.c **** }
 1720               		.loc 1 510 0
 1721 0004 0C94 0000 		jmp clear_keyboard_but_mods
 1722               	.LVL272:
 1723               		.cfi_endproc
 1724               	.LFE16:
 1726               		.section	.text.is_tap_key,"ax",@progbits
 1727               	.global	is_tap_key
 1729               	is_tap_key:
 1730               	.LFB18:
 518:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 519:/users/hunter/downloads/tmk_core/common/action.c ****     mousekey_clear();
 520:/users/hunter/downloads/tmk_core/common/action.c ****     mousekey_send();
 521:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 522:/users/hunter/downloads/tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 523:/users/hunter/downloads/tmk_core/common/action.c ****     host_system_send(0);
 524:/users/hunter/downloads/tmk_core/common/action.c ****     host_consumer_send(0);
 525:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 526:/users/hunter/downloads/tmk_core/common/action.c **** }
 527:/users/hunter/downloads/tmk_core/common/action.c **** 
 528:/users/hunter/downloads/tmk_core/common/action.c **** bool is_tap_key(keypos_t key)
 529:/users/hunter/downloads/tmk_core/common/action.c **** {
 1731               		.loc 1 529 0
 1732               		.cfi_startproc
 1733               	.LVL273:
 1734               	/* prologue: function */
 1735               	/* frame size = 0 */
 1736               	/* stack size = 0 */
 1737               	.L__stack_usage = 0
 530:/users/hunter/downloads/tmk_core/common/action.c ****     action_t action = layer_switch_get_action(key);
 1738               		.loc 1 530 0
 1739 0000 0E94 0000 		call layer_switch_get_action
 1740               	.LVL274:
 531:/users/hunter/downloads/tmk_core/common/action.c **** 
 532:/users/hunter/downloads/tmk_core/common/action.c ****     switch (action.kind.id) {
 1741               		.loc 1 532 0
 1742 0004 292F      		mov r18,r25
 1743 0006 2295      		swap r18
 1744 0008 2F70      		andi r18,lo8(15)
 1745 000a 2C30      		cpi r18,lo8(12)
 1746 000c 00F4      		brsh .L156
 1747 000e 2A30      		cpi r18,lo8(10)
 1748 0010 00F4      		brsh .L157
 1749 0012 2250      		subi r18,lo8(-(-2))
 1750 0014 2230      		cpi r18,lo8(2)
 1751 0016 00F4      		brsh .L171
 1752               	.L157:
 1753               	.LVL275:
 533:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 534:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 535:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 536:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 537:/users/hunter/downloads/tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 1754               		.loc 1 537 0
 1755 0018 803E      		cpi r24,lo8(-32)
 1756 001a 00F0      		brlo .L159
 1757 001c 803F      		cpi r24,lo8(-16)
 1758 001e 01F4      		brne .L171
 1759               	.L159:
 538:/users/hunter/downloads/tmk_core/common/action.c ****                 case 0x00 ... 0xdf:
 539:/users/hunter/downloads/tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 540:/users/hunter/downloads/tmk_core/common/action.c ****                     return true;
 1760               		.loc 1 540 0
 1761 0020 81E0      		ldi r24,lo8(1)
 1762               	.LVL276:
 1763 0022 0895      		ret
 1764               	.L156:
 532:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 1765               		.loc 1 532 0
 1766 0024 2C30      		cpi r18,lo8(12)
 1767 0026 01F0      		breq .L158
 1768 0028 2F30      		cpi r18,lo8(15)
 1769 002a 01F0      		breq .L158
 1770               	.LVL277:
 1771               	.L171:
 541:/users/hunter/downloads/tmk_core/common/action.c ****             }
 542:/users/hunter/downloads/tmk_core/common/action.c ****             return false;
 1772               		.loc 1 542 0
 1773 002c 80E0      		ldi r24,0
 1774               	.LVL278:
 1775               	/* epilogue start */
 543:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_MACRO:
 544:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_FUNCTION:
 545:/users/hunter/downloads/tmk_core/common/action.c ****             if (action.func.opt & FUNC_TAP) { return true; }
 546:/users/hunter/downloads/tmk_core/common/action.c ****             return false;
 547:/users/hunter/downloads/tmk_core/common/action.c ****     }
 548:/users/hunter/downloads/tmk_core/common/action.c ****     return false;
 549:/users/hunter/downloads/tmk_core/common/action.c **** }
 1776               		.loc 1 549 0
 1777 002e 0895      		ret
 1778               	.L158:
 545:/users/hunter/downloads/tmk_core/common/action.c ****             return false;
 1779               		.loc 1 545 0
 1780 0030 93FB      		bst r25,3
 1781 0032 8827      		clr r24
 1782 0034 80F9      		bld r24,0
 1783 0036 0895      		ret
 1784               		.cfi_endproc
 1785               	.LFE18:
 1787               		.section	.text.debug_event,"ax",@progbits
 1788               	.global	debug_event
 1790               	debug_event:
 1791               	.LFB19:
 550:/users/hunter/downloads/tmk_core/common/action.c **** 
 551:/users/hunter/downloads/tmk_core/common/action.c **** 
 552:/users/hunter/downloads/tmk_core/common/action.c **** /*
 553:/users/hunter/downloads/tmk_core/common/action.c ****  * debug print
 554:/users/hunter/downloads/tmk_core/common/action.c ****  */
 555:/users/hunter/downloads/tmk_core/common/action.c **** void debug_event(keyevent_t event)
 556:/users/hunter/downloads/tmk_core/common/action.c **** {
 1792               		.loc 1 556 0
 1793               		.cfi_startproc
 1794 0000 CF93      		push r28
 1795               	.LCFI17:
 1796               		.cfi_def_cfa_offset 3
 1797               		.cfi_offset 28, -2
 1798 0002 DF93      		push r29
 1799               	.LCFI18:
 1800               		.cfi_def_cfa_offset 4
 1801               		.cfi_offset 29, -3
 1802 0004 00D0      		rcall .
 1803 0006 00D0      		rcall .
 1804 0008 1F92      		push __zero_reg__
 1805               	.LCFI19:
 1806               		.cfi_def_cfa_offset 9
 1807 000a CDB7      		in r28,__SP_L__
 1808 000c DEB7      		in r29,__SP_H__
 1809               	.LCFI20:
 1810               		.cfi_def_cfa_register 28
 1811               	/* prologue: function */
 1812               	/* frame size = 5 */
 1813               	/* stack size = 7 */
 1814               	.L__stack_usage = 7
 1815               	/* epilogue start */
 557:/users/hunter/downloads/tmk_core/common/action.c ****     dprintf("%04X%c(%u)", (event.key.row<<8 | event.key.col), (event.pressed ? 'd' : 'u'), event.ti
 558:/users/hunter/downloads/tmk_core/common/action.c **** }
 1816               		.loc 1 558 0
 1817 000e 0F90      		pop __tmp_reg__
 1818 0010 0F90      		pop __tmp_reg__
 1819 0012 0F90      		pop __tmp_reg__
 1820 0014 0F90      		pop __tmp_reg__
 1821 0016 0F90      		pop __tmp_reg__
 1822 0018 DF91      		pop r29
 1823 001a CF91      		pop r28
 1824 001c 0895      		ret
 1825               		.cfi_endproc
 1826               	.LFE19:
 1828               		.section	.text.debug_record,"ax",@progbits
 1829               	.global	debug_record
 1831               	debug_record:
 1832               	.LFB20:
 559:/users/hunter/downloads/tmk_core/common/action.c **** 
 560:/users/hunter/downloads/tmk_core/common/action.c **** void debug_record(keyrecord_t record)
 561:/users/hunter/downloads/tmk_core/common/action.c **** {
 1833               		.loc 1 561 0
 1834               		.cfi_startproc
 1835 0000 CF93      		push r28
 1836               	.LCFI21:
 1837               		.cfi_def_cfa_offset 3
 1838               		.cfi_offset 28, -2
 1839 0002 DF93      		push r29
 1840               	.LCFI22:
 1841               		.cfi_def_cfa_offset 4
 1842               		.cfi_offset 29, -3
 1843 0004 00D0      		rcall .
 1844 0006 00D0      		rcall .
 1845 0008 00D0      		rcall .
 1846               	.LCFI23:
 1847               		.cfi_def_cfa_offset 10
 1848 000a CDB7      		in r28,__SP_L__
 1849 000c DEB7      		in r29,__SP_H__
 1850               	.LCFI24:
 1851               		.cfi_def_cfa_register 28
 1852               	/* prologue: function */
 1853               	/* frame size = 6 */
 1854               	/* stack size = 8 */
 1855               	.L__stack_usage = 8
 1856               	/* epilogue start */
 562:/users/hunter/downloads/tmk_core/common/action.c ****     debug_event(record.event);
 563:/users/hunter/downloads/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 564:/users/hunter/downloads/tmk_core/common/action.c ****     dprintf(":%u%c", record.tap.count, (record.tap.interrupted ? '-' : ' '));
 565:/users/hunter/downloads/tmk_core/common/action.c **** #endif
 566:/users/hunter/downloads/tmk_core/common/action.c **** }
 1857               		.loc 1 566 0
 1858 000e 2696      		adiw r28,6
 1859 0010 0FB6      		in __tmp_reg__,__SREG__
 1860 0012 F894      		cli
 1861 0014 DEBF      		out __SP_H__,r29
 1862 0016 0FBE      		out __SREG__,__tmp_reg__
 1863 0018 CDBF      		out __SP_L__,r28
 1864 001a DF91      		pop r29
 1865 001c CF91      		pop r28
 1866 001e 0895      		ret
 1867               		.cfi_endproc
 1868               	.LFE20:
 1870               		.section	.text.debug_action,"ax",@progbits
 1871               	.global	debug_action
 1873               	debug_action:
 1874               	.LFB21:
 567:/users/hunter/downloads/tmk_core/common/action.c **** 
 568:/users/hunter/downloads/tmk_core/common/action.c **** void debug_action(action_t action)
 569:/users/hunter/downloads/tmk_core/common/action.c **** {
 1875               		.loc 1 569 0
 1876               		.cfi_startproc
 1877               	.LVL279:
 1878               	/* prologue: function */
 1879               	/* frame size = 0 */
 1880               	/* stack size = 0 */
 1881               	.L__stack_usage = 0
 1882               	/* epilogue start */
 570:/users/hunter/downloads/tmk_core/common/action.c ****     switch (action.kind.id) {
 571:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS:             dprint("ACT_LMODS");             break;
 572:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_RMODS:             dprint("ACT_RMODS");             break;
 573:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LMODS_TAP:         dprint("ACT_LMODS_TAP");         break;
 574:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_RMODS_TAP:         dprint("ACT_RMODS_TAP");         break;
 575:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_USAGE:             dprint("ACT_USAGE");             break;
 576:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_MOUSEKEY:          dprint("ACT_MOUSEKEY");          break;
 577:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER:             dprint("ACT_LAYER");             break;
 578:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP:         dprint("ACT_LAYER_TAP");         break;
 579:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:     dprint("ACT_LAYER_TAP_EXT");     break;
 580:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_MACRO:             dprint("ACT_MACRO");             break;
 581:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_COMMAND:           dprint("ACT_COMMAND");           break;
 582:/users/hunter/downloads/tmk_core/common/action.c ****         case ACT_FUNCTION:          dprint("ACT_FUNCTION");          break;
 583:/users/hunter/downloads/tmk_core/common/action.c ****         default:                    dprint("UNKNOWN");               break;
 584:/users/hunter/downloads/tmk_core/common/action.c ****     }
 585:/users/hunter/downloads/tmk_core/common/action.c ****     dprintf("[%X:%02X]", action.kind.param>>8, action.kind.param&0xff);
 586:/users/hunter/downloads/tmk_core/common/action.c **** }
 1883               		.loc 1 586 0
 1884 0000 0895      		ret
 1885               		.cfi_endproc
 1886               	.LFE21:
 1888               		.text
 1889               	.Letext0:
 1890               		.file 3 "/opt/local/avr/include/stdint.h"
 1891               		.file 4 "/users/hunter/downloads/tmk_core/common/keycode.h"
 1892               		.file 5 "/users/hunter/downloads/tmk_core/common/report.h"
 1893               		.file 6 "/users/hunter/downloads/tmk_core/common/host.h"
 1894               		.file 7 "/users/hunter/downloads/tmk_core/common/mousekey.h"
 1895               		.file 8 "/users/hunter/downloads/tmk_core/common/command.h"
 1896               		.file 9 "/users/hunter/downloads/tmk_core/common/action_code.h"
 1897               		.file 10 "/users/hunter/downloads/tmk_core/common/action.h"
 1898               		.file 11 "/users/hunter/downloads/tmk_core/common/action_layer.h"
 1899               		.file 12 "/users/hunter/downloads/tmk_core/common/action_util.h"
 1900               		.file 13 "/users/hunter/downloads/tmk_core/common/avr/xprintf.h"
 1901               		.file 14 "/users/hunter/downloads/tmk_core/common/debug.h"
 1902               		.file 15 "/users/hunter/downloads/tmk_core/common/action_macro.h"
 1903               		.file 16 "/users/hunter/downloads/tmk_core/common/hook.h"
 1904               		.file 17 "/users/hunter/downloads/tmk_core/common/action_tapping.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action.c
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:4      *ABS*:000000000000003f __SREG__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:13     .text.action_exec:0000000000000000 action_exec
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:121    .text.register_code:0000000000000000 register_code
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:349    .text.unregister_code:0000000000000000 unregister_code
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:428    .text.register_mods:0000000000000000 register_mods
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:456    .text.unregister_mods:0000000000000000 unregister_mods
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:484    .text.process_action:0000000000000000 process_action
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1686   .text.clear_keyboard_but_mods:0000000000000000 clear_keyboard_but_mods
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1709   .text.clear_keyboard:0000000000000000 clear_keyboard
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1729   .text.is_tap_key:0000000000000000 is_tap_key
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1790   .text.debug_event:0000000000000000 debug_event
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1831   .text.debug_record:0000000000000000 debug_record
/var/folders/qj/kb_cqn1j20vbbrqdphlhjt3c0000gn/T//ccwwqNkD.s:1873   .text.debug_action:0000000000000000 debug_action

UNDEFINED SYMBOLS
hook_matrix_change
action_tapping_process
command_proc
add_key
send_keyboard_report
add_mods
host_system_send
host_consumer_send
del_key
del_mods
layer_switch_get_action
layer_debug
default_layer_debug
__tablejump2__
add_weak_mods
del_weak_mods
set_oneshot_mods
clear_oneshot_mods
get_mods
default_layer_and
default_layer_xor
default_layer_or
layer_and
layer_xor
layer_or
layer_move
layer_on
layer_off
layer_invert
layer_clear
action_get_macro
action_macro_play
action_function
clear_weak_mods
clear_keys
clear_mods
